<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: android | Young_Blog]]></title>
  <link href="http://LanderlYoung.github.io/tags/android/atom.xml" rel="self"/>
  <link href="http://LanderlYoung.github.io/"/>
  <updated>2014-05-13T13:22:01+08:00</updated>
  <id>http://LanderlYoung.github.io/</id>
  <author>
    <name><![CDATA[LanderlYoung]]></name>
    <email><![CDATA[landerlyoung@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[2048游戏安卓移植版]]></title>
    <link href="http://LanderlYoung.github.io/blog/2014/03/22/2048you-xi-an-zhuo-yi-zhi-ban/"/>
    <updated>2014-03-22T00:51:51+08:00</updated>
    <id>http://LanderlYoung.github.io/blog/2014/03/22/2048you-xi-an-zhuo-yi-zhi-ban</id>
    <content type="html"><![CDATA[<p>这几天一直在玩2048游戏，觉得这个游戏很有意思。上次研究了一下源代码于是就写了个‘外挂’(囧)。后来在手机上玩，发现网页版的玩着不爽，于是想着把这个游戏当成基于安卓的html5游戏。于是就看了一下怎么写android的html5游戏。的出结论是基于WebView——在应用中开一个区域显示网页内容，所以这个区域就是一个浏览器了。经过两天的努力算是弄了个<a href="/assets/storage/2048">小样</a>出来。最后还是利用WebView移植到<a href="https://github.com/LanderlYoung/2048_android">安卓平台</a>，使用起来和native app没啥区别。</p>

<!--more-->


<p>不过同时发现一个问题——Android的WebView性能不高。html5游戏用手机的浏览器直接打开一点都不卡，要多流畅就多流畅，一旦打包成apk装到手机上就不行了，越玩越卡。后来加了一个about的页面，这个页面是从页面上面‘落’下来的效果。当这个‘落’的动作变成幻灯片的时候我终于知道了一定是WebView的javascript定时器的问题，WebView的javascript频率有问题。</p>

<p>移植神马的最烦的是浏览器兼容问题，针对每一种分辨路都得写一套css出来。今天有点玩了，列出来写这个小应用学到的东西，具体细节有机会再补充吧。</p>

<ol>
<li>font awesome 的使用，利用font awesome显示矢量图标</li>
<li>div的垂直居中（利用javascript）</li>
<li>about的下落效果（其实在写chrome的插件的时候有用到）</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2048游戏的'外挂'代码]]></title>
    <link href="http://LanderlYoung.github.io/blog/2014/03/14/2048you-xi-de-slash-wai-gua-slash-dai-ma/"/>
    <updated>2014-03-14T22:12:35+08:00</updated>
    <id>http://LanderlYoung.github.io/blog/2014/03/14/2048you-xi-de-slash-wai-gua-slash-dai-ma</id>
    <content type="html"><![CDATA[<p>这两天<a href="http://gabrielecirulli.github.io/2048/">‘2048’</a>游戏很火，于是我秉承这学习的态度研究了一下他的代码。
本以为使用canvas实现的，后来发现就是普通的html元素，突然觉得开发者还是很厉害的！<br/>
说实话，这个游戏设计得的确很牛。牛的不是代码，是游戏创意！如果发到app store上估计会和flappy bird有的一拼吧。</p>

<!--more-->


<h2>我是邪恶的开始</h2>

<p>因为研究了一下游戏的源代码，突然发现可以很简单的让游戏想开了外挂一样牛叉！</p>

<p>``` cpp
(function(initialNum){</p>

<pre><code>var a = new GameManager(4, KeyboardInputManager, HTMLActuator, LocalScoreManager);
var row = 4;
var column = 4;
for(var i = 0; i &lt; row; i++) {
    for(var j = 0; j &lt; column;j++) {
        tile =  new Tile({x:i, y:j}, initialNum);
        a.grid.cells[i][j] = tile;
    }
}
</code></pre>

<p>})(128);
```</p>

<p>这就是所有'外挂'代码，打开chrome的console。输入进去就可以看到奇迹。。。。</p>

<h2>郑重声明</h2>

<p>这只是一个个人的无聊作品，如果因为这个东西让你丧失了对本游戏的兴趣，请无视这段代码！</p>
]]></content>
  </entry>
  
</feed>
