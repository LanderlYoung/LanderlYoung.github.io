<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: bilibili | Young_Blog]]></title>
  <link href="http://LanderlYoung.github.io/tags/bilibili/atom.xml" rel="self"/>
  <link href="http://LanderlYoung.github.io/"/>
  <updated>2017-03-07T01:39:44+08:00</updated>
  <id>http://LanderlYoung.github.io/</id>
  <author>
    <name><![CDATA[LanderlYoung]]></name>
    <email><![CDATA[landerlyoung@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ijkplyer 编译配置]]></title>
    <link href="http://LanderlYoung.github.io/blog/2015/07/09/ijkplyer-bian-yi-pei-zhi/"/>
    <updated>2015-07-09T18:53:18+08:00</updated>
    <id>http://LanderlYoung.github.io/blog/2015/07/09/ijkplyer-bian-yi-pei-zhi</id>
    <content type="html"><![CDATA[<p>#IjkMediaPlayer 使用手册</p>

<blockquote>
  <p>taylorcyang@tencent.com</p>
</blockquote>

<ol>
  <li>首先编译环境是OS X或者linux或者其他*nix系统（Windows暂不支持，因为ijkplayer中使用了软链接o(╯□╰)o）。</li>
  <li>其次系统中需要安装以下工具：
    <ol>
      <li>git</li>
      <li>Android ndk 并配置环境变量 <code>ANDROID_NDK</code></li>
      <li>Android sdk 并配置环境变量 <code>ANDROID_SDK</code></li>
    </ol>
  </li>
</ol>

<p>项目地址：<a href="">https://github.com/Bilibili/ijkplayer</a></p>

<p><strong>note</strong>:</p>

<p>如果你觉得TL;DR。不想知道ijkmediaplayer是怎么编译的那就执行<code>./init.sh</code>脚本。让他来帮你做初始化（就是下面的1-3步），然后使用<code>./make.sh</code>做编译甚至是编译之后so的拷贝工作，下文就不用看了。</p>

<p>三个需要的文件分别是：</p>

<ol>
  <li><a href="https://gist.github.com/LanderlYoung/046f4b90b0da26484d5e">init.sh</a></li>
  <li><a href="https://gist.github.com/LanderlYoung/63d4c59260bce20c4a0f">make.sh</a></li>
  <li><a href="https://gist.github.com/LanderlYoung/a28ddb1fb1e575be91ec">module.sh</a></li>
</ol>

<!--more-->

<p>##编译步骤：</p>

<p>###1. 下载代码</p>

<pre><code class="language-bash">git clone https://github.com/Bilibili/ijkplayer.git

</code></pre>

<p>###2. 切换到稳定分支</p>

<p>在开发视频播放组件时ijkplayer的稳定版本是n0.2.2因此本手册以n0.2.2为实例。若发布新版本可以切换分支并测试兼容性。可以使用<code>git tag</code>命令查看release版本。</p>

<pre><code class="language-bash">git checkout -B n_0.2.2 n0.2.2

</code></pre>

<p>###3. 初始化</p>

<p>首先进入工程根目录</p>

<pre><code class="language-bash">cd ijkplayer

</code></pre>

<p>然后执行</p>

<pre><code class="language-bash">./init-android.sh

</code></pre>

<p>执行初始化操作：包括下载ffmpeg源代码，配置ffmpeg编译选项，下载。</p>

<p><strong>注意</strong>：n0.2.2版本的ffmpeg仓库换成了videolan的，如果发现不能下载可以把init-android.sh中的</p>

<pre><code class="language-bash">IJK_FFMPEG_UPSTREAM=git://git.videolan.org/ffmpeg.git

</code></pre>

<p>替换成</p>

<pre><code class="language-bash">IJK_FFMPEG_UPSTREAM=https://github.com/bbcallen/FFmpeg.git

</code></pre>

<p>然后再进行初始化操作。</p>

<p>这里初始化会生成ffmpeg编译配置文件，主要配置需要哪些组件。因为android端希望尽量减小so库的大小，因此会disable掉很多组件。这里可以使用我准备的这个module.sh文件覆盖掉 项目根目录下的config/module.sh文件。</p>

<p>这个module.sh文件已经去处了绝大部分不用的组件，并且启用了硬件加速。</p>

<p>###4. 编译</p>

<p>进入项目根目录下的android目录</p>

<pre><code class="language-bash">cd android
</code></pre>

<p>编译 ffmpeg 依赖库。由于大多数设备都为 armv7a 架构，故在这里使用之。使用 armv5|armv7a|x86 作为输入来设定平台，或传入 all|clean|check 进行[编译所有平台/清理/检查]。
<code>bash
./compile-ffmpeg.sh clean
./compile-ffmpeg.sh armv7a
</code></p>

<p>若报错，请检查以上各项配置是否正确；否则耐心等待编译完毕即可。</p>

<p>接下来就可以编译 ijkplayer 了：
&#8220;`bash
./compile-ijk.sh</p>

<p>&#8220;`</p>

<p>##使用ijkplayer</p>

<p>android目录下的ijkmediaplayer就是ijk播放器的本体了，编译完成之后会在libs目录中生成相应的so动态库。这时候只需要把这些库拷到工程目录的ijkmdediaplayer module的libs下就好了。</p>

<p>当然你可以把整个android目录导入Android Studio，作者已经写好了gradle配置，这里是一个demo工程。它有三个module：</p>

<ol>
  <li>ijkmediademo是demo本体，是个很好的教学示例</li>
  <li>ijkmediaplayer就是播放器了，这里是一个library module</li>
  <li>ijkmediawidget是基于ijkmediaplayer的各种控件，主要提供类似VideoView的控件方便使用。当然这个是可选组件。</li>
</ol>

<p>如果看到这说明你很有研究精神，给自己点个赞吧n(<em>≧▽≦</em>)n</p>

<p>###附录-关于module.sh</p>

<p>module.sh中配置了ffmpeg使用哪些decoder，demuser等信息。我给的模板中配置了如下信息</p>

<p>####解码器
| 解码器 | 支持格式 |
| :—-: | :—-: |
| aac、aac_latm | aac 音频 |
| ac3 | ac3 音频 |
| mp3* | mp3 音频|
| flv | flv 视频 |
| h263、h263i、h263p | h263 视频（可以考虑舍弃）|
| h264 | h264 视频（重要！）|
| msmpeg4v_crystalhd、msmpeg4v1、msmpeg4v2、msmpeg4v3 | wmv 视频 |
| wmav1、wmav2、wmavoice | wmv 音频 |</p>

<p>###解容器
| 解容器 | 支持容器格式 |
| :—: | : ——-: |
| aac | aac 音频容器 |
| ac3 | ac3 音频容器 |
| flv | flv 视频容器 |
| hls | HTTP Live Streaming |
| latm | aac latm封装格式|
| live_flv |直播 flv格式|
| loas| aac loas封装格式|
| m4v | m4v/mp4 视频 |
| mov | mov 视频 |
| mp3| mp3 音频|
|matroska | mkv 视频|
|avi | avi 视频|
|mpegps、mpegts、mpegvideo| mpeg封装格式|
|asf | wmv 格式|</p>

]]></content>
  </entry>
  
</feed>
