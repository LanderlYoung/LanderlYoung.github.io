<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Young_Blog]]></title>
  <link href="http://LanderlYoung.github.io/atom.xml" rel="self"/>
  <link href="http://LanderlYoung.github.io/"/>
  <updated>2016-01-11T23:46:35+08:00</updated>
  <id>http://LanderlYoung.github.io/</id>
  <author>
    <name><![CDATA[LanderlYoung]]></name>
    <email><![CDATA[landerlyoung@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[retro-lambda 测试报告]]></title>
    <link href="http://LanderlYoung.github.io/blog/2016/01/11/re-lambda-ce-shi-bao-gao/"/>
    <updated>2016-01-11T00:10:42+08:00</updated>
    <id>http://LanderlYoung.github.io/blog/2016/01/11/re-lambda-ce-shi-bao-gao</id>
    <content type="html"><![CDATA[<h1>retrolambda测试报告</h1>

<p>先说结论</p>

<ol>
<li>堆栈行号完全匹配！没有任何问题，包括最新的android build tools自身支持的switch string，MultiCatch，和retrolambda的所有特性都没问题。</li>
<li>lambda是通过生成class来实现的，而且是生成static class而不是anonumous class，因此没有this$0引用。且支持<strong><a href="https://docs.oracle.com/javase/tutorial/java/javaOO/methodreferences.html">method reference （推荐阅读）</a></strong>。</li>
<li>但是lambda会生成冗余方法，每个Lambda类4个方法（下面有代码），其中一个是原接口的方法；增加3个，一个是构造方法，两个是静态工厂方法。</li>
<li>支持MultiCatch。</li>
<li>支持interface加default方法，亲测可行，但是使用该特性必须禁用增量编译。</li>
<li>支持interface加static方法，亲测不可行（可能版本bug），同上需要禁用增量编译。</li>
<li>支持tryWithResource但是估计这个用的不多，问题在于默认会吞掉Exception。同时Android Studio会报错说API19才能用，但是可以编译。</li>
<li>不支持Java8的新增API，包括Lambda相关的function包，和其他新包比如stream api。</li>
</ol>


<!--more-->


<p>下面是测试细节以及源代码和反编译代码对比：</p>

<h2>switch string（这个是java7自身的语法糖）</h2>

<p>源代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">private</span> <span class="k">static</span> <span class="kt">void</span> <span class="nf">switchWithString</span><span class="p">(</span><span class="n">String</span> <span class="n">str</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">System</span><span class="p">.</span><span class="n">out</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">&quot;switchWithString&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">switch</span> <span class="p">(</span><span class="n">str</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="s">&quot;hello&quot;</span><span class="o">:</span>
</span><span class='line'>            <span class="n">System</span><span class="p">.</span><span class="n">out</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">&quot;Hello&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="k">case</span> <span class="s">&quot;World&quot;</span><span class="o">:</span>
</span><span class='line'>        <span class="k">case</span> <span class="s">&quot;world&quot;</span><span class="o">:</span>
</span><span class='line'>            <span class="k">new</span> <span class="n">Throwable</span><span class="p">().</span><span class="n">printStackTrace</span><span class="p">();</span>
</span><span class='line'>            <span class="k">break</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>class反编译：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">private</span> <span class="k">static</span> <span class="kt">void</span> <span class="nf">switchWithString</span><span class="p">(</span><span class="n">String</span> <span class="n">str</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">System</span><span class="p">.</span><span class="n">out</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">&quot;switchWithString&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">byte</span> <span class="n">var2</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>    <span class="k">switch</span><span class="p">(</span><span class="n">str</span><span class="p">.</span><span class="n">hashCode</span><span class="p">())</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">case</span> <span class="mi">83766130</span><span class="o">:</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">str</span><span class="p">.</span><span class="n">equals</span><span class="p">(</span><span class="s">&quot;World&quot;</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">var2</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">break</span><span class="p">;</span>
</span><span class='line'>    <span class="k">case</span> <span class="mi">99162322</span><span class="o">:</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">str</span><span class="p">.</span><span class="n">equals</span><span class="p">(</span><span class="s">&quot;hello&quot;</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">var2</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">break</span><span class="p">;</span>
</span><span class='line'>    <span class="k">case</span> <span class="mi">113318802</span><span class="o">:</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">str</span><span class="p">.</span><span class="n">equals</span><span class="p">(</span><span class="s">&quot;world&quot;</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">var2</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">switch</span><span class="p">(</span><span class="n">var2</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">case</span> <span class="mi">0</span><span class="o">:</span>
</span><span class='line'>        <span class="n">System</span><span class="p">.</span><span class="n">out</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">&quot;Hello&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="k">break</span><span class="p">;</span>
</span><span class='line'>    <span class="k">case</span> <span class="mi">1</span><span class="o">:</span>
</span><span class='line'>    <span class="k">case</span> <span class="mi">2</span><span class="o">:</span>
</span><span class='line'>        <span class="p">(</span><span class="k">new</span> <span class="n">Throwable</span><span class="p">()).</span><span class="n">printStackTrace</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>lambda</h2>

<p>源代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">findViewById</span><span class="p">(</span><span class="n">R</span><span class="p">.</span><span class="n">id</span><span class="p">.</span><span class="n">stop</span><span class="p">).</span><span class="n">setOnClickListener</span><span class="p">((</span><span class="n">v</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">//Yes! use &quot;this&quot; to refer to the MainActivity.this</span>
</span><span class='line'>    <span class="n">Toast</span><span class="p">.</span><span class="n">makeText</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="s">&quot;Hello lambda&quot;</span><span class="p">,</span> <span class="n">Toast</span><span class="p">.</span><span class="n">LENGTH_SHORT</span><span class="p">).</span><span class="n">show</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">System</span><span class="p">.</span><span class="n">out</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">&quot;crash in lambda&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">new</span> <span class="nf">Throwable</span><span class="p">().</span><span class="n">printStackTrace</span><span class="p">();</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>class反编译：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">this</span><span class="p">.</span><span class="n">findViewById</span><span class="p">(</span><span class="mi">2131492943</span><span class="p">).</span><span class="n">setOnClickListener</span><span class="p">(</span><span class="n">MainActivity</span><span class="err">$$</span><span class="n">Lambda</span><span class="err">$</span><span class="mf">1.</span><span class="n">lambdaFactory</span><span class="err">$</span><span class="p">(</span><span class="k">this</span><span class="p">));</span>
</span><span class='line'><span class="k">final</span> <span class="k">class</span> <span class="nc">MainActivity</span><span class="err">$$</span><span class="n">Lambda</span><span class="err">$</span><span class="mi">1</span> <span class="n">implements</span> <span class="n">OnClickListener</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">private</span> <span class="k">final</span> <span class="n">MainActivity</span> <span class="n">arg</span><span class="err">$</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">private</span> <span class="n">MainActivity</span><span class="err">$$</span><span class="n">Lambda</span><span class="err">$</span><span class="mi">1</span><span class="p">(</span><span class="n">MainActivity</span> <span class="n">var1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="n">arg</span><span class="err">$</span><span class="mi">1</span> <span class="o">=</span> <span class="n">var1</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">private</span> <span class="k">static</span> <span class="n">OnClickListener</span> <span class="n">get</span><span class="err">$</span><span class="n">Lambda</span><span class="p">(</span><span class="n">MainActivity</span> <span class="n">var0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="k">new</span> <span class="n">MainActivity</span><span class="err">$$</span><span class="n">Lambda</span><span class="err">$</span><span class="mi">1</span><span class="p">(</span><span class="n">var0</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">public</span> <span class="kt">void</span> <span class="n">onClick</span><span class="p">(</span><span class="n">View</span> <span class="n">var1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">MainActivity</span><span class="p">.</span><span class="n">access</span><span class="err">$</span><span class="n">lambda</span><span class="err">$</span><span class="mi">0</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="n">arg</span><span class="err">$</span><span class="mi">1</span><span class="p">,</span> <span class="n">var1</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">public</span> <span class="k">static</span> <span class="n">OnClickListener</span> <span class="n">lambdaFactory</span><span class="err">$</span><span class="p">(</span><span class="n">MainActivity</span> <span class="n">var0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="k">new</span> <span class="n">MainActivity</span><span class="err">$$</span><span class="n">Lambda</span><span class="err">$</span><span class="mi">1</span><span class="p">(</span><span class="n">var0</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>可以看到生成的class中两个工厂方法get$Lambda和lambdaFactory$其实除了名字其他都一样，而且代码中只调用了后者，因此proguard混淆之后，会删除get$Lambda方法。这样和之前的InnerClass比起来就只是多了LambdaFactory$一个工厂方法。然而lambda的实现中会在MainActivity中添加一个 MainActivity.access$lambda$0 ，然后该方法会调用 MainActivity.lambda$onCreate$0 方法（这个命名和java8的lambda是一致的）。然而这里其实没必要使用access方法，因为lambda方法（即上文的MainActivity.lambda$onCreate$0 ）是编译器生成的，不会被其他方法引用。（嗯！java8就没有access方法！），不过没关系retrolambda是开源的，不爽可以自己改（就是这么任性！）。</p>

<p>优：</p>

<ol>
<li>把InnerClass改成了外部static class。避免了this$0逸出。</li>
</ol>


<p>劣：</p>

<pre><code>1. 所以总体方法数多了两个。可以改成只多一个。
2. lambda内部的堆栈dump会多几层，但是最后还是会定位到lambda内部。
</code></pre>

<p>下面是lambda内部crash堆栈dump：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>08-14 09:30:46.402  11348-11348/young.com.demo I/System.out﹕ crash in lambda
</span><span class='line'>08-14 09:30:46.402  11348-11348/young.com.demo W/System.err﹕ java.lang.Throwable
</span><span class='line'>08-14 09:30:46.402  11348-11348/young.com.demo W/System.err﹕ at young.com.demo.MainActivity.lambda<span class="nv">$onCreate$0</span><span class="o">(</span>MainActivity.java:81<span class="o">)</span>
</span><span class='line'>08-14 09:30:46.402  11348-11348/young.com.demo W/System.err﹕ at young.com.demo.MainActivity.access<span class="nv">$lambda$0</span><span class="o">(</span>MainActivity.java<span class="o">)</span>
</span><span class='line'>08-14 09:30:46.402  11348-11348/young.com.demo W/System.err﹕ at young.com.demo.MainActivity<span class="nv">$$</span>Lambda<span class="nv">$1</span>.onClick<span class="o">(</span>Unknown Source<span class="o">)</span>
</span><span class='line'>08-14 09:30:46.402  11348-11348/young.com.demo W/System.err﹕ at android.view.View.performClick<span class="o">(</span>View.java:4781<span class="o">)</span>
</span><span class='line'>08-14 09:30:46.402  11348-11348/young.com.demo W/System.err﹕ at android.view.View<span class="nv">$PerformClick</span>.run<span class="o">(</span>View.java:19873<span class="o">)</span>
</span><span class='line'>08-14 09:30:46.402  11348-11348/young.com.demo W/System.err﹕ at android.os.Handler.handleCallback<span class="o">(</span>Handler.java:739<span class="o">)</span>
</span><span class='line'>08-14 09:30:46.403  11348-11348/young.com.demo W/System.err﹕ at android.os.Handler.dispatchMessage<span class="o">(</span>Handler.java:95<span class="o">)</span>
</span><span class='line'>08-14 09:30:46.403  11348-11348/young.com.demo W/System.err﹕ at android.os.Looper.loop<span class="o">(</span>Looper.java:135<span class="o">)</span>
</span><span class='line'>08-14 09:30:46.403  11348-11348/young.com.demo W/System.err﹕ at android.app.ActivityThread.main<span class="o">(</span>ActivityThread.java:5289<span class="o">)</span>
</span><span class='line'>08-14 09:30:46.403  11348-11348/young.com.demo W/System.err﹕ at java.lang.reflect.Method.invoke<span class="o">(</span>Native Method<span class="o">)</span>
</span><span class='line'>08-14 09:30:46.403  11348-11348/young.com.demo W/System.err﹕ at java.lang.reflect.Method.invoke<span class="o">(</span>Method.java:372<span class="o">)</span>
</span><span class='line'>08-14 09:30:46.403  11348-11348/young.com.demo W/System.err﹕ at com.android.internal.os.ZygoteInit<span class="nv">$MethodAndArgsCaller</span>.run<span class="o">(</span>ZygoteInit.java:904<span class="o">)</span>
</span><span class='line'>08-14 09:30:46.403  11348-11348/young.com.demo W/System.err﹕ at com.android.internal.os.ZygoteInit.main<span class="o">(</span>ZygoteInit.java:699<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Lambda Method Reference：</h2>

<p>源代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">private</span> <span class="n">interface</span> <span class="n">StringConsumer</span> <span class="p">{</span>
</span><span class='line'>    <span class="kt">void</span> <span class="n">consumeAString</span><span class="p">(</span><span class="n">String</span> <span class="n">str</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">private</span> <span class="k">static</span> <span class="kt">void</span> <span class="n">testMethodReference</span><span class="p">(</span><span class="n">StringConsumer</span> <span class="n">sc</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">sc</span><span class="p">.</span><span class="n">consumeAString</span><span class="p">(</span><span class="s">&quot;testStringConsumer&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">testMethodReference</span><span class="p">(</span><span class="n">System</span><span class="p">.</span><span class="n">out</span><span class="o">::</span><span class="n">println</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>class反编译：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">testMethodReference</span><span class="p">(</span><span class="n">MainActivity</span><span class="err">$$</span><span class="n">Lambda</span><span class="err">$</span><span class="mf">4.</span><span class="n">lambdaFactory</span><span class="err">$</span><span class="p">(</span><span class="n">var10000</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'><span class="k">final</span> <span class="k">class</span> <span class="nc">MainActivity</span><span class="err">$$</span><span class="n">Lambda</span><span class="err">$</span><span class="mi">4</span> <span class="n">implements</span> <span class="n">StringConsumer</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">private</span> <span class="k">final</span> <span class="n">PrintStream</span> <span class="n">arg</span><span class="err">$</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">private</span> <span class="n">MainActivity</span><span class="err">$$</span><span class="n">Lambda</span><span class="err">$</span><span class="mi">4</span><span class="p">(</span><span class="n">PrintStream</span> <span class="n">var1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="n">arg</span><span class="err">$</span><span class="mi">1</span> <span class="o">=</span> <span class="n">var1</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">private</span> <span class="k">static</span> <span class="n">StringConsumer</span> <span class="n">get</span><span class="err">$</span><span class="n">Lambda</span><span class="p">(</span><span class="n">PrintStream</span> <span class="n">var0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="k">new</span> <span class="n">MainActivity</span><span class="err">$$</span><span class="n">Lambda</span><span class="err">$</span><span class="mi">4</span><span class="p">(</span><span class="n">var0</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">public</span> <span class="kt">void</span> <span class="n">consumeAString</span><span class="p">(</span><span class="n">String</span> <span class="n">var1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="n">arg</span><span class="err">$</span><span class="mf">1.</span><span class="n">println</span><span class="p">(</span><span class="n">var1</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">public</span> <span class="k">static</span> <span class="n">StringConsumer</span> <span class="n">lambdaFactory</span><span class="err">$</span><span class="p">(</span><span class="n">PrintStream</span> <span class="n">var0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="k">new</span> <span class="n">MainActivity</span><span class="err">$$</span><span class="n">Lambda</span><span class="err">$</span><span class="mi">4</span><span class="p">(</span><span class="n">var0</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>MultiCatch</h2>

<p>源代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">private</span> <span class="k">static</span> <span class="kt">void</span> <span class="nf">testMultiCatch</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">System</span><span class="p">.</span><span class="n">out</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">&quot;testMultiCatch&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">try</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">switch</span> <span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">case</span> <span class="mi">0</span><span class="o">:</span>
</span><span class='line'>                <span class="k">throw</span> <span class="k">new</span> <span class="n">NullPointerException</span><span class="p">();</span>
</span><span class='line'>            <span class="k">case</span> <span class="mi">1</span><span class="o">:</span>
</span><span class='line'>                <span class="k">throw</span> <span class="k">new</span> <span class="n">IllegalStateException</span><span class="p">();</span>
</span><span class='line'>            <span class="k">case</span> <span class="mi">2</span><span class="o">:</span>
</span><span class='line'>                <span class="k">throw</span> <span class="k">new</span> <span class="n">IOException</span><span class="p">();</span>
</span><span class='line'>            <span class="k">case</span> <span class="mi">3</span><span class="o">:</span>
</span><span class='line'>                <span class="k">throw</span> <span class="k">new</span> <span class="n">RuntimeException</span><span class="p">();</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="n">NullPointerException</span> <span class="o">|</span> <span class="n">IllegalStateException</span> <span class="o">|</span> <span class="n">IOException</span> <span class="n">e</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">e</span><span class="p">.</span><span class="n">printStackTrace</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="n">RuntimeException</span> <span class="n">ex</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">//make this branch different to suppress warnings</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="n">ex</span><span class="p">.</span><span class="n">hashCode</span><span class="p">();</span>
</span><span class='line'>        <span class="n">ex</span><span class="p">.</span><span class="n">printStackTrace</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>class反编译：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">private</span> <span class="k">static</span> <span class="kt">void</span> <span class="nf">testMultiCatch</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">System</span><span class="p">.</span><span class="n">out</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">&quot;testMultiCatch&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">try</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">switch</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="mi">0</span><span class="o">:</span>
</span><span class='line'>            <span class="k">throw</span> <span class="k">new</span> <span class="n">NullPointerException</span><span class="p">();</span>
</span><span class='line'>        <span class="k">case</span> <span class="mi">1</span><span class="o">:</span>
</span><span class='line'>            <span class="k">throw</span> <span class="k">new</span> <span class="n">IllegalStateException</span><span class="p">();</span>
</span><span class='line'>        <span class="k">case</span> <span class="mi">2</span><span class="o">:</span>
</span><span class='line'>            <span class="k">throw</span> <span class="k">new</span> <span class="n">IOException</span><span class="p">();</span>
</span><span class='line'>        <span class="k">case</span> <span class="mi">3</span><span class="o">:</span>
</span><span class='line'>            <span class="k">throw</span> <span class="k">new</span> <span class="n">RuntimeException</span><span class="p">();</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="n">IllegalStateException</span> <span class="o">|</span> <span class="n">IOException</span> <span class="o">|</span> <span class="n">NullPointerException</span> <span class="n">var3</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">var3</span><span class="p">.</span><span class="n">printStackTrace</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="n">RuntimeException</span> <span class="n">var4</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="n">var4</span><span class="p">.</span><span class="n">hashCode</span><span class="p">();</span>
</span><span class='line'>        <span class="n">var4</span><span class="p">.</span><span class="n">printStackTrace</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<pre><code>好像没什么区别，不是我粘错了，估计是JVM本来就支持这个特性。
</code></pre>

<h2>tryWithResource</h2>

<p>源代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">private</span> <span class="k">static</span> <span class="kt">void</span> <span class="nf">testTryWithResource</span><span class="p">(</span><span class="n">ServerSocket</span> <span class="n">ss</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">ss</span> <span class="o">==</span> <span class="n">null</span><span class="p">)</span> <span class="k">return</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">try</span> <span class="p">(</span><span class="n">Socket</span> <span class="n">in</span> <span class="o">=</span> <span class="n">ss</span><span class="p">.</span><span class="n">accept</span><span class="p">();</span>
</span><span class='line'>     <span class="n">InputStream</span> <span class="n">is</span> <span class="o">=</span> <span class="n">in</span><span class="p">.</span><span class="n">getInputStream</span><span class="p">())</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">is</span><span class="p">.</span><span class="n">read</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="n">IOException</span> <span class="n">e</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>class反编译：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">private</span> <span class="k">static</span> <span class="kt">void</span> <span class="nf">testTryWithResource</span><span class="p">(</span><span class="n">ServerSocket</span> <span class="n">ss</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">ss</span> <span class="o">!=</span> <span class="n">null</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">try</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">Socket</span> <span class="n">in</span> <span class="o">=</span> <span class="n">ss</span><span class="p">.</span><span class="n">accept</span><span class="p">();</span>
</span><span class='line'>            <span class="n">Throwable</span> <span class="n">var2</span> <span class="o">=</span> <span class="n">null</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">try</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">InputStream</span> <span class="n">is</span> <span class="o">=</span> <span class="n">in</span><span class="p">.</span><span class="n">getInputStream</span><span class="p">();</span>
</span><span class='line'>                <span class="n">Throwable</span> <span class="n">var4</span> <span class="o">=</span> <span class="n">null</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">try</span> <span class="p">{</span>
</span><span class='line'>                    <span class="n">is</span><span class="p">.</span><span class="n">read</span><span class="p">();</span>
</span><span class='line'>                <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="n">Throwable</span> <span class="n">var29</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                    <span class="n">var4</span> <span class="o">=</span> <span class="n">var29</span><span class="p">;</span>
</span><span class='line'>                    <span class="k">throw</span> <span class="n">var29</span><span class="p">;</span>
</span><span class='line'>                <span class="p">}</span> <span class="n">finally</span> <span class="p">{</span>
</span><span class='line'>                    <span class="k">if</span><span class="p">(</span><span class="n">is</span> <span class="o">!=</span> <span class="n">null</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                        <span class="k">if</span><span class="p">(</span><span class="n">var4</span> <span class="o">!=</span> <span class="n">null</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                            <span class="n">try</span> <span class="p">{</span>
</span><span class='line'>                                <span class="n">is</span><span class="p">.</span><span class="n">close</span><span class="p">();</span>
</span><span class='line'>                            <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="n">Throwable</span> <span class="n">var28</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                                <span class="p">;</span>
</span><span class='line'>                            <span class="p">}</span>
</span><span class='line'>                    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                            <span class="n">is</span><span class="p">.</span><span class="n">close</span><span class="p">();</span>
</span><span class='line'>                        <span class="p">}</span>
</span><span class='line'>                    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="n">Throwable</span> <span class="n">var31</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">var2</span> <span class="o">=</span> <span class="n">var31</span><span class="p">;</span>
</span><span class='line'>                <span class="k">throw</span> <span class="n">var31</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span> <span class="n">finally</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span><span class="p">(</span><span class="n">in</span> <span class="o">!=</span> <span class="n">null</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                    <span class="k">if</span><span class="p">(</span><span class="n">var2</span> <span class="o">!=</span> <span class="n">null</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                        <span class="n">try</span> <span class="p">{</span>
</span><span class='line'>                            <span class="n">in</span><span class="p">.</span><span class="n">close</span><span class="p">();</span>
</span><span class='line'>                        <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="n">Throwable</span> <span class="n">var27</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                            <span class="p">;</span>
</span><span class='line'>                        <span class="p">}</span>
</span><span class='line'>                    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                        <span class="n">in</span><span class="p">.</span><span class="n">close</span><span class="p">();</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="n">IOException</span> <span class="n">var33</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>好™啰嗦啦！绝对不要用这个。</p>

<p>附录
关于androidBuildTool对java7的支持，原文来自：</p>

<p><a href="">http://tools.android.com/tech-docs/new-build-system/user-guide#TOC-Using-sourceCompatibility-1.7</a></p>

<p>Using sourceCompatibility 1.7
With Android KitKat (buildToolsVersion 19) you can use the diamond operator, multi-catch, strings in switches, try with resources, etc. To do this, add the following to your build file:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">android</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">compileSdkVersion</span> <span class="mi">19</span>
</span><span class='line'>    <span class="n">buildToolsVersion</span> <span class="s">&quot;19.0.0&quot;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">defaultConfig</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">minSdkVersion</span> <span class="mi">7</span>
</span><span class='line'>        <span class="n">targetSdkVersion</span> <span class="mi">19</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">compileOptions</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">sourceCompatibility</span> <span class="n">JavaVersion</span><span class="p">.</span><span class="n">VERSION_1_7</span>
</span><span class='line'>        <span class="n">targetCompatibility</span> <span class="n">JavaVersion</span><span class="p">.</span><span class="n">VERSION_1_7</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Note that you can use minSdkVersion with a value earlier than 19, for all language features <em>except try with resources</em>. If you want to use try with resources, you will need to also use a minSdkVersion of 19.</p>

<p>You also need to make sure that Gradle is using version 1.7 or later of the JDK. (And version 0.6.1 or later of the Android Gradle plugin.)</p>

<h1>匿名类 VS Lambda</h1>

<p>今天修复了几个listener导致内存泄露的问题。
在review代码的过程中发现很多泄露是匿名类的this$0导致的，事实上挺多时候匿名类并没有显式的使用到this。</p>

<h2>匿名类</h2>

<p><strong>匿名类必然会引用this，不管代码中是否真正用到。</strong>
java中的匿名类和非static内部类（标准叫法是嵌套类nested class，内部类专指static inner class），都会有外部类的引用，通过构造函数传进来，并在内部类的this$0成员变量中保存；但是我们通常不会注意到他们，因为java编译器帮我们做了这些；如果我们查看反编译的class文件会发现他们是真真切切的存在。</p>

<p>比如：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">private</span> <span class="n">BroadcastReceiver</span> <span class="n">mCollectionReceiver</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BroadcastReceiver</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="err">@</span><span class="n">Override</span>
</span><span class='line'>        <span class="k">public</span> <span class="kt">void</span> <span class="n">onReceive</span><span class="p">(</span><span class="n">Context</span> <span class="n">context</span><span class="p">,</span> <span class="n">Intent</span> <span class="n">intent</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="c1">//...</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p>反编译javac生成的class</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">class</span> <span class="nc">BroadcastDetailFragment</span><span class="err">$</span><span class="mi">4</span>
</span><span class='line'>  <span class="n">extends</span> <span class="n">BroadcastReceiver</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">BroadcastDetailFragment</span><span class="err">$</span><span class="mi">4</span><span class="p">(</span><span class="n">BroadcastDetailFragment</span> <span class="k">this</span><span class="err">$</span><span class="mi">0</span><span class="p">)</span> <span class="p">{}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">public</span> <span class="kt">void</span> <span class="n">onReceive</span><span class="p">(</span><span class="n">Context</span> <span class="n">context</span><span class="p">,</span> <span class="n">Intent</span> <span class="n">intent</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="c1">//...</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>可以看到构造函数中是有个this$0的参数的。</p>

<h2>Lambda</h2>

<p><strong>lambda不一定会引用this，具体看lambda里面是否用到。</strong>
Lambda中所有引用到的外部的变量都是通过参数的形式传给实现lambda的函数的。如果lambda中用到this或非static成员方法、非static成员变量，那么lambda就必须引用this，这个this就是作为参数传给实现lambda的函数；反之，若lambda不需要this，编译器就不会传this作为参数，这时候该lambda生成的类就不会泄露我们的Fragment，Activity。</p>

<h2>总结：</h2>

<p>使用Lambda除了可以使代码更优雅，还可以减少不必要的this泄露。
之前我曾担心过：retro-lambda会给每个lambda生成一个类，会不会带来性能，内存之类的压力；但是想到scala语言就是用这种方式实现的lambda，而且玩的很欢乐，想必不用过度担心。</p>

<h3>附录：</h3>

<ol>
<li><p>关于scala和java8是怎么分别实现lambda的，可以参看<a href="http://blog.takipi.com/compiling-lambda-expressions-scala-vs-java-8/">这篇文章</a>。PS：retro-lambda是模仿了scala的做法（因为android中不支持invokedynamic虚拟机指令，其在java7中引入，所以理论上javac生成的lambda在java7上也是能跑的）</p></li>
<li><p>retrolambda测试报告，在项目引入retro-lambda之前，我做了几个实验，验证之前的疑问点。下面是之前的结论，再贴一遍~方便翻阅~</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ijkplyer 编译配置]]></title>
    <link href="http://LanderlYoung.github.io/blog/2015/07/09/ijkplyer-bian-yi-pei-zhi/"/>
    <updated>2015-07-09T18:53:18+08:00</updated>
    <id>http://LanderlYoung.github.io/blog/2015/07/09/ijkplyer-bian-yi-pei-zhi</id>
    <content type="html"><![CDATA[<h1>IjkMediaPlayer 使用手册</h1>

<blockquote><p><a href="&#x6d;&#97;&#105;&#108;&#x74;&#x6f;&#x3a;&#116;&#97;&#121;&#108;&#x6f;&#114;&#x63;&#121;&#x61;&#110;&#103;&#64;&#x74;&#101;&#x6e;&#99;&#101;&#110;&#x74;&#x2e;&#x63;&#x6f;&#109;">&#116;&#97;&#121;&#108;&#111;&#114;&#x63;&#x79;&#97;&#x6e;&#x67;&#x40;&#116;&#x65;&#110;&#99;&#101;&#x6e;&#x74;&#46;&#99;&#x6f;&#x6d;</a></p></blockquote>

<ol>
<li>首先编译环境是OS X或者linux或者其他*nix系统（Windows暂不支持，因为ijkplayer中使用了软链接o(╯□╰)o）。</li>
<li>其次系统中需要安装以下工具：

<ol>
<li>git</li>
<li>Android ndk 并配置环境变量 <code>ANDROID_NDK</code></li>
<li>Android sdk 并配置环境变量 <code>ANDROID_SDK</code></li>
</ol>
</li>
</ol>


<p>项目地址：<a href="">https://github.com/Bilibili/ijkplayer</a></p>

<p><strong>note</strong>:</p>

<p>如果你觉得TL;DR。不想知道ijkmediaplayer是怎么编译的那就执行<code>./init.sh</code>脚本。让他来帮你做初始化（就是下面的1-3步），然后使用<code>./make.sh</code>做编译甚至是编译之后so的拷贝工作，下文就不用看了。</p>

<p>三个需要的文件分别是：</p>

<ol>
<li><a href="https://gist.github.com/LanderlYoung/046f4b90b0da26484d5e">init.sh</a></li>
<li><a href="https://gist.github.com/LanderlYoung/63d4c59260bce20c4a0f">make.sh</a></li>
<li><a href="https://gist.github.com/LanderlYoung/a28ddb1fb1e575be91ec">module.sh</a></li>
</ol>


<!--more-->


<h2>编译步骤：</h2>

<h3>1. 下载代码</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git clone https://github.com/Bilibili/ijkplayer.git
</span></code></pre></td></tr></table></div></figure>


<h3>2. 切换到稳定分支</h3>

<p>在开发视频播放组件时ijkplayer的稳定版本是n0.2.2因此本手册以n0.2.2为实例。若发布新版本可以切换分支并测试兼容性。可以使用<code>git tag</code>命令查看release版本。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git checkout -B n_0.2.2 n0.2.2
</span></code></pre></td></tr></table></div></figure>


<h3>3. 初始化</h3>

<p>首先进入工程根目录</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd </span>ijkplayer
</span></code></pre></td></tr></table></div></figure>


<p>然后执行</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>./init-android.sh
</span></code></pre></td></tr></table></div></figure>


<p>执行初始化操作：包括下载ffmpeg源代码，配置ffmpeg编译选项，下载。</p>

<p><strong>注意</strong>：n0.2.2版本的ffmpeg仓库换成了videolan的，如果发现不能下载可以把init-android.sh中的</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">IJK_FFMPEG_UPSTREAM</span><span class="o">=</span>git://git.videolan.org/ffmpeg.git
</span></code></pre></td></tr></table></div></figure>


<p>替换成</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">IJK_FFMPEG_UPSTREAM</span><span class="o">=</span>https://github.com/bbcallen/FFmpeg.git
</span></code></pre></td></tr></table></div></figure>


<p>然后再进行初始化操作。</p>

<p>这里初始化会生成ffmpeg编译配置文件，主要配置需要哪些组件。因为android端希望尽量减小so库的大小，因此会disable掉很多组件。这里可以使用我准备的这个module.sh文件覆盖掉 项目根目录下的config/module.sh文件。</p>

<p>这个module.sh文件已经去处了绝大部分不用的组件，并且启用了硬件加速。</p>

<h3>4. 编译</h3>

<p>进入项目根目录下的android目录</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd </span>android
</span></code></pre></td></tr></table></div></figure>


<p>编译 ffmpeg 依赖库。由于大多数设备都为 armv7a 架构，故在这里使用之。使用 armv5|armv7a|x86 作为输入来设定平台，或传入 all|clean|check 进行[编译所有平台/清理/检查]。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>./compile-ffmpeg.sh clean
</span><span class='line'>./compile-ffmpeg.sh armv7a
</span></code></pre></td></tr></table></div></figure>


<p>若报错，请检查以上各项配置是否正确；否则耐心等待编译完毕即可。</p>

<p>接下来就可以编译 ijkplayer 了：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>./compile-ijk.sh
</span></code></pre></td></tr></table></div></figure>


<h2>使用ijkplayer</h2>

<p>android目录下的ijkmediaplayer就是ijk播放器的本体了，编译完成之后会在libs目录中生成相应的so动态库。这时候只需要把这些库拷到工程目录的ijkmdediaplayer module的libs下就好了。</p>

<p>当然你可以把整个android目录导入Android Studio，作者已经写好了gradle配置，这里是一个demo工程。它有三个module：</p>

<ol>
<li>ijkmediademo是demo本体，是个很好的教学示例</li>
<li>ijkmediaplayer就是播放器了，这里是一个library module</li>
<li>ijkmediawidget是基于ijkmediaplayer的各种控件，主要提供类似VideoView的控件方便使用。当然这个是可选组件。</li>
</ol>


<p>如果看到这说明你很有研究精神，给自己点个赞吧n(<em>≧▽≦</em>)n</p>

<h3>附录-关于module.sh</h3>

<p>module.sh中配置了ffmpeg使用哪些decoder，demuser等信息。我给的模板中配置了如下信息</p>

<h4>解码器</h4>

<table>
<thead>
<tr>
<th style="text-align:center;"> 解码器 </th>
<th style="text-align:center;"> 支持格式 </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;"> aac、aac_latm </td>
<td style="text-align:center;"> aac 音频 </td>
</tr>
<tr>
<td style="text-align:center;"> ac3 </td>
<td style="text-align:center;"> ac3 音频 </td>
</tr>
<tr>
<td style="text-align:center;"> mp3* </td>
<td style="text-align:center;"> mp3 音频</td>
</tr>
<tr>
<td style="text-align:center;"> flv </td>
<td style="text-align:center;"> flv 视频 </td>
</tr>
<tr>
<td style="text-align:center;"> h263、h263i、h263p </td>
<td style="text-align:center;"> h263 视频（可以考虑舍弃）</td>
</tr>
<tr>
<td style="text-align:center;"> h264 </td>
<td style="text-align:center;"> h264 视频（重要！）</td>
</tr>
<tr>
<td style="text-align:center;"> msmpeg4v_crystalhd、msmpeg4v1、msmpeg4v2、msmpeg4v3 </td>
<td style="text-align:center;"> wmv 视频 </td>
</tr>
<tr>
<td style="text-align:center;"> wmav1、wmav2、wmavoice </td>
<td style="text-align:center;"> wmv 音频 </td>
</tr>
</tbody>
</table>


<h3>解容器</h3>

<table>
<thead>
<tr>
<th style="text-align:center;"> 解容器 </th>
<th style="text-align:center;"> 支持容器格式 </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;"> aac </td>
<td style="text-align:center;"> aac 音频容器 </td>
</tr>
<tr>
<td style="text-align:center;"> ac3 </td>
<td style="text-align:center;"> ac3 音频容器 </td>
</tr>
<tr>
<td style="text-align:center;"> flv </td>
<td style="text-align:center;"> flv 视频容器 </td>
</tr>
<tr>
<td style="text-align:center;"> hls </td>
<td style="text-align:center;"> HTTP Live Streaming </td>
</tr>
<tr>
<td style="text-align:center;"> latm </td>
<td style="text-align:center;"> aac latm封装格式</td>
</tr>
<tr>
<td style="text-align:center;"> live_flv </td>
<td style="text-align:center;">直播 flv格式</td>
</tr>
<tr>
<td style="text-align:center;"> loas</td>
<td style="text-align:center;"> aac loas封装格式</td>
</tr>
<tr>
<td style="text-align:center;"> m4v </td>
<td style="text-align:center;"> m4v/mp4 视频 </td>
</tr>
<tr>
<td style="text-align:center;"> mov </td>
<td style="text-align:center;"> mov 视频 </td>
</tr>
<tr>
<td style="text-align:center;"> mp3</td>
<td style="text-align:center;"> mp3 音频</td>
</tr>
<tr>
<td style="text-align:center;">matroska </td>
<td style="text-align:center;"> mkv 视频</td>
</tr>
<tr>
<td style="text-align:center;">avi </td>
<td style="text-align:center;"> avi 视频</td>
</tr>
<tr>
<td style="text-align:center;">mpegps、mpegts、mpegvideo</td>
<td style="text-align:center;"> mpeg封装格式</td>
</tr>
<tr>
<td style="text-align:center;">asf </td>
<td style="text-align:center;"> wmv 格式</td>
</tr>
</tbody>
</table>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[java序列化实践]]></title>
    <link href="http://LanderlYoung.github.io/blog/2015/04/04/javaxu-lie-hua-shi-jian/"/>
    <updated>2015-04-04T18:06:20+08:00</updated>
    <id>http://LanderlYoung.github.io/blog/2015/04/04/javaxu-lie-hua-shi-jian</id>
    <content type="html"><![CDATA[<p>java中实例的序列化是指将一个实例转成 二进制流以用于网络传输或者固化存储之用。事实上，简单点说就是把一个类实例的成员变量存储下来，然而这个过程根据成员变量的类型的不同，可能会很简单，也可能会很复杂。序列化的用处还是很大的，比如跨进程通信（IPC，安卓中的IPC用到了序列化，只是安卓自身实现了一个比java更轻量级、更简单的序列化方式。但是原理大同小异），远程方法调用（RMI，事实上这个和安卓中的Binder通讯很类似）;此外还常见的是把实例序列化到数据库中以blob的形式存储。并且因为java语言本身就是跨平台设计的，序列化之后的数据也是平台无关的，因此你无需关心大小端之类的问题（以及类似于C语言的内存对齐问题）！既然序列化这么有用还是有必要学习一下的。（BTW，java EE中提供了更加严格的固化方案Java Date Object，或着也可以考虑使用Hibernate框架。）</p>

<p>参考的资料是《Thinking in java》，和<a href="http://www.ibm.com/developerworks/cn/java/j-lo-serial/index.html">IBM的一篇博文</a>。下面来做几个实验，一边学习一边实践一下。</p>

<!--more-->


<p>序列化其实是很简单的，你只需要给想序列化的类实现Serializable接口（这个接口只是标签接口，没有方法）。你的类就被标记为了可序列化。然后序列化的过程是使用ObjectOutputSteram::writeObject()方法;反序列化是使用ObjectInputStream::readObject()方法。</p>

<h3>1. <code>Serializable</code>方式</h3>

<p>这种方式可以说是由jvm来全权掌控的。序列化的时候，java会把类的每一个实例成员变量（不包括static成员变量）写下来，比较好理解的是原始类型。如果类中有成员是其他Object，就会递归的去序列化这个Object。</p>

<p>比如如下代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">young</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.FileInputStream</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.FileOutputStream</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.ObjectInputStream</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.ObjectOutputStream</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.Serializable</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">class</span> <span class="nc">A</span> <span class="kd">implements</span> <span class="n">Serializable</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">static</span> <span class="kt">int</span> <span class="n">instances</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="n">A</span> <span class="n">next</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kt">int</span> <span class="n">num</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="nf">A</span><span class="o">(</span><span class="kt">int</span> <span class="n">num</span><span class="o">,</span> <span class="n">A</span> <span class="n">next</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">num</span> <span class="o">=</span> <span class="n">num</span><span class="o">;</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Constructor #&quot;</span> <span class="o">+</span> <span class="o">(</span><span class="n">instances</span><span class="o">++));</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">next</span> <span class="o">=</span> <span class="n">next</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="n">String</span> <span class="nf">toString</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">Integer</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="n">num</span><span class="o">)</span> <span class="o">+</span> <span class="s">&quot; &quot;</span> <span class="o">+</span> <span class="n">next</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">IOException</span><span class="o">,</span> <span class="n">ClassNotFoundException</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">A</span> <span class="n">a</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">A</span><span class="o">(</span><span class="mi">7</span><span class="o">,</span> <span class="k">new</span> <span class="nf">A</span><span class="o">(</span><span class="mi">8</span><span class="o">,</span> <span class="kc">null</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;serialize&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">ObjectOutputStream</span> <span class="n">oo</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">ObjectOutputStream</span><span class="o">(</span>
</span><span class='line'>                <span class="k">new</span> <span class="nf">FileOutputStream</span><span class="o">(</span><span class="s">&quot;oo.out&quot;</span><span class="o">));</span>
</span><span class='line'>        <span class="n">oo</span><span class="o">.</span><span class="na">writeObject</span><span class="o">(</span><span class="n">a</span><span class="o">);</span>
</span><span class='line'>        <span class="n">oo</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;deserialize&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">ObjectInputStream</span> <span class="n">oi</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">ObjectInputStream</span><span class="o">(</span>
</span><span class='line'>                <span class="k">new</span> <span class="nf">FileInputStream</span><span class="o">(</span><span class="s">&quot;oo.out&quot;</span><span class="o">));</span>
</span><span class='line'>        <span class="n">A</span> <span class="n">a1</span> <span class="o">=</span> <span class="o">(</span><span class="n">A</span><span class="o">)</span> <span class="n">oi</span><span class="o">.</span><span class="na">readObject</span><span class="o">();</span>
</span><span class='line'>        <span class="n">oi</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;a:&quot;</span> <span class="o">+</span> <span class="n">a</span><span class="o">);</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;a1:&quot;</span> <span class="o">+</span> <span class="n">a1</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>输出如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Constructor <span class="c">#0</span>
</span><span class='line'>Constructor <span class="c">#1</span>
</span><span class='line'>serialize
</span><span class='line'>deserialize
</span><span class='line'>a:7 <span class="m">8</span> null
</span><span class='line'>a1:7 <span class="m">8</span> null
</span></code></pre></td></tr></table></div></figure>


<p>然而在反序列化的过程中，<strong>构造函数并没有被调用</strong>！所以Serializable方式的反序列化是直接从数据中“填充”一个实例出来！看上去有点神奇的样子。</p>

<h4>1.1 <code>transient</code>关键字</h4>

<p>在Serializable方式中如果有些成员变量（比如密码等敏感信息）不想被序列化的话，你可以使用transient关键字来修饰之。</p>

<h4>1.2 static fields</h4>

<p>序列化时static变量不会被序列化进去。因为它是class的信息，和实例没什么关系。如果要序列化的话可以自己用方式2或3手动write。</p>

<h3>2. <code>Enternalizable</code>方式</h3>

<p>了解Serializable方式的序列化会发现：在整个序列化过程中我们好像什么都没做，只是实现了Serializable接口而已，对于这种打酱油的行为我表示不安心！感觉局面不在自己的掌控之中呀！好在java中还有另一种序列化方式<code>Externalizable</code>方式。这个接口中有两个方法：<code>void writeExternal(ObjectOutput out)</code>和<code>void readExternal(ObjectInput in)</code>。（这种方式和Android中的Parcelable序列化方式思路是完全一样的。）直接看例子：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">young</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.Externalizable</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.FileInputStream</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.FileOutputStream</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.ObjectInput</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.ObjectInputStream</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.ObjectOutput</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.ObjectOutputStream</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">class</span> <span class="nc">B</span> <span class="kd">implements</span> <span class="n">Externalizable</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">static</span> <span class="kt">int</span> <span class="n">instances</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="kt">int</span> <span class="n">n</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="nf">B</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Constructor1 #&quot;</span> <span class="o">+</span> <span class="o">(</span><span class="n">instances</span><span class="o">++));</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="nf">B</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Constructor2 #&quot;</span> <span class="o">+</span> <span class="o">(</span><span class="n">instances</span><span class="o">++));</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">n</span> <span class="o">=</span> <span class="n">n</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">writeExternal</span><span class="o">(</span><span class="n">ObjectOutput</span> <span class="n">out</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">IOException</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">out</span><span class="o">.</span><span class="na">writeInt</span><span class="o">(</span><span class="n">n</span> <span class="o">^</span> <span class="mi">100</span><span class="o">);</span> <span class="c1">//加密存储</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">readExternal</span><span class="o">(</span><span class="n">ObjectInput</span> <span class="n">in</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">IOException</span><span class="o">,</span> <span class="n">ClassNotFoundException</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">n</span> <span class="o">=</span> <span class="n">in</span><span class="o">.</span><span class="na">readInt</span><span class="o">()</span> <span class="o">^</span> <span class="mi">100</span><span class="o">;</span> <span class="c1">//读取解密</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="n">String</span> <span class="nf">toString</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="s">&quot;b:&quot;</span> <span class="o">+</span> <span class="n">n</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">IOException</span><span class="o">,</span> <span class="n">ClassNotFoundException</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">B</span> <span class="n">b1</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">B</span><span class="o">(</span><span class="mi">7</span><span class="o">);</span>
</span><span class='line'>        <span class="n">B</span> <span class="n">b2</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">B</span><span class="o">(</span><span class="mi">9</span><span class="o">);</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;serialize&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">ObjectOutputStream</span> <span class="n">oo</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">ObjectOutputStream</span><span class="o">(</span>
</span><span class='line'>                <span class="k">new</span> <span class="nf">FileOutputStream</span><span class="o">(</span><span class="s">&quot;oo.out&quot;</span><span class="o">));</span>
</span><span class='line'>        <span class="n">oo</span><span class="o">.</span><span class="na">writeObject</span><span class="o">(</span><span class="n">b1</span><span class="o">);</span>
</span><span class='line'>        <span class="n">oo</span><span class="o">.</span><span class="na">writeObject</span><span class="o">(</span><span class="n">b2</span><span class="o">);</span>
</span><span class='line'>        <span class="n">oo</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;deserialize&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">ObjectInputStream</span> <span class="n">oi</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">ObjectInputStream</span><span class="o">(</span>
</span><span class='line'>                <span class="k">new</span> <span class="nf">FileInputStream</span><span class="o">(</span><span class="s">&quot;oo.out&quot;</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">B</span> <span class="n">b</span> <span class="o">=</span> <span class="o">(</span><span class="n">B</span><span class="o">)</span> <span class="n">oi</span><span class="o">.</span><span class="na">readObject</span><span class="o">();</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">b</span><span class="o">);</span>
</span><span class='line'>        <span class="n">b</span> <span class="o">=</span> <span class="o">(</span><span class="n">B</span><span class="o">)</span> <span class="n">oi</span><span class="o">.</span><span class="na">readObject</span><span class="o">();</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">b</span><span class="o">);</span>
</span><span class='line'>        <span class="n">oi</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>输出如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Constructor2 <span class="c">#0</span>
</span><span class='line'>Constructor2 <span class="c">#1</span>
</span><span class='line'>serialize
</span><span class='line'>deserialize
</span><span class='line'>Constructor1 <span class="c">#2</span>
</span><span class='line'>b:7
</span><span class='line'>Constructor1 <span class="c">#3</span>
</span><span class='line'>b:9
</span></code></pre></td></tr></table></div></figure>


<p>从中可以看出：我们需要在writeExternal中对该类需要序列化的数据进行操作，在readExternal中相应的进行读取，需要注意的是：读和写的顺序要一致。在这种方式下java自身是不会干涉实例的序列化的，所有的序列化、反序列化工作都是由开发者自己定义的。这种方式下开发人员有了足够的自由度！比如我可以writeExternal中对数据加密，在readExternal中对数据解密，以此保证序列化的数据是安全的。（上面的代码中使用亦或进行的简单的加解密操作）。</p>

<p>和Serializable不同的是我们看到在反序列化的时候<strong>默认构造函数被调用了</strong>！所以这种方式是比较纯粹的实现接口+接口回调，而不是Serializable中实例直接被java填充出来的黑魔法那样！</p>

<p>因为要调用默认构造函数，因此实现Externalizable接口的类必须有一个public的默认构造函数！这样jvm才能初始化一个类，然后调用其接口实现来进行反序列化。</p>

<h3>3. 第三种序列化方式</h3>

<p>这种序列化方式更像是前两种的综合体，TIJ中称这种方法为“An alternative to Externalizable”。（并且这种方式并不是很符合通常的java语言习惯，因此看起来很奇怪。在Thinking in java一书中被作者Bruce Eckel喷得不轻！不过我们还是看一下什么情况。）</p>

<p>实现方式是实现Serializable接口，然后在你的类中加入如下两个方法，而且方法签名要一模一样！：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="kt">void</span> <span class="nf">writeObject</span><span class="o">(</span><span class="n">ObjectOutputStream</span> <span class="n">stream</span><span class="o">)</span>
</span><span class='line'><span class="kd">throws</span> <span class="n">IOException</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">private</span> <span class="kt">void</span> <span class="nf">readObject</span><span class="o">(</span><span class="n">ObjectInputStream</span> <span class="n">stream</span><span class="o">)</span>
</span><span class='line'><span class="kd">throws</span> <span class="n">IOException</span><span class="o">,</span> <span class="n">ClassNotFoundException</span><span class="o">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>没错，你没有看错他们的确是private方法！看仔细咯，这个方法和Externalizable中的两个方法的参数是不一样的，这里面是ObjectOutputStream，而后者是ObjectOutput。</p>

<p>然后在两个方法中你可以手动控制序列化，这一点和方式2相同。不同的是他还和方式1结合了！不过到底怎么结合的呢？关键在于<code>ObjectOutputStream：：defaultWriteObject()</code>方法和<code>ObjectOutputStream：：defaultReadObject()</code>。你可以在writeObject最开始调用相应的defaultWriteObject方法。他的作用就是使用默认的序列化实现方式来操作当前实例，在这之后你可以自由进行其他的操作序列化过程。对于read亦是如此。</p>

<p>是不是显得很奇怪，我调用了ObjectInputStream的方法，而且都没有把this传进去，可是jvm却把“我”给序列化了！对于这真的只能说不要在意细节，java语言就是这么设计的，不喜欢可以不用这种方式嘛～（反正我最喜欢方式2</p>

<blockquote><p>If you are going to use the default mechanism to write the non-transient parts of your object, you must call defaultWriteObject( ) as the first operation in writeObject( ), and defaultReadObject( ) as the first operation in readObject( ). These are strange method calls. It would appear, for example, that you are calling defaultWriteObject( ) for an ObjectOutputStream and passing it no arguments, and yet it somehow turns around and knows the reference to your object and how to write all the non-transient parts. Spooky.</p><footer><strong>&#8216;Bruce Eckel&#8217; &#8216;Thinking in java&#8217;</strong></footer></blockquote>


<p>好!现在&#8221;show me the code&#8221;:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">class</span> <span class="nc">T</span> <span class="kd">implements</span> <span class="n">Serializable</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="n">instances</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kt">int</span> <span class="n">num</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">transient</span> <span class="n">String</span> <span class="n">passwd</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="nf">T</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">num</span> <span class="o">=</span> <span class="n">n</span><span class="o">;</span>
</span><span class='line'>        <span class="n">passwd</span> <span class="o">=</span> <span class="n">n</span> <span class="o">+</span> <span class="s">&quot;0&quot;</span><span class="o">;</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Constructor #&quot;</span> <span class="o">+</span> <span class="o">(</span><span class="n">instances</span><span class="o">++));</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">writeObject</span><span class="o">(</span><span class="n">ObjectOutputStream</span> <span class="n">stream</span><span class="o">)</span>
</span><span class='line'>            <span class="kd">throws</span> <span class="n">IOException</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">stream</span><span class="o">.</span><span class="na">defaultWriteObject</span><span class="o">();</span>
</span><span class='line'>        <span class="n">stream</span><span class="o">.</span><span class="na">writeObject</span><span class="o">(</span><span class="s">&quot;NO PASSWORD&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;writeObject&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">readObject</span><span class="o">(</span><span class="n">ObjectInputStream</span> <span class="n">stream</span><span class="o">)</span>
</span><span class='line'>            <span class="kd">throws</span> <span class="n">IOException</span><span class="o">,</span> <span class="n">ClassNotFoundException</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">stream</span><span class="o">.</span><span class="na">defaultReadObject</span><span class="o">();</span>
</span><span class='line'>        <span class="n">passwd</span> <span class="o">=</span> <span class="o">(</span><span class="n">String</span><span class="o">)</span> <span class="n">stream</span><span class="o">.</span><span class="na">readObject</span><span class="o">();</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;readObject&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="n">String</span> <span class="nf">toString</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">num</span> <span class="o">+</span> <span class="s">&quot; &quot;</span> <span class="o">+</span> <span class="n">passwd</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">IOException</span><span class="o">,</span> <span class="n">ClassNotFoundException</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">T</span> <span class="n">t</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">T</span><span class="o">(</span><span class="mi">10</span><span class="o">);</span>
</span><span class='line'>        <span class="n">T</span> <span class="n">t1</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">T</span><span class="o">(</span><span class="mi">11</span><span class="o">);</span>
</span><span class='line'>        <span class="c1">//</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;serialize&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">ObjectOutputStream</span> <span class="n">oo</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">ObjectOutputStream</span><span class="o">(</span>
</span><span class='line'>                <span class="k">new</span> <span class="nf">FileOutputStream</span><span class="o">(</span><span class="s">&quot;oo.out&quot;</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">oo</span><span class="o">.</span><span class="na">writeObject</span><span class="o">(</span><span class="n">t</span><span class="o">);</span>
</span><span class='line'>        <span class="n">oo</span><span class="o">.</span><span class="na">writeObject</span><span class="o">(</span><span class="n">t1</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">//</span>
</span><span class='line'>        <span class="n">oo</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;deserialize&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">ObjectInputStream</span> <span class="n">oi</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">ObjectInputStream</span><span class="o">(</span>
</span><span class='line'>                <span class="k">new</span> <span class="nf">FileInputStream</span><span class="o">(</span><span class="s">&quot;oo.out&quot;</span><span class="o">));</span>
</span><span class='line'>        <span class="n">T</span> <span class="n">tmp</span><span class="o">;</span>
</span><span class='line'>        <span class="n">tmp</span> <span class="o">=</span> <span class="o">(</span><span class="n">T</span><span class="o">)</span> <span class="n">oi</span><span class="o">.</span><span class="na">readObject</span><span class="o">();</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">tmp</span><span class="o">);</span>
</span><span class='line'>        <span class="n">tmp</span> <span class="o">=</span> <span class="o">(</span><span class="n">T</span><span class="o">)</span> <span class="n">oi</span><span class="o">.</span><span class="na">readObject</span><span class="o">();</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">tmp</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">//</span>
</span><span class='line'>        <span class="n">oi</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>输出</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Constructor <span class="c">#0</span>
</span><span class='line'>Constructor <span class="c">#1</span>
</span><span class='line'>serialize
</span><span class='line'>writeObject
</span><span class='line'>writeObject
</span><span class='line'>deserialize
</span><span class='line'>readObject
</span><span class='line'><span class="m">10</span> NO PASSWORD
</span><span class='line'>readObject
</span><span class='line'><span class="m">11</span> NO PASSWORD
</span></code></pre></td></tr></table></div></figure>


<p>可以看出这种<strong>方式3仍然不会调用构造函数</strong>！</p>

<h3>4. serialVersionUID 常量</h3>

<p>不管是上述的那一种序列化方式，都可以使用<code>serialVersionUID</code>控制class的版本问题。<code>serialVersionUID</code>是一个定义在类内部的成员常量比如：<code>private static final int serialVersionUID = 1L;</code>。他的作用是标记class的版本（这是我个人的理解，下面解释一下）。一个类如果定义了这个常量(就算你没有显式定义，javac也会帮你生成一个)，在序列化时会存储下来这个常量。当反序列化时jvm会先比较加载的class和序列化数据中的类的serialVersionUID是否相同，如果不同的话就认为class版本不一样，抛出<code>java.io.InvalidClassException</code>异常，拒绝反序列化。直白一点说就是“当一个类序列化时候的serialVersionUID和反序列化时候的serialVersionUID相同时，其反序列化才会成功。</p>

<p>当你的某个用于固化的class被更新的时候，他的成员和原来相比已经不再完全相同了，此时之前被序列化的数据——为了避免逻辑混乱——已经不能再反序列化到新的class中了。此时你可以更改新的class的serialVersionUID来达到这一目的。</p>

<hr />

<blockquote><p>  事实上因为Externalizable方式的序列化、反序列化全部是由程序员一手掌握的，因此它显得范围额比较简单，所有逻辑（哪些要序列化，如何序列化）都可以在接口的两个方法中控制。然而Serializable方式由于是由jvm全权负责的，要控制一些逻辑反而会显得不那么简单明了。</p></blockquote>

<h3>5. 一些特殊情况</h3>

<ol>
<li>相同的instance问题：比如一个List中包含了同一个实例的多处引用。那么序列化时<strong>同一个引用只会序列化一次</strong>。反序列化时这些相同的引用最终还是得到的引用仍然是相同的——同一个实例。所以循环引用也不会发生死循环的情况！（不得不说这一点很是机智！）</li>
<li>基于1,<strong>当序列化时写入同一个实例（引用相同）时，第二次写入并不会触发其序列化</strong>，因此只是第一次写入时进行了序列化，即使后来写入的时候实例的状态已经发生了改变（jvm也会忽略）。所以这一点会需要特别注意。</li>
<li><p>父类没有实现序列化接口而子类实现的时候（Drived extends Base)：</p>

<p> 这里序列化接口有两种（Serializable、Externalizable）分两种情况叙述：</p>

<ul>
<li>Serializable：此时Base因为没有实现Serializable而不能序列化，但是Drived因为实现了接口所以可以序列化。我们知道实现Serializable接口的类不需要调用构造函数就能反序列化。我们还知道类的初始化顺序是首先要初始化父类的。这里反序列化时就会出现要初始化父类的情况，因此需要父类有public默认构造函数。同时如果是方式3的话自然也可以手动序列化父类中的数据。</li>
<li>Externalizable：这个最好说：子类要有public默认构造函数;父类就无所谓了，反正子类的默认构造函数会调用父类的构造函数。至于哪些会序列化，哪些不会，就自己掌控了。</li>
</ul>
</li>
</ol>


<h3>总结</h3>

<ol>
<li><code>Serializable</code>方式(方式1、3)反序列化时不会调用构造函数。</li>
<li><code>Externalizable</code>方式反序列化会调用默认（无参）构造函数，如果没有public默认构造函数会抛异常。</li>
<li><code>static</code> 变量默认不会序列化。</li>
<li><code>transient</code> 关键字修饰的变量默认也不会序列化。</li>
<li><code>serialVersionUID</code>控制class版本信息，防止出现不正常序列化</li>
<li>相同引用的实例序列化时只会序列化一次。反序列化后引用也是相同的。</li>
<li>父类没有序列化而子类序列化的情况。</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android中service的使用]]></title>
    <link href="http://LanderlYoung.github.io/blog/2014/11/09/androidzhong-servicede-shi-yong/"/>
    <updated>2014-11-09T18:07:03+08:00</updated>
    <id>http://LanderlYoung.github.io/blog/2014/11/09/androidzhong-servicede-shi-yong</id>
    <content type="html"><![CDATA[<h2>Android 中service的使用 笔记</h2>

<h3>Service是何物</h3>

<p>service是安卓四大组件（Activity、BroadcastReceiver、ContentProvider、Service）之一。Service用于执行耗时比较长的操作，在后台运行，没有界面显示。</p>

<p><strong>Service与进程</strong>：<br/>
Service可以在应用的主进程中运行，也可以在单独的进程中运行。只需要在Service的[Manifest声明][manifest]中指明进程名即可。同一个应用中所有具有相同进程名的组件（四大组件，包括Activity）均可以运行在同一个进程中。</p>

<p><strong>Service的寿命</strong>： <br/>
这里说的<code>寿命</code>只是service什么时候运行什么时候终止而已并非生命周期的概念。service的启动方式有两种：<br/>
 1. 通过<code>Context::strtService</code>来启动一个Service，这个Service会一直在后台运行，即使启动该Service的组件已经结束。它只能自己结束自己，通过<code>Service::stopSelf()</code>或者是被其他组件显示的结束，通过<code>Context::StopService</code>。或者系统可用内存不够，android系统会选择性的kill掉一些service，在需要的时候再重新启动他们。当然如果进程自己crash也是会结束的(╯‵□′)╯︵┻━┻（这不是废话）。 <br/>
 2. 通过<code>Context::bindService</code>启动Service。一个绑定的Service一般是 C-S（客户端-服务器）类型的，通常会和其他组件进行通信，包括：发送请求，收取返回结果，甚至是进程间通信——IPC。一个绑定的Service的寿命和绑定他的组件相关，当所有绑定到他上面的组件都结束（或者取消绑定——通过<code>Context::unbindService</code>方法）的时候，这个service就自然结束。</p>

<!--more-->


<p>当然启动一个Service还可以同时用上面两个方法：先startService启动一个常驻service，然后bind到他上面进行通信——IPC。</p>

<blockquote><p>Service运行在进程的主线程上。所以如果要执行长耗时或CPU高消耗任务的话还是要自行创建线程，以免阻塞主进程导致service的声明周期方法不能及时回调。</p></blockquote>

<h3>基础知识：</h3>

<p>创建一个Service时，必须创建一个Service的子类，并覆盖相应的声明周期回调方法，来进行相应的处理。你需要覆盖的最重要的几个声明周期回调是：<br/>
 1. onStartCommand：当其他组件（比如Activity）通过startService方法启动Service的时候，系统就会回调这个方法。一旦这个方法被调用，该service就会永久的运行下去。因此你将有义务来结束这个service，通过service自己调用<code>stopSelf</code>或者在其他组件中调用<code>Context::stopService</code>。如果你只是希望通过bind来启动这个service，则没有什么必要来覆盖这个方法。这个方法有三个参数，第一个是启动这个Service的Intent，第二个是启动Flag，第三个是startID，每次这个方法回调的时候这个ID就会增加一次（保证每次都不一样）。<br/>
 2. onBind：当其他组件调用<code>Context::bindService</code>来绑定到service上的时候，一般会在onBind中返回一个IBinder对象的实例，提供给Client调用Service中的方法。相应的如果不希望客户端绑定到service上就返回<code>null</code>好了。 <br/>
 3. onCreate：和Activity的onCreate一样，在整个生命周期中值调用一次——在service被创建的时候。 <br/>
 4. onDestroy：也是和Activity一样，在整个生命周期中也只调用一次——在service被销毁的时候。这个方法是service中最后一个执行的方法。</p>

<p><strong>重申</strong>：</p>

<blockquote><p>如果Service是通过<code>Context::startService</code>来启动的话，它将一直运行下去，知道他结束自己（通过<code>Service::stopSelf</code>方法）或者其他组件结束掉他（通过<code>Context:stopService</code>方法）。<strong>另外</strong>：即使上面所说两个方法（<code>Service::stopSelf</code>和<code>Context:stopService</code>）已经调用，只要有bind到这个service上的组件没有unbind这个service也不会立即结束。</p></blockquote>

<h3>在Manifest中声明你的service：</h3>

<p>语法如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;service</span> <span class="na">android:enabled=</span><span class="s">[&quot;true&quot;</span> <span class="err">|</span> <span class="err">&quot;false&quot;]</span>
</span><span class='line'>         <span class="na">android:exported=</span><span class="s">[&quot;true&quot;</span> <span class="err">|</span> <span class="err">&quot;false&quot;]</span>
</span><span class='line'>         <span class="na">android:icon=</span><span class="s">&quot;drawable resource&quot;</span>
</span><span class='line'>         <span class="na">android:isolatedProcess=</span><span class="s">[&quot;true&quot;</span> <span class="err">|</span> <span class="err">&quot;false&quot;]</span>
</span><span class='line'>         <span class="na">android:label=</span><span class="s">&quot;string resource&quot;</span>
</span><span class='line'>         <span class="na">android:name=</span><span class="s">&quot;string&quot;</span>
</span><span class='line'>         <span class="na">android:permission=</span><span class="s">&quot;string&quot;</span>
</span><span class='line'>         <span class="na">android:process=</span><span class="s">&quot;string&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'>    . . .
</span><span class='line'><span class="nt">&lt;/service&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>上面的attribute和大部分的组件都是一样的。<br/>
 1. <code>android:isolatedProcess</code>：如果是true的话这个service将运行在一个隔离的特殊进程中，并且不具备任何权限（包括你在Manifest中声明的）。唯一能和service通信的方式就是bind和start。
 2. <code>android:process</code>：进程名。就是这个service运行的进程的名字。虽然其他三个组件也可以指定进程名，但是service才是真正需要这个属性的组件！因为一些进程往往需要长时间运行，在主进程之外运行。
     1. 如果不指定这个属性的话，组件将在默认进程中执行，进程名就是包名。<br/>
     2. 如果指定了进程名，则运行在指定的进程中，其他组件也可以访问该service，只要满足service指定的权限。
     3. 特殊情况：如果进程名以「冒号」开头（<code>:</code>），则该service是应用私有的service，其他应用不能访问到。</p>

<p>**bindService和unbindService：
bind和onBind必须成对出现，否则service不会终止。加入你的onBind卸载activity的onDestroy中，然后activity被系统终止而没有调用onDestroy，此时系统会帮你调用onBind并log一个warnning警告你！<br/>
<code>boolean bindService(Intent service, ServiceConnection conn, int flags)</code>:其中intent是启动service的Intent，conn是回调。定义是：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">ServiceConnection</span> <span class="o">{</span>
</span><span class='line'>  <span class="c1">//service连接成功时的回调，IBinder就是service返回的Binder</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onServiceConnected</span><span class="o">(</span><span class="n">ComponentName</span> <span class="n">name</span><span class="o">,</span> <span class="n">IBinder</span> <span class="n">service</span><span class="o">);</span>
</span><span class='line'>  <span class="c1">//service**意外**终止时的回调，一般是service进程crash或者被系统杀掉。他并不会关闭与service的连接。</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onServiceDisconnected</span><span class="o">(</span><span class="n">ComponentName</span> <span class="n">name</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>public void unbindService(ServiceConnection conn)</code>:unbind中有个conn参数，就是你在bind是传入的那个回调。</p>

<h3>Android中的进程间通信——IPC</h3>

<p>这个是一个很精彩的内容，用过android的ipc机制才发现<strong>IPC从未如此简单！</strong>。</p>

<h4>Android Interface Definition Language (AIDL)</h4>

<p>android的IPC通过<code>aidl</code>文件来指定接口，aidl的含义是「Android Interface Definition Language 」，其使用了一种很类似java的语法来制定IPC接口。<br/>
<a name="aidl_chestnut">举个栗子</>，比如在com.example.service包中，写一个aidl文件，内容如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">example</span><span class="o">.</span><span class="na">service</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.example.service.ICallback</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.os.Bundle</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">interface</span> <span class="nc">IDemoServiceController</span> <span class="o">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="nf">getPid</span><span class="o">();</span>
</span><span class='line'>    <span class="kt">int</span> <span class="nf">add</span><span class="o">(</span><span class="kt">int</span> <span class="n">a</span><span class="o">,</span> <span class="kt">int</span> <span class="n">b</span><span class="o">);</span>
</span><span class='line'>    <span class="kt">void</span> <span class="nf">causeToStop</span><span class="o">();</span>
</span><span class='line'>    <span class="kt">void</span> <span class="nf">paramInAndOut</span><span class="o">(</span><span class="n">in</span> <span class="n">Bundle</span> <span class="n">bundleIn</span><span class="o">,</span> <span class="n">out</span> <span class="n">Bundle</span> <span class="n">bundleOut</span><span class="o">,</span> <span class="n">inout</span> <span class="n">Bundle</span> <span class="n">bundleInOut</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>可以看到基本上和JAVA一模一样！<br/>
<strong>需要注意</strong>：<br/>
 1. AIDL支持的数据类型<a name="aidl_types"></>：<br/>
     1. <a href="#aidl_default_type">AIDL默认支持的数据类型</a><br/>
     2. <a href="#parcelable">实现了Parcelable接口</a>任意类<br/>
 2. 另外你必须import所有使用到的class到你的AIDL文件中，即使他跟你的aidl文件在同一个包中！<br/>
 3. 方法可以有0到多个参数，也可以返回void。<br/>
 4. 参数中的所有的非java原始类型（必须指定一个参数的数据走向，是<code>int</code>，<code>out</code>，<code>inout</code>，三者之一）。<br/>
 5. 参数中的所有的原始类型都是in，而且不能被修改。</p>

<p><a name="aidl_default_type"></a>AIDL默认支持的数据类型如下：</p>

<ol>
<li><p>java语言中的所有原始类型（primitive type，比如：int, long, char, boolean)</p></li>
<li><p>String</p></li>
<li><p>CharSequence</p></li>
<li><p>支持数组！虽然文档没说，但经过实验证明是支持数组的。但是数组的元素必须是AIDL所支持的<a href="#aidl_types">数据类型</a>。</p></li>
<li><p>List <strong>注意</strong></p>

<ol>
<li>List中的所有类型也必须是AIDL所支持的<a href="#aidl_types">数据类型</a>。</li>
<li>List可以被当做泛型类来使用（比如<code>List&lt;String&gt;</code>）。</li>
<li>接收参数的另一端（对于client，另一端指service；对于service另一端指  client）收到的List实际类型总是ArrayList。</li>
</ol>
</li>
<li><p>Map <strong>注意</strong></p>

<ol>
<li>Map所支持的类型同上。</li>
<li>泛型Map并不支持。</li>
<li>接收参数的另一端接收到的Map实际类型是HashMap。</li>
</ol>
</li>
</ol>


<h4>实现Parcelable接口</h4>

<p>因为实例是要在进程间传递的因此必须序列化才行。Parcelable就是android定义的一个用于class序列化的即轻量级又高效的机制。<br/>
Parcelable接口的定义如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">Parcelable</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">describeContents</span><span class="o">();</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">writeToParcel</span><span class="o">(</span><span class="n">Parcel</span> <span class="n">dest</span><span class="o">,</span> <span class="kt">int</span> <span class="n">flags</span><span class="o">);</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">interface</span> <span class="nc">Creator</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">public</span> <span class="n">T</span> <span class="nf">createFromParcel</span><span class="o">(</span><span class="n">Parcel</span> <span class="n">source</span><span class="o">);</span>
</span><span class='line'>        <span class="kd">public</span> <span class="n">T</span><span class="o">[]</span> <span class="nf">newArray</span><span class="o">(</span><span class="kt">int</span> <span class="n">size</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>其中<code>describeContents()</code>用于描述数据类型，可以简单的返回0。
然后是用于序列化的方法<code>writeToParcel(Parcel dest, int flags)</code>：<br/>
dest就是用于存储序列的类的容器，然后flags可以是普通的0，或者是<code>PARCELABLE_WRITE_RETURN_VALUE</code>用来告诉你这个object是被写回返回值的（比如下列方法中  <code>Parcelable someFunction()</code>, <code>void someFunction(out Parcelable)</code>, or <code>void someFunction(inout Parcelable)</code>），以此来告诉你该清理资源就赶紧的！</p>

<p>然后问题来了：怎么只有序列化没有反序列化！这只出不进不是要弹尽粮绝（<del>精尽人亡</del>）吗？！<br/>
好了，Parcelable接口是有魔力的，他并不是一个普通的接口。android规定，要实现这个接口除了实现上面两个接口还要在类中定义一个static成员变量，名字必须叫“CREATOR”（此处需要注意配置proguard混淆，很明显android会用反射来获取这个变量，<del>忍不住吐槽一句！google你怎么那么喜欢反射！！</del>），然后这个CREATOR必须是<code>Parcelable.Creator&lt;T&gt;</code>的实现，android系统将使用这个实例来进行反序列化。</p>

<p>举个栗子（盗自android文档Parcelable篇）：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MyParcelable</span> <span class="kd">implements</span> <span class="n">Parcelable</span> <span class="o">{</span>
</span><span class='line'>     <span class="kd">private</span> <span class="kt">int</span> <span class="n">mData</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>     <span class="kd">public</span> <span class="kt">int</span> <span class="nf">describeContents</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>         <span class="k">return</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>     <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>     <span class="kd">public</span> <span class="kt">void</span> <span class="nf">writeToParcel</span><span class="o">(</span><span class="n">Parcel</span> <span class="n">out</span><span class="o">,</span> <span class="kt">int</span> <span class="n">flags</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>         <span class="n">out</span><span class="o">.</span><span class="na">writeInt</span><span class="o">(</span><span class="n">mData</span><span class="o">);</span>
</span><span class='line'>     <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>     <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">Parcelable</span><span class="o">.</span><span class="na">Creator</span><span class="o">&lt;</span><span class="n">MyParcelable</span><span class="o">&gt;</span> <span class="n">CREATOR</span>
</span><span class='line'>             <span class="o">=</span> <span class="k">new</span> <span class="n">Parcelable</span><span class="o">.</span><span class="na">Creator</span><span class="o">&lt;</span><span class="n">MyParcelable</span><span class="o">&gt;()</span> <span class="o">{</span>
</span><span class='line'>         <span class="kd">public</span> <span class="n">MyParcelable</span> <span class="nf">createFromParcel</span><span class="o">(</span><span class="n">Parcel</span> <span class="n">in</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>             <span class="k">return</span> <span class="k">new</span> <span class="nf">MyParcelable</span><span class="o">(</span><span class="n">in</span><span class="o">);</span>
</span><span class='line'>         <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>         <span class="kd">public</span> <span class="n">MyParcelable</span><span class="o">[]</span> <span class="nf">newArray</span><span class="o">(</span><span class="kt">int</span> <span class="n">size</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>             <span class="k">return</span> <span class="k">new</span> <span class="n">MyParcelable</span><span class="o">[</span><span class="n">size</span><span class="o">];</span>
</span><span class='line'>         <span class="o">}</span>
</span><span class='line'>     <span class="o">};</span>
</span><span class='line'>
</span><span class='line'>     <span class="kd">private</span> <span class="nf">MyParcelable</span><span class="o">(</span><span class="n">Parcel</span> <span class="n">in</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>         <span class="n">mData</span> <span class="o">=</span> <span class="n">in</span><span class="o">.</span><span class="na">readInt</span><span class="o">();</span>
</span><span class='line'>     <span class="o">}</span>
</span><span class='line'> <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>在Client和Service端调用aidl指定的方法</h4>

<p>android sdk tool会自动根据aidl文件生成相应的java文件。因此可以直接使用之。</p>

<p><strong>在server端</strong><br/>
前面说过onBind方法会返回一个IBinder的实例给client调用。这里返回的IBinder实例就和你的aidl有关。你需要在server中实现aidl中指定的接口的实现，还举<a href="#aidl_chestnut">刚才的栗子</a>。你需要在server中这样：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="kd">class</span> <span class="nc">MyBinder</span> <span class="kd">extends</span> <span class="n">IDemoServiceController</span><span class="o">.</span><span class="na">Stub</span> <span class="o">{</span>
</span><span class='line'>        <span class="nd">@Override</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getPid</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">RemoteException</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">android</span><span class="o">.</span><span class="na">os</span><span class="o">.</span><span class="na">Process</span><span class="o">.</span><span class="na">myPid</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="nd">@Override</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kt">int</span> <span class="nf">add</span><span class="o">(</span><span class="kt">int</span> <span class="n">a</span><span class="o">,</span> <span class="kt">int</span> <span class="n">b</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">RemoteException</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">a</span> <span class="o">+</span> <span class="n">b</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="nd">@Override</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">causeToStop</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">RemoteException</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">log</span><span class="o">(</span><span class="s">&quot;causeToStop&quot;</span><span class="o">);</span>
</span><span class='line'>            <span class="n">stopSelf</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="nd">@Override</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">addCallback</span><span class="o">(</span><span class="n">ICallback</span> <span class="n">callback</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">RemoteException</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">clientCallback</span> <span class="o">=</span> <span class="n">callback</span><span class="o">;</span>
</span><span class='line'>            <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="nd">@Override</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">invokeCallback</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">RemoteException</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">clientCallback</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">clientCallback</span><span class="o">.</span><span class="na">call</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="nd">@Override</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">paramInAndOut</span><span class="o">(</span><span class="n">Bundle</span><span class="o">[]</span> <span class="n">bundleIn</span><span class="o">,</span> <span class="n">Bundle</span> <span class="n">bundleOut</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">RemoteException</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>其中的Stub是aldi工具自动生成的，<a href="#aidl_implements">等会</a>详细说为啥要继承自他而不是自己实现Interface即可。然后你在onBinde中返回这个实现的实例即可：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="n">IBinder</span> <span class="n">mBinder</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">MyBinder</span><span class="o">();</span>
</span><span class='line'><span class="kd">public</span> <span class="n">IBinder</span> <span class="nf">onBind</span><span class="o">(</span><span class="n">Intent</span> <span class="n">intent</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">log</span><span class="o">(</span><span class="s">&quot;onBind&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">mBinder</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>client端</strong>：
记得上面说的bindService的回调吗在<code>onServiceConnected</code>中：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">onServiceConnected</span><span class="o">(</span><span class="n">ComponentName</span> <span class="n">name</span><span class="o">,</span> <span class="n">IBinder</span> <span class="n">service</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">log</span><span class="o">(</span><span class="s">&quot;service name:&quot;</span> <span class="o">+</span> <span class="n">name</span><span class="o">);</span>
</span><span class='line'>    <span class="n">mDemoServiceBinder</span> <span class="o">=</span> <span class="n">IDemoServiceController</span><span class="o">.</span><span class="na">Stub</span><span class="o">.</span><span class="na">asInterface</span><span class="o">(</span><span class="n">service</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>是的，这里还是要用那个Stub。然后你只需要在Client中调用mDemoServiceBinder 中的所有方法即可。因为Stub是实现了AIDL中的接口的，所以它提供给你了你定义的所有方法。<br/>
<strong>需要注意</strong>：AIDL中定义的方法会抛出RemoteException，所以记得捕获之。</p>

<h3>好奇：“AIDL是怎么实现跨进程方法调用的  ”</h3>

<p>这里点很类似于java EE中的RMI（Remote Method Invoke）。但是比他轻量级，简单，方便。想知道android中怎么实现RMI的，不妨从上面用的的神器Stub入手。于是我们就打开了sdk tool从aidl生成的java文件。看看Stub到底长啥样！！</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kd">abstract</span> <span class="kd">class</span> <span class="nc">Stub</span> <span class="kd">extends</span> <span class="n">android</span><span class="o">.</span><span class="na">os</span><span class="o">.</span><span class="na">Binder</span> <span class="kd">implements</span> <span class="n">com</span><span class="o">.</span><span class="na">example</span><span class="o">.</span><span class="na">service</span><span class="o">.</span><span class="na">IDemoServiceController</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">String</span> <span class="n">DESCRIPTOR</span> <span class="o">=</span> <span class="s">&quot;com.example.service.IDemoServiceController&quot;</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * Construct the stub at attach it to the interface.</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="nf">Stub</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">attachInterface</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="n">DESCRIPTOR</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * Cast an IBinder object into an com.example.service.IDemoServiceController interface,</span>
</span><span class='line'><span class="cm">     * generating a proxy if needed.</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="n">com</span><span class="o">.</span><span class="na">example</span><span class="o">.</span><span class="na">service</span><span class="o">.</span><span class="na">IDemoServiceController</span> <span class="nf">asInterface</span><span class="o">(</span><span class="n">android</span><span class="o">.</span><span class="na">os</span><span class="o">.</span><span class="na">IBinder</span> <span class="n">obj</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">((</span><span class="n">obj</span> <span class="o">==</span> <span class="kc">null</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="n">android</span><span class="o">.</span><span class="na">os</span><span class="o">.</span><span class="na">IInterface</span> <span class="n">iin</span> <span class="o">=</span> <span class="n">obj</span><span class="o">.</span><span class="na">queryLocalInterface</span><span class="o">(</span><span class="n">DESCRIPTOR</span><span class="o">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(((</span><span class="n">iin</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">&amp;&amp;</span> <span class="o">(</span><span class="n">iin</span> <span class="k">instanceof</span> <span class="n">com</span><span class="o">.</span><span class="na">example</span><span class="o">.</span><span class="na">service</span><span class="o">.</span><span class="na">IDemoServiceController</span><span class="o">)))</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="o">((</span><span class="n">com</span><span class="o">.</span><span class="na">example</span><span class="o">.</span><span class="na">service</span><span class="o">.</span><span class="na">IDemoServiceController</span><span class="o">)</span> <span class="n">iin</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="k">new</span> <span class="n">com</span><span class="o">.</span><span class="na">example</span><span class="o">.</span><span class="na">service</span><span class="o">.</span><span class="na">IDemoServiceController</span><span class="o">.</span><span class="na">Stub</span><span class="o">.</span><span class="na">Proxy</span><span class="o">(</span><span class="n">obj</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="n">android</span><span class="o">.</span><span class="na">os</span><span class="o">.</span><span class="na">IBinder</span> <span class="nf">asBinder</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="k">this</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">onTransact</span><span class="o">(</span><span class="kt">int</span> <span class="n">code</span><span class="o">,</span> <span class="n">android</span><span class="o">.</span><span class="na">os</span><span class="o">.</span><span class="na">Parcel</span> <span class="n">data</span><span class="o">,</span> <span class="n">android</span><span class="o">.</span><span class="na">os</span><span class="o">.</span><span class="na">Parcel</span> <span class="n">reply</span><span class="o">,</span> <span class="kt">int</span> <span class="n">flags</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">android</span><span class="o">.</span><span class="na">os</span><span class="o">.</span><span class="na">RemoteException</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">switch</span> <span class="o">(</span><span class="n">code</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">case</span> <span class="nl">INTERFACE_TRANSACTION:</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">reply</span><span class="o">.</span><span class="na">writeString</span><span class="o">(</span><span class="n">DESCRIPTOR</span><span class="o">);</span>
</span><span class='line'>                <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>            <span class="k">case</span> <span class="nl">TRANSACTION_paramInAndOut:</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">data</span><span class="o">.</span><span class="na">enforceInterface</span><span class="o">(</span><span class="n">DESCRIPTOR</span><span class="o">);</span>
</span><span class='line'>                    <span class="n">android</span><span class="o">.</span><span class="na">os</span><span class="o">.</span><span class="na">Bundle</span> <span class="n">_arg0</span><span class="o">;</span>
</span><span class='line'>                    <span class="k">if</span> <span class="o">((</span><span class="mi">0</span> <span class="o">!=</span> <span class="n">data</span><span class="o">.</span><span class="na">readInt</span><span class="o">()))</span> <span class="o">{</span>
</span><span class='line'>                        <span class="n">_arg0</span> <span class="o">=</span> <span class="n">android</span><span class="o">.</span><span class="na">os</span><span class="o">.</span><span class="na">Bundle</span><span class="o">.</span><span class="na">CREATOR</span><span class="o">.</span><span class="na">createFromParcel</span><span class="o">(</span><span class="n">data</span><span class="o">);</span>
</span><span class='line'>                    <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>                        <span class="n">_arg0</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>                    <span class="o">}</span>
</span><span class='line'>                    <span class="n">android</span><span class="o">.</span><span class="na">os</span><span class="o">.</span><span class="na">Bundle</span> <span class="n">_arg1</span><span class="o">;</span>
</span><span class='line'>                    <span class="n">_arg1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">android</span><span class="o">.</span><span class="na">os</span><span class="o">.</span><span class="na">Bundle</span><span class="o">();</span>
</span><span class='line'>                    <span class="k">this</span><span class="o">.</span><span class="na">paramInAndOut</span><span class="o">(</span><span class="n">_arg0</span><span class="o">,</span> <span class="n">_arg1</span><span class="o">);</span>
</span><span class='line'>                    <span class="n">reply</span><span class="o">.</span><span class="na">writeNoException</span><span class="o">();</span>
</span><span class='line'>                    <span class="k">if</span> <span class="o">((</span><span class="n">_arg1</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>                        <span class="n">reply</span><span class="o">.</span><span class="na">writeInt</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
</span><span class='line'>                        <span class="n">_arg1</span><span class="o">.</span><span class="na">writeToParcel</span><span class="o">(</span><span class="n">reply</span><span class="o">,</span> <span class="n">android</span><span class="o">.</span><span class="na">os</span><span class="o">.</span><span class="na">Parcelable</span><span class="o">.</span><span class="na">PARCELABLE_WRITE_RETURN_VALUE</span><span class="o">);</span>
</span><span class='line'>                    <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>                        <span class="n">reply</span><span class="o">.</span><span class="na">writeInt</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>                    <span class="o">}</span>
</span><span class='line'>                    <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="kd">super</span><span class="o">.</span><span class="na">onTransact</span><span class="o">(</span><span class="n">code</span><span class="o">,</span> <span class="n">data</span><span class="o">,</span> <span class="n">reply</span><span class="o">,</span> <span class="n">flags</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">Proxy</span> <span class="kd">implements</span> <span class="n">com</span><span class="o">.</span><span class="na">example</span><span class="o">.</span><span class="na">service</span><span class="o">.</span><span class="na">IDemoServiceController</span> <span class="o">{</span> <span class="o">...</span> <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">...</span>
</span><span class='line'>    <span class="kd">static</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">TRANSACTION_paramInAndOut</span> <span class="o">=</span> <span class="o">(</span><span class="n">android</span><span class="o">.</span><span class="na">os</span><span class="o">.</span><span class="na">IBinder</span><span class="o">.</span><span class="na">FIRST_CALL_TRANSACTION</span> <span class="o">+</span> <span class="mi">3</span><span class="o">);</span>
</span><span class='line'>    <span class="o">...</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>所以说Stub是个抽象类，继承自Binder，实现了AIDL接口，我们在service端就是直接实现的这个类。在Stub有很长的一个方法叫<code>onTransact</code>他是Binder的方法，从上面可以看到（为了篇幅删了好几个case）。然后在case里面才调用到了aidl接口的实现，对边找一个case看看，会发现他是从Parcel中获取参数，然后调用真正的方法实现，最后在把返回值写回parcel。所以可以看到如果client调用某个方法，系统会调用service的onTransact。所以RMI最主要的还是数据（参数，返回值，Exception）的传输。</p>

<p>注意到Client中是把<code>onServiceConnection</code>返回的IBinder通过Stub的<code>asInterface</code>方法获取的ALDI实现，于是去看看<code>asInterface</code>是干嘛的。有点复杂，总之看最后一句<code>return new com.example.service.IDemoServiceController.Stub.Proxy(obj);</code>!哦！Stub里还有个Proxy类。所以我们最后拿到的是Proxy的实例咯。</p>

<p>其实从名字（Proxy）可以知道他是干啥的，就是个代理嘛，用到了面向对象的Proxy设计模式。所以我们在Client中调用的所有方法都是由Proxy实现的，于是看看Proxy。</p>

<p>举个栗子呗：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nd">@Override</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">int</span> <span class="nf">paramInAndOut</span><span class="o">(</span><span class="n">android</span><span class="o">.</span><span class="na">os</span><span class="o">.</span><span class="na">Bundle</span> <span class="n">bundleIn</span><span class="o">,</span> <span class="n">android</span><span class="o">.</span><span class="na">os</span><span class="o">.</span><span class="na">Bundle</span> <span class="n">bundleOut</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">android</span><span class="o">.</span><span class="na">os</span><span class="o">.</span><span class="na">RemoteException</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">android</span><span class="o">.</span><span class="na">os</span><span class="o">.</span><span class="na">Parcel</span> <span class="n">_data</span> <span class="o">=</span> <span class="n">android</span><span class="o">.</span><span class="na">os</span><span class="o">.</span><span class="na">Parcel</span><span class="o">.</span><span class="na">obtain</span><span class="o">();</span>
</span><span class='line'>    <span class="n">android</span><span class="o">.</span><span class="na">os</span><span class="o">.</span><span class="na">Parcel</span> <span class="n">_reply</span> <span class="o">=</span> <span class="n">android</span><span class="o">.</span><span class="na">os</span><span class="o">.</span><span class="na">Parcel</span><span class="o">.</span><span class="na">obtain</span><span class="o">();</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">_result</span><span class="o">;</span>
</span><span class='line'>    <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">_data</span><span class="o">.</span><span class="na">writeInterfaceToken</span><span class="o">(</span><span class="n">DESCRIPTOR</span><span class="o">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">((</span><span class="n">bundleIn</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">_data</span><span class="o">.</span><span class="na">writeInt</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
</span><span class='line'>            <span class="n">bundleIn</span><span class="o">.</span><span class="na">writeToParcel</span><span class="o">(</span><span class="n">_data</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">_data</span><span class="o">.</span><span class="na">writeInt</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="n">mRemote</span><span class="o">.</span><span class="na">transact</span><span class="o">(</span><span class="n">Stub</span><span class="o">.</span><span class="na">TRANSACTION_paramInAndOut</span><span class="o">,</span> <span class="n">_data</span><span class="o">,</span> <span class="n">_reply</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
</span><span class='line'>        <span class="n">_reply</span><span class="o">.</span><span class="na">readException</span><span class="o">();</span>
</span><span class='line'>        <span class="n">_result</span> <span class="o">=</span> <span class="n">_reply</span><span class="o">.</span><span class="na">readInt</span><span class="o">();</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">((</span><span class="mi">0</span> <span class="o">!=</span> <span class="n">_reply</span><span class="o">.</span><span class="na">readInt</span><span class="o">()))</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">bundleOut</span><span class="o">.</span><span class="na">readFromParcel</span><span class="o">(</span><span class="n">_reply</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span> <span class="k">finally</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">_reply</span><span class="o">.</span><span class="na">recycle</span><span class="o">();</span>
</span><span class='line'>        <span class="n">_data</span><span class="o">.</span><span class="na">recycle</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">_result</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>吼吼吼，所以就是把参数写进Parcel，调用Binder的transact，再从返回的parcel中取得数据，最后返回。其中readException会捕获service中抛出的异常，然后丢回给client。</p>

<h3>附录——Service回调Client</h3>

<p>通过AIDL可以很方便的让client调用service的方法，但是有时候service需要回调Client。（比如报告任务的进度从而更新进度条。）</p>

<p>最简单粗暴的方式就是发广播！这个方法怎么样？好啊！真的不错，但是不够轻量级吧。而且有点不够方便。</p>

<blockquote><p>有没有像AIDL中Client调Service中的方法呢，还是那样方便呀！
答案是：<strong>有！</strong></p></blockquote>

<p>好了，关子卖完了。说正事！</p>

<p>这里需要定义一个回调函数的AIDL接口（比如 &ldquo;ICallback.aidl&#8221;），然后还要在Client——Service通信的AIDL中添加类似<code>boolean addCallback(in ICallback callback);</code>、<code>void invokeCallback();</code>的方法。</p>

<p>然后你在Client实现一个<code>ICallback.Stub</code>类，在<code>addCallback</code>中把他传给service，service收到之后存下来，当你调用<code>invokeCallback</code>的时候service就会调用刚才传进来的callback。</p>

<p>栗子——Client:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="n">ICallback</span> <span class="n">mServiceCallback</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ICallback</span><span class="o">.</span><span class="na">Stub</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">call</span><span class="o">(</span><span class="kt">int</span> <span class="n">code</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">log</span><span class="o">(</span><span class="s">&quot;pid:&quot;</span> <span class="o">+</span> <span class="n">android</span><span class="o">.</span><span class="na">os</span><span class="o">.</span><span class="na">Process</span><span class="o">.</span><span class="na">myPid</span><span class="o">());</span>
</span><span class='line'>        <span class="n">mStartServiceButton</span><span class="o">.</span><span class="na">setBackgroundColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">parseColor</span><span class="o">(</span><span class="s">&quot;#ff00ff&quot;</span><span class="o">));</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">};</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="o">(</span><span class="n">mDemoServiceBinder</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">mDemoServiceBinder</span><span class="o">.</span><span class="na">addCallback</span><span class="o">(</span><span class="n">mServiceCallback</span><span class="o">);</span>
</span><span class='line'>        <span class="n">log</span><span class="o">(</span><span class="s">&quot;add 1 + 2 = &quot;</span> <span class="o">+</span> <span class="n">mDemoServiceBinder</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="mi">2</span><span class="o">));</span>
</span><span class='line'>    <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">RemoteException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">log</span><span class="o">(</span><span class="s">&quot;add 1 + 2 reveived remoteexception&quot;</span> <span class="o">+</span> <span class="n">e</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">log</span><span class="o">(</span><span class="s">&quot;not binded yet&quot;</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>栗子——Service：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="kd">class</span> <span class="nc">MyBinder</span> <span class="kd">extends</span> <span class="n">IDemoServiceController</span><span class="o">.</span><span class="na">Stub</span> <span class="o">{</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">addCallback</span><span class="o">(</span><span class="n">ICallback</span> <span class="n">callback</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">RemoteException</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">clientCallback</span> <span class="o">=</span> <span class="n">callback</span><span class="o">;</span>
</span><span class='line'>        <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">invokeCallback</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">RemoteException</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">clientCallback</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">clientCallback</span><span class="o">.</span><span class="na">call</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>很简单，就酱！</p>

<h3>参考资料</h3>

<p>[API Guide——Service]：<a href="http://developer.android.com/guide/components/services.html">http://developer.android.com/guide/components/services.html</a></p>

<p>[API Guide——AIDL]: <a href="http://developer.android.com/guide/components/aidl.html">http://developer.android.com/guide/components/aidl.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android中的WakeLock使用]]></title>
    <link href="http://LanderlYoung.github.io/blog/2014/10/31/androidzhong-de-wakelockshi-yong/"/>
    <updated>2014-10-31T10:08:26+08:00</updated>
    <id>http://LanderlYoung.github.io/blog/2014/10/31/androidzhong-de-wakelockshi-yong</id>
    <content type="html"><![CDATA[<p>android系统在手机屏幕锁定之后一般会让手机休眠，以提高电池的使用时间。但是休眠意味着CPU频率降低，有时候可能需要做一些需要大量运算的任务，所以需要唤醒CPU。WakeLock可以做到这一点。</p>

<!--more-->


<h3>WakeLock的创建是：</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">PowerManager</span> <span class="n">powerManager</span> <span class="o">=</span> <span class="o">(</span><span class="n">PowerManager</span><span class="o">)</span> <span class="n">getSystemService</span><span class="o">(</span><span class="n">POWER_SERVICE</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">Wakelock</span> <span class="n">wakeLock</span> <span class="o">=</span> <span class="n">powerManager</span><span class="o">.</span><span class="na">newWakeLock</span><span class="o">(</span><span class="n">PowerManager</span><span class="o">.</span><span class="na">PARTIAL_WAKE_LOCK</span><span class="o">,</span>
</span><span class='line'>
</span><span class='line'>        <span class="s">&quot;MyWakelockTag&quot;</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>另外如果要使用WakeLock需要在Manifest中添加如下权限</p>

<p><code>&lt;uses-permission android:name="android.permission.WAKE_LOCK" /&gt;</code></p>

<h3>WakeLock的等级</h3>

<p>上面的第一个参数是WakeLock levelAndFlag，分别代表了一种WakeLock等级，并且可以通过「或」位操作组合使用。他们是：</p>

<ol>
<li><p>PARTIAL_WAKE_LOCK：保证CPU保持高性能运行，而屏幕和键盘背光（也可能是触摸按键的背光）关闭。一般情况下都会使用这个WakeLock。</p></li>
<li><p>ACQUIRE_CAUSES_WAKEUP：这个WakeLock除了会使CPU高性能运行外还会导致屏幕亮起，即使屏幕原先处于关闭的状态下。</p></li>
<li><p>ON_AFTER_RELEASE：如果释放WakeLock的时候屏幕处于亮着的状态，则在释放WakeLock之后让屏幕再保持亮一小会。如果释放WakeLock的时候屏幕本身就没亮，则不会有动作。</p></li>
</ol>


<p>被<strong>弃用</strong>的WakeLock：</p>

<ol>
<li><p>SCREEN_DIM_WAKE_LOCK：保证屏幕亮起，但是亮度可能比较低。同时键盘背光也可以不亮。</p></li>
<li><p>SCREEN_BRIGHT_WAKE_LOCK ：保证屏幕全亮，同时键盘背光也亮。</p></li>
<li><p>FULL_WAKE_LOCK：表现和SCREEN_BRIGHT_WAKE_LOCK 类似，但是区别在于这个等级的WakeLock使用的是<strong>最高亮度</strong>！</p></li>
</ol>


<p>这三个Level在API17被弃用。被弃用说明肯定有替代品吗，上面三个类型的作用无非就是保持屏幕长亮。所以推荐是用WindowFlag<code>WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON</code>。使用方法是：</p>

<ol>
<li><p>在Activity中： <code>getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);</code></p></li>
<li><p>甚至可以在布局中添加这个属性：<code>android:keepScreenOn="true"</code></p></li>
</ol>


<p>被<strong>隐藏</strong>的WakeLock：</p>

<p>android中的部分api并不对用户应用开放，他们通过在注释中加入<code>{@hide}</code>来注明。但是在SDK提供的源代码中是可以看到的。</p>

<ul>
<li>WAIT_FOR_PROXIMITY_NEGATIVE：用于和接近传感器配合使用，来实现电话应用中打电话时可以使屏幕黑掉，手机离开时又能使屏幕亮起来的功能。acqure的时候屏幕会暗下来，release之后屏幕会亮。其值是32（int）。虽然被hide起来，但是感觉这个超实用的好吗！！！为啥要hide起来。。。「话说在API21 上终于开放了（开放这么晚有个屁用啊(╯‵□′)╯︵┻━┻）」经试验，不过newWakeLock的时候flag直接用32代替是可以创建这个等级的WakeLock的，但是因为是非开放API，不能保证第三方OEM修改这个代码实现！因此使用起来并不安全。「说的好像开放的API第三方OEM就不会乱改一样。。。(╯‵□′)╯︵┻━┻」</li>
</ul>


<h3>WakeLock的使用：</h3>

<ul>
<li><p>获取WakeLock：</p>

<ol>
<li><p><code>void acquire()</code>:获得WakeLock</p></li>
<li><p><code>void acquire(long timeOut)</code>:获得WakeLock timeOut时长，当超过timeOut之后系统自动释放WakeLock。</p></li>
</ol>
</li>
<li><p>释放WakeLock：<code>release()</code></p></li>
<li><p>判断是否已经获取WakeLock：<code>boolean isHeld()</code></p></li>
<li><p><code>void setReferenceCounted(boolean value)</code>：是否使用引用计数。类似于垃圾回收策略，只是把垃圾回收改成了WakeLock回收。如果value是true的话将启用该特性，如果一个WakeLock acquire了多次也必须release多次才能释放掉。但是如果释放次数比acquire多则会抛出<code>RuntimeException("WakeLock under-locked " + mTag)</code>异常。<strong>默认是开启了引用计数的！</strong></p></li>
</ul>


<h3>PowerManager的几个实用方法</h3>

<ol>
<li><p><code>boolean PowerManager::isScreenOn ()</code>判断屏幕是否亮着（不管是暗的dimed还是正常亮度），在API20被弃用，推荐<code>boolean PowerManager::isInteractive ()</code></p></li>
<li><p><code>void PowerManager::goToSleep(long time)</code>time是时间戳，一般是System.currentTimeMillis()+timeDelay。强制系统立刻休眠，需要Manifest中添加权限<code>"android.permission.DEVICE_POWER"</code>。按下电源键锁屏时调用的就是这个方法。</p></li>
<li><p><code>void PowerManager::wakeUp(long time)</code>与上面对应。参数含义，所需权限与上同。按下电源键解锁屏幕时调用的就是这个方法。</p></li>
<li><p><code>void PowerManager::reboot(String reason)</code>重启手机，reason是要传给linux内核的参数，比如“recovery”重启进recovery模式，“fastboot”重启进fastboot模式。需要权限<code>"android.permission.REBOOT"</code>。</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Java 中JNI的使用]]></title>
    <link href="http://LanderlYoung.github.io/blog/2014/10/16/java-zhong-jnide-shi-yong/"/>
    <updated>2014-10-16T21:10:55+08:00</updated>
    <id>http://LanderlYoung.github.io/blog/2014/10/16/java-zhong-jnide-shi-yong</id>
    <content type="html"><![CDATA[<p>JNI全称是<code>Java Native Interface</code>是在JAVA和Native层（包括但不限于C/C++）相互调用的接口规范。</p>

<p>JNI在JAVA1.1中正式推出，在JAVA1.2版本中加入了<code>JNI_OnLoad</code>，<code>JNI_OnUnload</code>方法，这两个方法还是很有用的，后面再说。</p>

<!--more-->


<h3>JNI基础篇</h3>

<p>Java通过JNI调用本地方法的过程大致是</p>

<ol>
<li>写一个Java类，在其中声明对应要调用的native方法，用<code>native</code>关键字修饰。 比如<code>private static native int native_newInstance();</code></li>
<li>通过<code>javah</code>命令生成java类对应的C/C++头文件。<code>javah -encoding utf-8 -cp src com.young.soundtouch.SoundTouch</code></li>
<li>在C/C++中实现头文件中声明的函数</li>
<li>编译C/C++代码为动态库（Windows中的dll，linux(Android)中的so，MAC OSX中的dylib）。</li>
<li>在java代码中加载动态库，即可像调用Java方法一样，调用到native函数。</li>
</ol>


<p>其中第三步在Java1.2中增加了<code>JNI_OnLoad</code>方法之后有另一种实现方式（<a href="#jni_onload">后面</a>说）。</p>

<p>javah生成的头文件大致是这样的：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/* DO NOT EDIT THIS FILE - it is machine generated */</span>
</span><span class='line'><span class="err">#</span><span class="n">include</span> <span class="o">&lt;</span><span class="n">jni</span><span class="o">.</span><span class="na">h</span><span class="o">&gt;</span>
</span><span class='line'><span class="cm">/* Header for class com_young_soundtouch_SoundTouch */</span>
</span><span class='line'>
</span><span class='line'><span class="err">#</span><span class="n">ifndef</span> <span class="n">_Included_com_young_soundtouch_SoundTouch</span>
</span><span class='line'><span class="err">#</span><span class="n">define</span> <span class="n">_Included_com_young_soundtouch_SoundTouch</span>
</span><span class='line'><span class="err">#</span><span class="n">ifdef</span> <span class="n">__cplusplus</span>
</span><span class='line'><span class="n">extern</span> <span class="s">&quot;C&quot;</span> <span class="o">{</span>
</span><span class='line'><span class="err">#</span><span class="n">endif</span>
</span><span class='line'><span class="err">#</span><span class="n">undef</span> <span class="n">com_young_soundtouch_SoundTouch_SETTING_USE_AA_FILTER</span>
</span><span class='line'><span class="err">#</span><span class="n">define</span> <span class="n">com_young_soundtouch_SoundTouch_SETTING_USE_AA_FILTER</span> <span class="mi">0L</span>
</span><span class='line'>  <span class="cm">/*</span>
</span><span class='line'><span class="cm"> * Class:     com_young_soundtouch_SoundTouch</span>
</span><span class='line'><span class="cm"> * Method:    native_getDefaultSampleElementSize</span>
</span><span class='line'><span class="cm"> * Signature: ()I</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>  <span class="n">JNIEXPORT</span> <span class="n">jint</span> <span class="n">JNICALL</span> <span class="nf">Java_com_young_soundtouch_SoundTouch_native_1getDefaultSampleElementSize</span>
</span><span class='line'>      <span class="o">(</span><span class="n">JNIEnv</span> <span class="o">*,</span> <span class="n">jclass</span><span class="o">);</span>
</span><span class='line'><span class="err">#</span><span class="n">ifdef</span> <span class="n">__cplusplus</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="err">#</span><span class="n">endif</span>
</span><span class='line'><span class="err">#</span><span class="n">endif</span>
</span></code></pre></td></tr></table></div></figure>


<p>文件开头就是普通的头文件，但是可以发现：</p>

<ol>
<li><p>包含了jni.h头文件（一般位于<code>$JAVA_HOME/jd{jdk-version}/include</code>文目录内）。这是JNI中所有的<a href="#jni_type">类型</a>、函数、宏等定义的地方。所以C/C++世界的JNI是由他制定的游戏规则。</p></li>
<li><p>在类中生命的常量（<code>static final</code>）类型会在头文件中以宏的形式出现，这一点还是很方便的。</p></li>
<li><p>函数的注释还是比较全的，包括了：</p>

<ol>
<li>对应的class</li>
<li>对应的java方法名</li>
<li>对应java方法的<a href="#signature">签名</a></li>
</ol>
</li>
<li>方法的声明显得有点奇怪，由以下及部分组成：

<ol>
<li><code>JNIEXPORT</code>这是函数的导出方式</li>
<li>jint 返回值类型（jint由jni.h定义，对应int，<a href="#jni_type">下面</a>具体再说吧</li>
<li>JNICALL 函数的调用方式也就是汇编级别参数的传入方式</li>
<li>Java_com_young_soundtouch_SoundTouch_native_1getDefaultSampleElementSize —— 超级长的函数名！！！格式是<code>Java_</code> + <code>类全名</code> + <code>_</code> + JAVA中声明的native方法名。其中会把包名中的点（<code>.</code>）替换成下划线（<code>_</code>），同时为了避免冲突把下划线替换成<code>_1</code>。</li>
<li>方法的参数，上面的这个方法在JAVA的声明中实际上是没有参数的，其中的<code>JNIENV</code>顾名思义是JNI环境，和具体的线程绑定。而第二个参数<code>jclass</code>其实是java中的<code>Class</code>因为上面是一个<code>static</code>方法，因此第二个参数是<code>jclass</code>。如果是一个实例方法则对应第二个参数是<code>jobject</code>，相当于java中的<code>this</code>。</li>
</ol>
</li>
</ol>


<p>下面在C/C++中实现这个方法就行啦。但是在动手前现大致了解以下jni.h制定的游戏规则。</p>

<h4><a name="jni_type">类型转换</a>：</h4>

<p>javah生成的头文件里面使用的类型都是jni.h定义的，目的是做到<strong>平台无关</strong>，比如保证在所有平台上jint都是32位的有符号整型。</p>

<p><strong>基本对应关系如下：</strong></p>

<table>
<thead>
<tr>
<th style="text-align:center;">  jni 类型 </th>
<th style="text-align:center;"> JAVA类型 </th>
<th style="text-align:center;"> 对应本地类型  </th>
<th style="text-align:center;">  类型<a href="#signature">签名</a> </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;">  jboolean </td>
<td style="text-align:center;"> boolean </td>
<td style="text-align:center;"> uint8_t </td>
<td style="text-align:center;"> Z</td>
</tr>
<tr>
<td style="text-align:center;">  jbyte </td>
<td style="text-align:center;"> byte </td>
<td style="text-align:center;"> char </td>
<td style="text-align:center;"> B </td>
</tr>
<tr>
<td style="text-align:center;">  jcahr </td>
<td style="text-align:center;"> char </td>
<td style="text-align:center;"> uint16_t </td>
<td style="text-align:center;"> C </td>
</tr>
<tr>
<td style="text-align:center;">  jshort </td>
<td style="text-align:center;"> short </td>
<td style="text-align:center;"> int16_t </td>
<td style="text-align:center;"> S </td>
</tr>
<tr>
<td style="text-align:center;">  jint </td>
<td style="text-align:center;"> int </td>
<td style="text-align:center;"> int32_t </td>
<td style="text-align:center;"> I </td>
</tr>
<tr>
<td style="text-align:center;">  jlong </td>
<td style="text-align:center;"> long </td>
<td style="text-align:center;"> int64_t </td>
<td style="text-align:center;"> J </td>
</tr>
<tr>
<td style="text-align:center;">  jfloat </td>
<td style="text-align:center;"> float </td>
<td style="text-align:center;"> float </td>
<td style="text-align:center;"> F </td>
</tr>
<tr>
<td style="text-align:center;">  jdouble </td>
<td style="text-align:center;"> double </td>
<td style="text-align:center;"> double </td>
<td style="text-align:center;"> D </td>
</tr>
<tr>
<td style="text-align:center;">  void </td>
<td style="text-align:center;"> void </td>
<td style="text-align:center;"> void </td>
<td style="text-align:center;"> V </td>
</tr>
</tbody>
</table>


<p><strong>引用类型对应关系：</strong></p>

<table>
<thead>
<tr>
<th style="text-align:center;"> java类型 </th>
<th style="text-align:center;">  JNI 类型 </th>
<th style="text-align:center;"> java类型 </th>
<th style="text-align:center;">  JNI 类型 </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;"> 所有的实例引用 </td>
<td style="text-align:center;"> jobject </td>
<td style="text-align:center;">java.lang.Class </td>
<td style="text-align:center;">  jclass </td>
</tr>
<tr>
<td style="text-align:center;"> java.lang.String </td>
<td style="text-align:center;"> jstring </td>
<td style="text-align:center;"> Ocject[] </td>
<td style="text-align:center;"> jobjectArray </td>
</tr>
<tr>
<td style="text-align:center;"> java.lang.Throwable </td>
<td style="text-align:center;"> jthrowable </td>
<td style="text-align:center;"> 基本类型[] </td>
<td style="text-align:center;"> jxxxArray </td>
</tr>
</tbody>
</table>


<p>通过表格发现，除了上面定义的<code>String</code>，<code>Class</code>，<code>Throwable</code>，其他的类（除了数组）都是以<code>jobject</code>的形式出现的！事实上jstring， jclass也都是object的子类。所以这里还是和java层一样，一切皆jobject。（当然，如果jni在C语言中编译的话是没有继承的概念的，此时jstring，jclass等其实就是jobject！用了typedef转换而已！！）</p>

<p>接下来是<code>JNIEnv *</code>这个指针，他提供了JNI中的一系列操作的接口函数。</p>

<h4>JNI中操作jobject</h4>

<p>其实也就是在native层操作java层的实例。
要操作一个实例无疑是：</p>

<ol>
<li><p>获取/设置 （即 get/set ）成员变量（field）的值</p></li>
<li><p>调用成员方法（method）</p></li>
</ol>


<p>所以问题来了：（挖掘机技术哪家强？！ o(*≧▽≦)ツ┏━┓ ）</p>

<p><strong>怎么得到field 和 method？</strong></p>

<p>通过使用<strong>jfieldID和jmethodID</strong>：
在JNI中使用类似于放射的方式来进行field和method的操作。JNI中使用jfieldID和jmethodID来表示成员变量和成员方法，获取方式是：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">jfieldID</span> <span class="nf">GetFieldID</span><span class="o">(</span><span class="n">jclass</span> <span class="n">clazz</span><span class="o">,</span> <span class="kd">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">name</span><span class="o">,</span> <span class="kd">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">sig</span><span class="o">);</span>
</span><span class='line'><span class="n">jfieldID</span> <span class="nf">GetStaticFieldID</span><span class="o">(</span><span class="n">jclass</span> <span class="n">clazz</span><span class="o">,</span> <span class="kd">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">name</span><span class="o">,</span> <span class="kd">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">sig</span><span class="o">);</span>
</span><span class='line'><span class="n">jmethodID</span> <span class="nf">GetMethodID</span><span class="o">(</span><span class="n">jclass</span> <span class="n">clazz</span><span class="o">,</span> <span class="kd">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">name</span><span class="o">,</span> <span class="kd">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">sig</span><span class="o">);</span>
</span><span class='line'><span class="n">jmethodID</span> <span class="nf">GetStaticMethodID</span><span class="o">(</span><span class="n">jclass</span> <span class="n">clazz</span><span class="o">,</span> <span class="kd">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">name</span><span class="o">,</span> <span class="kd">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">sig</span><span class="o">)</span> <span class="o">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>其中最后一个参数是<a href="#signature">签名</a>。
<strong>获取jclass的方法</strong>除了实用上面静态方法的第二个参数外，还可以手动获取。
<code>jclass FindClass(const char *name)</code>
需要注意的是<code>name</code>参数，他是一个类包括包名的全称，但是需要把包名中的点<code>.</code>替换成斜杠<code>/</code>。（好吧，事实上我不是太明白为啥要这么做。）</p>

<p>有了jfieldID和jmethodID就知道狗蛋住哪了，现在去狗蛋家找他玩 ♪(^∇^*)</p>

<p><strong>成员变量:</strong></p>

<ol>
<li><p>get:</p>

<ol>
<li><p><code>&lt;type&gt; Get&lt;type&gt;Field(jobject , jfieldID);</code>即可获得对应的field，其中field的类型是type，可以是上面<a href="#jni_type">类型</a>所叙述的任何一种。</p></li>
<li><p><code>&lt;type&gt; GetStatic&lt;type&gt;Field(jobject , jfieldID);</code>同1，唯一的区别是用来获取静态成员。</p></li>
</ol>
</li>
<li><p>set:</p>

<ol>
<li><p><code>void Set&lt;type&gt;Field(jobject obj, jfieldID fieldID, &lt;type&gt; val)</code></p></li>
<li><p><code>void SetStatic&lt;type&gt;Field(jclass clazz, jfieldID fieldID, &lt;type&gt; value);</code></p></li>
</ol>
</li>
</ol>


<p><strong>成员方法：</strong></p>

<p>调用方法自然要把方法的参数传递进去，JNI中实现了三种参数的传递方式：</p>

<ol>
<li><p><code>Call&lt;type&gt;Method(jobject obj, jmethod jmethodID, ...)</code>其中<code>...</code>是C中的可变长参数，类似于<code>printf</code>那样，可以传递不定长个参数。于是你可以把java方法需要的参数在这里面传递进去。</p></li>
<li><p><code>Call&lt;type&gt;MethodV(jobject obj, jmethodID methodID, va_list args)</code>其中的<code>va_list</code>也是C中可变长参数相关的内容（我不了解，不敢瞎说。。。偷懒粘一下Oracle的文档）Programmers place all arguments to the method in an args argument of type va_list that immediately follows the methodID argument. The Call<type>MethodV routine accepts the arguments, and, in turn, passes them to the Java method that the programmer wishes to invoke.</p></li>
<li><p><code>Call&lt;type&gt;MethodA(jobject obj, jmethodID methodID, const jvalue * args)</code>哎！这个我知道可以说两句LOL~~这里的<code>jvalue</code>通过查代码发现就是JNI中各个数据类型的union，所以可以使用任何类型复制！所以参数的传入方式是通过一个jvalue的数组，数组内的元素可以是任何jni类型。</p></li>
</ol>


<p>然后问题又来了：（挖掘机技术到底哪家强？！o(*≧▽≦)ツ┏━┓）
如果传进来的参数和java声明的参数的不一致会怎么样！（即不符合<a href="#signature">方法签名</a>）这里文档中没用明确解释，但是说道:</p>

<blockquote><p>Exceptions raised during the execution of the Java method.</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">typedef</span> <span class="n">union</span> <span class="n">jvalue</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">jboolean</span> <span class="n">z</span><span class="o">;</span>
</span><span class='line'>    <span class="n">jbyte</span>    <span class="n">b</span><span class="o">;</span>
</span><span class='line'>    <span class="n">jchar</span>    <span class="n">c</span><span class="o">;</span>
</span><span class='line'>    <span class="n">jshort</span>   <span class="n">s</span><span class="o">;</span>
</span><span class='line'>    <span class="n">jint</span>     <span class="n">i</span><span class="o">;</span>
</span><span class='line'>    <span class="n">jlong</span>    <span class="n">j</span><span class="o">;</span>
</span><span class='line'>    <span class="n">jfloat</span>   <span class="n">f</span><span class="o">;</span>
</span><span class='line'>    <span class="n">jdouble</span>  <span class="n">d</span><span class="o">;</span>
</span><span class='line'>    <span class="n">jobject</span>  <span class="n">l</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span> <span class="n">jvalue</span><span class="o">;</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>调用实例方法（instance method）：

<ol>
<li><code>&lt;type&gt; Call&lt;type&gt;Method(jobject obj, jmethodID methodID, ...);</code>调用一个具有<code>&lt;type&gt;</code>类型返回值的方法。</li>
<li><code>&lt;type&gt; Call&lt;type&gt;MethodV(jobject obj, jmethodID methodID, va_list args);</code></li>
<li><code>Call&lt;type&gt;MethodA(jobject obj, jmethodID methodID, const jvalue * args)</code></li>
</ol>
</li>
<li>调用静态方法（static method）：

<ol>
<li><code>&lt;type&gt; CallStatic&lt;type&gt;Method(jobject obj, jmethodID methodID, ...);</code></li>
<li><code>&lt;type&gt; CallStatic&lt;type&gt;MethodV(jobject obj, jmethodID methodID, va_list args);</code></li>
<li><code>CallStatic&lt;type&gt;MethodA(jobject obj, jmethodID methodID, const jvalue * args)</code></li>
</ol>
</li>
<li>调用父类方法（super.method)，这个就有点不一样了。多了一个jclass参数，jclass可以使obj的父类，也可以是obj自己的class，但是methodID必须是从jclass获取到的，这样就可以调用到父类的方法。

<ol>
<li><code>&lt;type&gt; CallNonvirtual&lt;type&gt;Method(jobject obj, jclass clazz, jmethodID methodID, ...)</code></li>
<li><code>&lt;type&gt; CallNonvirtual&lt;type&gt;MethodV(JNIEnv *env, jobject obj, jclass clazz, jmethodID methodID, va_list args);</code></li>
<li><code>&lt;type&gt; CallNonvirtual&lt;type&gt;MethodA(JNIEnv *env, jobject obj, jclass clazz, jmethodID methodID, const jvalue *args);</code></li>
</ol>
</li>
</ol>


<h4>数组的操作</h4>

<p>数组是一个很常用的数据类型，在但是在JNI中并不能直接操作jni数组（比如jshortArray，jfloatArray）。使用方法是：</p>

<ol>
<li>获取数组长度：<code>jsize GetArrayLength(jarray array)</code></li>
<li>创建新数组： <code>ArrayType New&lt;PrimitiveType&gt;Array(jsize length);</code></li>
<li>通过JNI数组获取一个C/C++数组：<code>&lt;type&gt;* Get&lt;type&gt;ArrayElements(jshortArray array, jboolean *isCopy)</code></li>
<li>指定原数组的范围获取一个C/C++数组（该方法只针对于原始数据数组，不包括Object数组）：<code>void Get&lt;PrimitiveType&gt;ArrayRegion(JNIEnv *env, ArrayType array, jsize start, jsize len, NativeType *buf);</code></li>
<li>设置数组元素：<code>void Set&lt;type&gt;ArrayRegion(jshortArray array, jsize start, jsize len,const &lt;type&gt; *buf)</code>。again，如果是Object数组需要使用：<code>void SetObjectArrayElement(JNIEnv *env, jobjectArray array, jsize index, jobject value);</code></li>
<li>使用完之后，释放数组：<code>void Release&lt;type&gt;ArrayElements(jshortArray array, jshort *elems, jint mode)</code></li>
</ol>


<p>有点要说明的：</p>

<ol>
<li><p>上面的3中的isCopy：当你调用getArrayElements时JVM（Runtime）可以直接返回数组的原始指针，或者是copy一份，返回给你，这是由JVM决定的。所以isCopy就是用来记录这个的。他的值是<code>JNI_TURE</code>或者<code>JNI_FALSE</code>。</p></li>
<li><p>6释放数组。<strong>一定要释放你所获得数组</strong>。其中有一个<code>mode</code>参数，其有三个可选值，分别表示：</p></li>
<li><p> 0</p>

<ul>
<li><p>原始数组：允许原数组被垃圾回收。</p></li>
<li><p>copy： 数据会从get返回的buffer copy回去，同时buffer也会被释放。</p></li>
</ul>
</li>
<li><p> JNI_COMMIT</p>

<ul>
<li><p>原始数组：什么也不做</p></li>
<li><p>copy： 数据会从get返回的buffer copy回去，同时buffer<strong>不会</strong>被释放。</p></li>
</ul>
</li>
<li><p> JNI_ABORT</p>

<ul>
<li><p>原始数组：允许原数组被垃圾回收。之前由JNI_COMMIT提交的对数组的修改将得以保留。</p></li>
<li><p>copy： buffer会被释放，同时buffer中的修改将不会copy回数组！</p></li>
</ul>
</li>
</ol>


<h4>关于引用与垃圾回收</h4>

<p>比如上面有个方法传了一个jobject进来，然后我把她保存下来，方便以后使用。这样做是<strong>不行哒</strong>！因为他是一个LocalReference，所以不能保证jobject指向的真正的实例不被回收。也就是说有可能你用的时候那个指针已经是个野指针的。然后你的程序就直接Segment Fault了，呵呵。。。</p>

<p>在JNI中提供了三种类型的引用：</p>

<ol>
<li>Local Reference：即本地引用。在JNI层的函数，所有非全局引用对象都是Local Reference， 它包括函数调用是传入的jobject和JNI成函数创建的jobject。Local Reference的特点是一旦JNI层的函数返回，这些jobject就可能被垃圾回收。</li>
<li>Glocal Reference：全局引用，这些对象不会主动释放，永远不会被垃圾回收。</li>
<li>Weak Glocal Reference：弱全局引用，一种特殊的Global Reference，在运行过程中有可能被垃圾回收。所以使用之前需要使用<code>jboolean IsSameObject(jobject obj1, jobject obj2)</code>判断它是否已被回收。</li>
</ol>


<p>Glocal Reference:<br/>
 1. 创建：<code>jobject NewGlobalRef(jobject lobj);</code><br/>
 2. 释放：<code>void DeleteGlobalRef(jobject gref);</code></p>

<p>Local Reference:<br/>
LocalReference也有一个释放的函数：<code>void DeleteLocalRef(jobject obj)</code>，他会立即释放Local Reference。
这个方法可能略显多余，其实也是有它的用处的。刚才说Local Reference会再函数返回后释放掉，但是假如函数返回前就有很多引用占了很多内存，最好函数内就尽早释放不必要的内存。</p>

<h4>关于JNI_OnLoad<a name="jni_onload"></a></h4>

<p>开头提到JNI_OnLoad是java1.2中新增加的方法，对应的还有一个JNI_OnUnload，分别是动态库被JVM加载、卸载的时候调用的函数。有点类似于WIndows里的DllMain。<br/>
前面提到的实现对应native的方法是实现javah生成的头文件中定义的方法，这样有几个弊端：</p>

<ol>
<li>函数名太长。很长。。相当长。。。</li>
<li>函数会被导出，也就谁说可以在动态库的导出函数表里面找到这些函数。这将有利于别人对动态库的逆向工程，因此带来安全问题。</li>
</ol>


<p>现在有了JNI_OnLoad，情况好多了。你不光能在其中完成动态注册native函数的工作还可以完成一些初始化工作。java对应的有了<code>jint RegisterNatives(jclass clazz, const JNINativeMethod *methods,jint nMethods)</code>函数。参数分别是：</p>

<ol>
<li><p>jclass clazz，于native层对应的java class</p></li>
<li><p>const JNINativeMethod *methods这是一个数组，数组的元素是JNI定义的一个结构体JNINativeMethod</p></li>
<li><p>上面的数组的长度</p></li>
</ol>


<p><strong>JNINativeMethod</strong>：代码中的定义如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm"> * used in RegisterNatives to describe native method name, signature,</span>
</span><span class='line'><span class="cm"> * and function pointer.</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>
</span><span class='line'><span class="n">typedef</span> <span class="n">struct</span> <span class="o">{</span>
</span><span class='line'>    <span class="kt">char</span> <span class="o">*</span><span class="n">name</span><span class="o">;</span>
</span><span class='line'>    <span class="kt">char</span> <span class="o">*</span><span class="n">signature</span><span class="o">;</span>
</span><span class='line'>    <span class="kt">void</span> <span class="o">*</span><span class="n">fnPtr</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span> <span class="n">JNINativeMethod</span><span class="o">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>所以他有三个字段，分别是</p>

<table>
<thead>
<tr>
<th style="text-align:left;"> 字段 </th>
<th style="text-align:left;"> 含义 </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;">char *name </td>
<td style="text-align:left;"> java class中的native方法名，只需要方法名即可 </td>
</tr>
<tr>
<td style="text-align:left;"> char *signature </td>
<td style="text-align:left;"> 方法<a href="#signature">签名</a></td>
</tr>
<tr>
<td style="text-align:left;"> void *fnPtr </td>
<td style="text-align:left;"> 对应native方法的函数指针 </td>
</tr>
</tbody>
</table>


<p>于是现在你可以不用导出native函数了，而且可以随意给函数命名，唯一要保证的是参数及返回值的统一。然后需要一个<code>const JNINativeMethod *methods</code>数组来完成映射工作。</p>

<p>看起来大概是这样的:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="c1">//只需导出JNI_OnLoad和JNI_OnUnload（这个函数不实现也行）</span>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * These are the exported function in this library.</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="n">JNIEXPORT</span> <span class="n">jint</span> <span class="n">JNICALL</span> <span class="nf">JNI_OnLoad</span><span class="p">(</span><span class="n">JavaVM</span> <span class="o">*</span><span class="n">vm</span><span class="p">,</span> <span class="kt">void</span> <span class="o">*</span><span class="n">reserved</span><span class="p">);</span>
</span><span class='line'><span class="n">JNIEXPORT</span> <span class="kt">void</span> <span class="n">JNICALL</span> <span class="nf">JNI_OnUnload</span><span class="p">(</span><span class="n">JavaVM</span> <span class="o">*</span><span class="n">vm</span><span class="p">,</span> <span class="kt">void</span> <span class="o">*</span><span class="n">reserved</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//为了在动态库中不用导出函数，全部声明为static</span>
</span><span class='line'><span class="c1">//native methods registered by JNI_OnLoad</span>
</span><span class='line'><span class="k">static</span> <span class="n">jint</span> <span class="nf">native_newInstance</span> <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="n">env</span><span class="p">,</span> <span class="n">jclass</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//实现native方法</span>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm">* Class:     com_young_soundtouch_SoundTouch</span>
</span><span class='line'><span class="cm">* Method:    native_newInstance</span>
</span><span class='line'><span class="cm">* Signature: ()I</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="k">static</span> <span class="n">jint</span> <span class="nf">native_newInstance</span>
</span><span class='line'><span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="n">env</span><span class="p">,</span> <span class="n">jclass</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">instanceID</span> <span class="o">=</span> <span class="o">++</span><span class="n">sInstanceIdentifer</span><span class="p">;</span>
</span><span class='line'>  <span class="n">SoundTouchWrapper</span> <span class="o">*</span><span class="n">instance</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SoundTouchWrapper</span><span class="p">();</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">instance</span> <span class="o">!=</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">sInstancePool</span><span class="p">[</span><span class="n">instanceID</span><span class="p">]</span> <span class="o">=</span> <span class="n">instance</span><span class="p">;</span>
</span><span class='line'>      <span class="o">++</span><span class="n">sInstanceCount</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="n">LOGDBG</span><span class="p">(</span><span class="s">&quot;create new SouncTouch instance:%d&quot;</span><span class="p">,</span> <span class="n">instanceID</span><span class="p">);</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">instanceID</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//构造JNINativeMethod数组</span>
</span><span class='line'><span class="k">static</span> <span class="n">JNINativeMethod</span> <span class="n">gsNativeMethods</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>      <span class="p">{</span>
</span><span class='line'>          <span class="s">&quot;native_newInstance&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="s">&quot;()I&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="k">reinterpret_cast</span><span class="o">&lt;</span><span class="kt">void</span> <span class="o">*&gt;</span> <span class="p">(</span><span class="n">native_newInstance</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'><span class="p">}</span><span class="err">；</span>
</span><span class='line'><span class="c1">//计算数组大小</span>
</span><span class='line'><span class="k">static</span> <span class="k">const</span> <span class="kt">int</span> <span class="n">gsMethodCount</span> <span class="o">=</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">gsNativeMethods</span><span class="p">)</span> <span class="o">/</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">JNINativeMethod</span><span class="p">)</span><span class="err">；</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//JNI_OnLoad，注册native方法。</span>
</span><span class='line'><span class="n">JNIEXPORT</span> <span class="n">jint</span> <span class="n">JNICALL</span> <span class="n">JNI_OnLoad</span><span class="p">(</span><span class="n">JavaVM</span> <span class="o">*</span><span class="n">vm</span><span class="p">,</span> <span class="kt">void</span> <span class="o">*</span><span class="n">reserved</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">JNIEnv</span><span class="o">*</span> <span class="n">env</span><span class="p">;</span>
</span><span class='line'>  <span class="n">jclass</span> <span class="n">clazz</span><span class="p">;</span>
</span><span class='line'>  <span class="n">LOGD</span><span class="p">(</span><span class="s">&quot;JNI_OnLoad called&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">vm</span><span class="o">-&gt;</span><span class="n">GetEnv</span><span class="p">(</span><span class="k">reinterpret_cast</span><span class="o">&lt;</span><span class="kt">void</span><span class="o">**&gt;</span><span class="p">(</span><span class="o">&amp;</span><span class="n">env</span><span class="p">),</span> <span class="n">JNI_VERSION_1_6</span><span class="p">)</span> <span class="o">!=</span> <span class="n">JNI_OK</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="c1">//FULL_CLASS_NAME是个宏定义，定义了对应java类的全名（要把包名中的点(.)_替换成斜杠(/)）</span>
</span><span class='line'>  <span class="n">clazz</span> <span class="o">=</span> <span class="n">env</span><span class="o">-&gt;</span><span class="n">FindClass</span><span class="p">(</span><span class="n">FULL_CLASS_NAME</span><span class="p">);</span>
</span><span class='line'>  <span class="n">LOGDBG</span><span class="p">(</span><span class="s">&quot;register method, method count:%d&quot;</span><span class="p">,</span> <span class="n">gsMethodCount</span><span class="p">);</span>
</span><span class='line'>  <span class="c1">//注册JNI函数</span>
</span><span class='line'>  <span class="n">env</span><span class="o">-&gt;</span><span class="n">RegisterNatives</span><span class="p">(</span><span class="n">clazz</span><span class="p">,</span> <span class="n">gsNativeMethods</span><span class="p">,</span>
</span><span class='line'>      <span class="n">gsMethodCount</span><span class="p">);</span>
</span><span class='line'>  <span class="c1">//必须返回一个JNI_VERSION_1_1以上（不含）的版本号，否则直接加载失败</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">JNI_VERSION_1_6</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>实战技巧篇</h3>

<p>这里主要是巧用C中的宏来减少重复工作：</p>

<h4>迅速生成全名</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="c1">//修改包名时只需要改以下的宏定义即可</span>
</span><span class='line'><span class="cp">#define FULL_CLASS_NAME &quot;com/young/soundtouch/SoundTouch&quot;</span>
</span><span class='line'><span class="cp">#define func(name) Java_ ## com_young_soundtouch_SoundTouch_ ## name</span>
</span><span class='line'><span class="cp">#define constance(cons) com_young_soundtouch_SoundTouch_ ## cons</span>
</span></code></pre></td></tr></table></div></figure>


<p>比如<code>func(native_1newInstance)</code>展开成：<code>Java_com_young_soundtouch_SoundTouch_native_1newInstance</code>即JNI中需要导出的函数名（不过用动态注册方式没太大用了）</p>

<p><code>constance(AUDIO_FORMAT_PCM16)</code>展开成<code>com_young_soundtouch_SoundTouch_AUDIO_FORMAT_PCM16</code>这个着实有用。</p>

<p>而且如果包名改了也可以很方便的适应之。</p>

<h3>安卓的log</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="c1">//define __USE_ANDROID_LOG__ in makefile to enable android log</span>
</span><span class='line'><span class="cp">#if defined(__ANDROID__) &amp;&amp; defined(__USE_ANDROID_LOG__)</span>
</span><span class='line'><span class="cp">#include &lt;android/log.h&gt;</span>
</span><span class='line'><span class="cp">#define LOGV(...)   __android_log_print((int)ANDROID_LOG_VERBOSE, &quot;ST_jni&quot;, __VA_ARGS__)</span>
</span><span class='line'><span class="cp">#define LOGD(msg)  __android_log_print((int)ANDROID_LOG_DEBUG, &quot;ST_jni_dbg&quot;, &quot;line:%3d %s&quot;, __LINE__, msg)</span>
</span><span class='line'><span class="cp">#define LOGDBG(fmt, ...) __android_log_print((int)ANDROID_LOG_DEBUG, &quot;ST_jni_dbg&quot;, &quot;line:%3d &quot; fmt, __LINE__, __VA_ARGS__)</span>
</span><span class='line'><span class="cp">#else</span>
</span><span class='line'><span class="cp">#define LOGV(...) </span>
</span><span class='line'><span class="cp">#define LOGD(fmt) </span>
</span><span class='line'><span class="cp">#define LOGDBG(fmt, ...) </span>
</span><span class='line'><span class="cp">#endif</span>
</span></code></pre></td></tr></table></div></figure>


<p>通过这样的宏定义在打LOGD或者LOGDBG的时候还能自动加上行号！调试起来爽多了！</p>

<h4>C++中清理内存的方式</h4>

<p>由于C++里面需要手动清楚内存，因此我的解决方案是定义一个map，给每个实例一个id，用id把java中的对象和native中的对象绑定起来。在java层定义一个<code>release</code>方法，用来释放本地的对象。
本地的 KEY-对象 映射
<code>static std::map&lt;int, SoundTouchWrapper*&gt; sInstancePool;</code></p>

<h4>关于NDK</h4>

<p>因为安卓的约定是把本地代码放到jni目录下面，但是假如有多个jni lib的时候会比较混乱，所以方案是每一个lib都在jni里面建一个子目录，然后jni里面的Android.mk就可以去构建子目录中的lib了。</p>

<p>jni/Android.mk如下（超级简单）：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='makefile'><span class='line'><span class="nv">LOCAL_PATH</span> <span class="o">:=</span> <span class="k">$(</span>call my-dir<span class="k">)</span>
</span><span class='line'><span class="cp">include $(call all-subdir-makefiles)</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后在子目录soundtouch_module中的Android.mk就可以像一般的Android.mk一样书写规则了。</p>

<p>同时记录一下在Andoroid.mk中使用makefile内建函数<code>wildcard</code>的方法。
有时候源文件是一个目录下的所有.cpp/.c文件，这时候<code>wildcard</code>来统配会很方便。但是Android.mk与普通的Makefile的不同在于：</p>

<ol>
<li>调用Android.mkmingling的${CWD}并不是Android.ml所在的目录。所以Android.mk中有一个变量<code>LOCAL_PATH := $(call my-dir)</code>来记录当前 Android.mk所在的目录。</li>
<li>同时还会把所有的<code>LOCAL_SRC_FILES</code> 前面加上<code>$(LOCAL_PATH)</code>这样写makefile的时候就可以用相对路径了，提供了方便。但是这也导致了坑！</li>
</ol>


<p>因为1，直接使用相对路径会导致<code>wildcard</code>匹配不到源文件。所以最好这么写<code>FILE_LIST := $(wildcard $(LOCAL_PATH)/soundtouch_source/source/SoundTouch/*.cpp)</code>。然而又因为2，这样还是不行的。所以还需要匹配之后把<code>$(LOCAL_PATH)</code>的部分去掉，因此还得这样<code>$(FILE_LIST:$(LOCAL_PATH)/%=%)</code>.</p>

<p>还有个小tip：<code>LOCAL_CFLAGS</code>中最好加上这个定义<code>-fvisibility=hidden</code>这样就不会在动态库中导出不必要的函数了。</p>

<h3>附录<a name="signature">签名</a></h3>

<p>JAVA中的函数签名包括了函数的参数类型，返回值类型。因此即使是重载了的函数，其函数签名也不一样。java编译器就会根据函数签名来判断你调用的到地址哪个方法。
签名中表示类型是这样的</p>

<p>1.基本类型都对应一个大写字母，如下：</p>

<table>
<thead>
<tr>
<th style="text-align:center;"> JAVA类型 </th>
<th style="text-align:center;">  类型签名 </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;"> boolean </td>
<td style="text-align:center;"> Z </td>
</tr>
<tr>
<td style="text-align:center;">byte </td>
<td style="text-align:center;"> B </td>
</tr>
<tr>
<td style="text-align:center;"> char  </td>
<td style="text-align:center;"> C </td>
</tr>
<tr>
<td style="text-align:center;"> short </td>
<td style="text-align:center;"> S </td>
</tr>
<tr>
<td style="text-align:center;"> int </td>
<td style="text-align:center;"> I </td>
</tr>
<tr>
<td style="text-align:center;"> long </td>
<td style="text-align:center;"> J </td>
</tr>
<tr>
<td style="text-align:center;"> float </td>
<td style="text-align:center;"> F </td>
</tr>
<tr>
<td style="text-align:center;"> double </td>
<td style="text-align:center;"> D </td>
</tr>
<tr>
<td style="text-align:center;"> void </td>
<td style="text-align:center;"> V </td>
</tr>
</tbody>
</table>


<p>2.如果是类则是：
L + 类全名（报名中的点(.)用(/)代替）+ ；
比如java.lang.String 对应的是 <code>Ljava/lang/String;</code></p>

<p>3.如果是数组，则在前面加<code>[</code>然后加类型签名，几位数组就加几个<code>[</code>
比如int[]对应<code>[I</code>，boolean[][] 对应 <code>[[Z</code>，java.lang.Class[]对应<code>[Ljava/lang/Class;</code></p>

<p>可以通过javap命令来获取签名（javah生成的头文件注释中也有签名）:<code>javap -x -p &lt;类全名&gt;</code>
坑爹的是java中并不能通过反射来获取方法签名，需要自己写一个帮助类。
（其实我还写了个小程序可以自动生成签名，和JNI_OnLoad中注册要用到的<code>JNINativeMethod</code>数组，从此再也不用糟心的去写那该死的数组了。LOL~~~）</p>

<p>[全文完]</p>

<h4>参考资料</h4>

<p>[1] : <a href="http://docs.oracle.com/javase/7/docs/technotes/guides/jni/spec/functions.html">Oracle java SE documents</a></p>

<p>[2] : <a href="http://baike.baidu.com/view/6415820.htm">深入理解Android 卷 1</a> 第二章 ，邓凡平著，机械工业出版社</p>

<p>[3]: <a href="http://developer.android.com/training/articles/perf-jni.html">Google Android documents &ndash; JNI Tips</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Run commamd before build in IntelliJ IDEA]]></title>
    <link href="http://LanderlYoung.github.io/blog/2014/10/14/run-commamd-before-build-in-intellij-idea/"/>
    <updated>2014-10-14T17:22:29+08:00</updated>
    <id>http://LanderlYoung.github.io/blog/2014/10/14/run-commamd-before-build-in-intellij-idea</id>
    <content type="html"><![CDATA[<p>I came across <a href="http://stackoverflow.com/questions/8380693/run-e-g-calc-exe-before-build-in-intellij-with-android-projects">this question at <code>StackOverflow</code></a> when I was searching the same question in Google.</p>

<p>I found that you don&rsquo;t need a ant build script, that is just use the IntelliJ default system is just fine. For example, I am doing my project with android-ndk, so I want intelliJ run <code>ndk-build NDK_DEBUG=1 -j4</code> before normal build.
 <!--more--></p>

<p>Here is the solution:</p>

<ol>
<li>Run -> Editor configuration</li>
<li>Select on of you build configuration in the left side of the dialog.</li>
<li>On the right side there is an area marked as <strong>Before Launch</strong></li>
<li>Click the &ldquo;plus&rdquo; button, choose <code>Run External Tool</code> in the popup menu.</li>
<li>Click the &ldquo;plus&rdquo; button in the new popup window</li>
<li>Then you get into the real configuration window.</li>
</ol>


<p>Let me show you some fine picture:</p>

<p>1. Select on of you build configuration in the left side of the dialog.</p>

<p><img src="http://LanderlYoung.github.io/assets/storage/run_commamd_before_build_in_intellij/step1.png" alt="Select on of you build configuration in the left side of the dialog." /></p>

<p>2. On the right side there is an area marked as <strong>Before Launch</strong></p>

<p><img src="http://LanderlYoung.github.io/assets/storage/run_commamd_before_build_in_intellij/step2.png" alt="On the right side there is an area marked as **Before Launch** " /></p>

<p>3. Select on of you build configuration in the left side of the dialog.</p>

<p> <img src="http://LanderlYoung.github.io/assets/storage/run_commamd_before_build_in_intellij/step3.png" alt="enter image description here" /></p>

<p>4. Click the &ldquo;plus&rdquo; button in the new popup window</p>

<p><img src="http://LanderlYoung.github.io/assets/storage/run_commamd_before_build_in_intellij/step4.png" alt="Click the &quot;plus&quot; button in the new popup window" /></p>

<p>5. Then you get into the real configuration window.</p>

<p><img src="http://LanderlYoung.github.io/assets/storage/run_commamd_before_build_in_intellij/step5.png" alt="Then you get into the real configuration window." /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[安卓监听新收到短信]]></title>
    <link href="http://LanderlYoung.github.io/blog/2014/09/30/an-zhuo-jian-ting-xin-shou-dao-duan-xin/"/>
    <updated>2014-09-30T11:52:25+08:00</updated>
    <id>http://LanderlYoung.github.io/blog/2014/09/30/an-zhuo-jian-ting-xin-shou-dao-duan-xin</id>
    <content type="html"><![CDATA[<p>安卓收到短信的事件是由系统发一个有序广播的，所以这里需要一个BroadcastReceiver。receiver收到的Intent里面并不是直接存储的短信内容，而是短信的原始数据。所以我们需要自己解码。</p>

<p><strong>获取短信的原始数据：</strong>
原始数据被叫做<a href="http://en.wikipedia.org/wiki/Protocol_data_unit">PDU</a>，一个PDU就是一个数据段，如果短信比较长的话可能是由几个PDU组成的。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nd">@Override</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">onReceive</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">,</span> <span class="n">Intent</span> <span class="n">intent</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="c1">//监听到验证码短信后自动填写验证码</span>
</span><span class='line'>    <span class="n">Log</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;SMSBroadcastReceiver SMS_RECEIVED&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">Bundle</span> <span class="n">smsBundle</span> <span class="o">=</span> <span class="n">intent</span><span class="o">.</span><span class="na">getExtras</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">smsBundle</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">Object</span><span class="o">[]</span> <span class="n">pdus</span> <span class="o">=</span> <span class="o">(</span><span class="n">Object</span><span class="o">[])</span> <span class="n">smsBundle</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">&quot;pdus&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>




<!--more-->


<p>上面的<code>smsBundle.get("pdus")</code>返回的实际类型是<code>byte[][]</code>，二位数组的每一个子数组就是一个pdu。</p>

<p><strong>解码短信内容：</strong>
这里主要使用到的是<a href="http://developer.android.com/reference/android/telephony/SmsMessage.html#createFromPdu(byte[])"><code>SmsMessage.createFromPdu</code></a>方法。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="n">String</span> <span class="nf">parseMessageFromRawData</span><span class="o">(</span><span class="n">Object</span><span class="o">[]</span> <span class="n">pdus</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">pdus</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">StringBuilder</span> <span class="n">message</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">StringBuilder</span><span class="o">();</span>
</span><span class='line'>        <span class="k">for</span> <span class="o">(</span><span class="n">Object</span> <span class="n">pdu</span> <span class="o">:</span> <span class="n">pdus</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">SmsMessage</span> <span class="n">smsMessage</span> <span class="o">=</span> <span class="n">SmsMessage</span><span class="o">.</span><span class="na">createFromPdu</span><span class="o">((</span><span class="kt">byte</span><span class="o">[])</span> <span class="n">pdu</span><span class="o">);</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">smsMessage</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="k">continue</span><span class="o">;</span>
</span><span class='line'>            <span class="n">message</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">smsMessage</span><span class="o">.</span><span class="na">getDisplayMessageBody</span><span class="o">());</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">message</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">Log</span><span class="o">.</span><span class="na">e</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;SMSBroadcastReceiver read sms failed&quot;</span><span class="o">,</span> <span class="n">e</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">OutOfMemoryError</span> <span class="n">oom</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">Log</span><span class="o">.</span><span class="na">e</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;SMSBroadcastReceiver caused OOM =_=!&quot;</span><span class="o">,</span> <span class="n">oom</span><span class="o">);</span>
</span><span class='line'>        <span class="c1">//为了避免后续操作出现问题，gc一下</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">gc</span><span class="o">();</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">gc</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>上面的重点就是<code>SmsMessage smsMessage = SmsMessage.createFromPdu((byte[]) pdu);</code>这一句了。需要注意的是这个操作容易导致OOM（已经有好多Crash上报了。。。），所以要特别处理一下。</p>

<p><strong>另外：</strong>
上面的<a href="http://developer.android.com/reference/android/telephony/SmsMessage.html#createFromPdu(byte[])"><code>SmsMessage.createFromPdu</code></a>方法已经被官方文档说明即将被废弃（deprecated）原因是为了同时支持<a href="http://en.wikipedia.org/wiki/3GPP">3GPP</a>和<a href="http://en.wikipedia.org/wiki/3GPP2">3GPP2</a>，他们是移动系统通信标准的拟定组织分别拟定了<code>GSM/UMTS/LTE</code>标准和<code>CDMA/LTE</code>标准。因此推荐是用的方法是<code>createFromPdu(byte[] pdu, String format)</code>其中fotmat可以是<code>SmsConstants.FORMAT_3GPP</code>或者<code>SmsConstants.FORMAT_3GPP2</code>。</p>

<p>出于好奇我看了一眼<a href="http://developer.android.com/reference/android/telephony/SmsMessage.html#createFromPdu(byte[])"><code>SmsMessage.createFromPdu</code></a>的代码实现，发现他本身就做了制式判断的（=_=!），代码写的还是不错的，粘出来。万一以后这个方法被废弃了，还有个参考。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="n">SmsMessage</span> <span class="nf">createFromPdu</span><span class="o">(</span><span class="kt">byte</span><span class="o">[]</span> <span class="n">pdu</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>     <span class="n">SmsMessage</span> <span class="n">message</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// cdma(3gpp2) vs gsm(3gpp) format info was not given,</span>
</span><span class='line'>    <span class="c1">// guess from active voice phone type</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">activePhone</span> <span class="o">=</span> <span class="n">TelephonyManager</span><span class="o">.</span><span class="na">getDefault</span><span class="o">().</span><span class="na">getCurrentPhoneType</span><span class="o">();</span>
</span><span class='line'>    <span class="n">String</span> <span class="n">format</span> <span class="o">=</span> <span class="o">(</span><span class="n">PHONE_TYPE_CDMA</span> <span class="o">==</span> <span class="n">activePhone</span><span class="o">)</span> <span class="o">?</span>
</span><span class='line'>            <span class="n">SmsConstants</span><span class="o">.</span><span class="na">FORMAT_3GPP2</span> <span class="o">:</span> <span class="n">SmsConstants</span><span class="o">.</span><span class="na">FORMAT_3GPP</span><span class="o">;</span>
</span><span class='line'>    <span class="n">message</span> <span class="o">=</span> <span class="n">createFromPdu</span><span class="o">(</span><span class="n">pdu</span><span class="o">,</span> <span class="n">format</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="kc">null</span> <span class="o">==</span> <span class="n">message</span> <span class="o">||</span> <span class="kc">null</span> <span class="o">==</span> <span class="n">message</span><span class="o">.</span><span class="na">mWrappedSmsMessage</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// decoding pdu failed based on activePhone type, must be other format</span>
</span><span class='line'>        <span class="n">format</span> <span class="o">=</span> <span class="o">(</span><span class="n">PHONE_TYPE_CDMA</span> <span class="o">==</span> <span class="n">activePhone</span><span class="o">)</span> <span class="o">?</span>
</span><span class='line'>                <span class="n">SmsConstants</span><span class="o">.</span><span class="na">FORMAT_3GPP</span> <span class="o">:</span> <span class="n">SmsConstants</span><span class="o">.</span><span class="na">FORMAT_3GPP2</span><span class="o">;</span>
</span><span class='line'>        <span class="n">message</span> <span class="o">=</span> <span class="n">createFromPdu</span><span class="o">(</span><span class="n">pdu</span><span class="o">,</span> <span class="n">format</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">message</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Java(Android)中线程池的使用]]></title>
    <link href="http://LanderlYoung.github.io/blog/2014/09/23/javazhong-xian-cheng-chi-de-shi-yong/"/>
    <updated>2014-09-23T17:39:40+08:00</updated>
    <id>http://LanderlYoung.github.io/blog/2014/09/23/javazhong-xian-cheng-chi-de-shi-yong</id>
    <content type="html"><![CDATA[<p>java SE5提供了<code>java.util.concurrent.Executors</code>类来实现线程池的功能。
<em>Thinking in Java</em> 中这么解释Executors：</p>

<blockquote><p><code>Executors</code>允许你执行异步的任务（task）而不用显式的去管理线程的生命周期。</p></blockquote>

<p>可以说Executors是线程们的管理者，让线程们的生存方式从<strong>放养</strong>变成了<strong>圈养</strong>。Executors来处理一次能同时运行多少个线程，哪个线程在哪个线程的后面执行。总的来说Executors之于线程就像操作系统止于进程一样——管理者与被管理者的关系。</p>

<!--more-->


<p><strong>new Thread的弊端如下：</strong></p>

<ol>
<li><p>每次new Thread新建对象性能差。</p></li>
<li><p>线程缺乏统一管理，可能无限制新建线程，相互之间竞争，及可能占用过多系统资源导致死机或oom。</p></li>
<li><p>缺乏更多功能，如定时执行、定期执行、线程中断。</p></li>
</ol>


<p><strong>相比new Thread，Java提供的四种线程池的好处在于：</strong></p>

<ol>
<li><p>重用存在的线程，减少对象创建、消亡的开销，性能佳。</p></li>
<li><p>可有效控制最大并发线程数，提高系统资源的使用率，同时避免过多资源竞争，避免堵塞。</p></li>
<li><p>提供定时执行、定期执行、单线程、并发数控制等功能。</p></li>
</ol>


<p>（上述比较摘自：<a href="http://www.trinea.cn/android/java-android-thread-pool/">http://www.trinea.cn/android/java-android-thread-pool/</a> ）</p>

<p>Executors的使用静态方法来创建相应的<code>ExecutorService</code>接口实现，如下：</p>

<ul>
<li><code>Executors.newCachedThreadPool()</code></li>
<li><code>Executors.newFixedThreadPool()</code></li>
<li><code>Executors.newScheduledThreadPool()</code></li>
<li><code>Executors.newSingleThreadExecutor()</code></li>
</ul>


<p> 这些线程池分别具有不同的能力：
 （Java Concurrency in Pratice——java编程实践，如下解释）</p>

<ul>
<li><p>newFixedThreadPool：创建一个定长的线程池，每提交一个任务就创建一个线程，直到达到池的最大长度，这时线程池会保持长度不再变化（如果一个线程由于未预期的Exception而结束，线程池会补充一个新线程）。</p></li>
<li><p>newCachedThreadPool：创建一个可缓存的线程池，如果当前线程池的长度超过了处理的需要时，它可以灵活的回收空闲的线程，当需要增加时，它可以灵活的添加新的线程，而不会对池的长度作任何限制。</p></li>
<li><p>newSingleThreadExecutor：创建一个单线程化的executor，它只创建唯一的worker线程来执行任务，如果这个线程异常结束，会有另一个取代它。executor会保证任务依照任务队列规定的顺序（FIFO，LIFO，优先级）执行。</p></li>
<li><p>newScheduledThreadPool：创建一个定长的线程池，而且支持定时的以及周期性的任务执行，类似于Timer。</p></li>
</ul>


<h3>ExecutorService的使用</h3>

<p><code>ExecutorService</code>接口继承自Executor的接口定义，他提供了一个线程池应该实现的方法定义，包括运行/提交新任务的方法，结束任务的方法，等等。
<code>ExecutorService</code>的接口有：</p>

<p><strong>提交任务</strong>：</p>

<ul>
<li><p><code>execute</code>（该方法继承自Executor）提交一个runnable接口封装的task，没有返回值</p></li>
<li><p><code>submit</code> 提交一个Callable或者Runnable接口封装的任务，返回一个Feature。</p></li>
<li><p><code>invokeAll</code>传入一个task的容器，执行其包含的所有task。</p></li>
<li><p><code>invokeAny</code>传入一个task的容器，只要其中一个task异常终止，就结束其他task（如果还没执行就不再执行）。</p></li>
</ul>


<p><strong>终止线程池</strong>：</p>

<ul>
<li><p><code>shotdown</code>线程池停止接受新的task，所有已有task执行完后线程池随即关闭</p></li>
<li><p><code>shutdownNow</code>立即终止线程池内的所有task，关闭线程池</p></li>
</ul>


<p><strong>重要的一点</strong>：因为只要有一个非Daemon线程运行着，就会阻止JVM的正常退出。所以线程池一定要记得shutdown！</p>

<p>所以向ExecutorService提交的任务可以是通过<code>Runnable</code>或者<code>Callable</code>接口封装的，其中Callable接口带有一个类型参数，表示返回值的类型。Runable可以使用execute方法，提交。但是Runnable和Callable都可以使用submit方法提交。execute方法没有返回值，submit方法会返回一个Future<T>类型，可以查看任务的执行状态以及获取任务的返回）。所以当你想要一个任务完成时返回一个返回值，submit将是你的不二之选（不要三四千，不要一两千，只要998，submit抱回家）。</p>

<p><strong>关于Future<T></strong></p>

<p>Future功能强大，提供了对任务的各种操作：</p>

<ul>
<li><p><code>isDone()</code> 返回任务是否已经执行完成</p></li>
<li><p><code>get()</code>返回任务的返回值，如果调用get的时候任务还没有完成，则会阻塞知道任务完成</p></li>
<li><p><code>get(long timeout, TimeUnit unit)</code>同上，但是多了个参数，表示阻塞的最大时长。如果在设定的最大阻塞时长内没有指定任务没有顺利结束并返回结果，该方法会抛出一个<code>java.util.concurrent.TimeoutException</code>。</p></li>
<li><p><code>cancel(boolean mayInterruptIfRunning)</code> 尝试去取消一个任务的执行，如果一个任务已经结束，或者已经被取消，或者因为一些什么原因不能够取消，则会取消失败，同时返回false。如果一个任务还没有开始执行就被取消了，那么它将不再执行。如果这个方法被调用的时候，任务正在执行，则将由参数<code>mayInterruptIfRunning</code>决定是否终止正在运行的task。</p></li>
<li><p><code>isCancelled()</code> 返回任务是否已经被取消</p></li>
</ul>


<p>了解过强大的Future是否觉得execute可以去死了，连个Future都返回不了，事实上并非如此，因为submit最终调用的还是execute-_-其实现方法是给execute传入一个RunnableFuture接口的实例（在标准库里有一个很好的实现叫FutureTask），RunnableFuteure接口定义了一个觉有Future功能的Runnalbe。想自定义Future就可以通过这种方式。</p>

<p>submit也是可以传入Runnable的，当传入Runnable时会怎样呢：</p>

<ul>
<li><p>当使用 <code>submit(Runnable)</code>时，返回一个<code>Future&lt;?&gt;</code>，它的get方法会返回null，除此之外其他方法调用表现正常。</p></li>
<li><p>当使用<code>submit(Runnable task, T result)</code>时，返回一个Future<T>，它的get方法会返回result。就好比task是一个会返回result的Callable。</p></li>
</ul>


<p>另外一个小tip就是Executors提供了Runnable转Callabe的静态方法：</p>

<ul>
<li><p><code>public static &lt;T&gt; Callable&lt;T&gt; callable(Runnable task, T result)</code>将Runnable转换成能返回result的Callable接口</p></li>
<li><p><code>public static Callable&lt;Object&gt; callable(Runnable task)</code>将Runnable转换成返回null的Callable接口</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[安卓中传感器的使用]]></title>
    <link href="http://LanderlYoung.github.io/blog/2014/09/10/an-zhuo-zhong-chuan-gan-qi-de-shi-yong/"/>
    <updated>2014-09-10T10:12:22+08:00</updated>
    <id>http://LanderlYoung.github.io/blog/2014/09/10/an-zhuo-zhong-chuan-gan-qi-de-shi-yong</id>
    <content type="html"><![CDATA[<p>由于需要一个像系统电话应用那样：打电话时可以使屏幕黑掉，手机离开时又能使屏幕亮起来的功能。所以需要能够获取「接近传感器」的数据。</p>

<p>Android中的传感器只是一个抽象，它可能是硬件传感器，也可能是通过软件模拟的一个传感器。但是不管哪一种，对程序员来说都是一样的。</p>

<p>Android中的传感器分为两类：</p>

<ul>
<li><p>连续性的传感器 比如：接近传感器，加速度传感器等。可以连续的反馈数据</p></li>
<li><p>触发性的传感器 比如：significant motion sensor（好吧，我不知道他是啥；看名字貌似是监听用户的什么动作的）。总之就是那种会再特定情况下触发的传感器。</p></li>
</ul>


<!--more-->


<p>Sensor的使用过程如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">SensorActivity</span> <span class="kd">extends</span> <span class="n">Activity</span> <span class="kd">implements</span> <span class="n">SensorEventListener</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">final</span> <span class="n">SensorManager</span> <span class="n">mSensorManager</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">final</span> <span class="n">Sensor</span> <span class="n">mAccelerometer</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="nf">SensorActivity</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">//获取SensorManager</span>
</span><span class='line'>        <span class="n">mSensorManager</span> <span class="o">=</span> <span class="o">(</span><span class="n">SensorManager</span><span class="o">)</span> <span class="n">getSystemService</span><span class="o">(</span><span class="n">SENSOR_SERVICE</span><span class="o">);</span>
</span><span class='line'>        <span class="c1">//获取对应的Sensor</span>
</span><span class='line'>        <span class="n">mAccelerometer</span> <span class="o">=</span> <span class="n">mSensorManager</span><span class="o">.</span><span class="na">getDefaultSensor</span><span class="o">(</span><span class="n">Sensor</span><span class="o">.</span><span class="na">TYPE_ACCELEROMETER</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onResume</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">onResume</span><span class="o">();</span>
</span><span class='line'>        <span class="c1">//注册一个Sensor的监听器，监听器的回调函数是在主线程中被调用的，因此要尽量避免阻塞主线程！</span>
</span><span class='line'>        <span class="n">mSensorManager</span><span class="o">.</span><span class="na">registerListener</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="n">mAccelerometer</span><span class="o">,</span> <span class="n">SensorManager</span><span class="o">.</span><span class="na">SENSOR_DELAY_NORMAL</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onPause</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">onPause</span><span class="o">();</span>
</span><span class='line'>        <span class="c1">//取消注册一个Sensor的监听器</span>
</span><span class='line'>        <span class="n">mSensorManager</span><span class="o">.</span><span class="na">unregisterListener</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * SensorEventListener的回调方法</span>
</span><span class='line'><span class="cm">     *</span>
</span><span class='line'><span class="cm">     * @param sensor</span>
</span><span class='line'><span class="cm">     * @param accuracy</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onAccuracyChanged</span><span class="o">(</span><span class="n">Sensor</span> <span class="n">sensor</span><span class="o">,</span> <span class="kt">int</span> <span class="n">accuracy</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * SensorEventListener的回调方法</span>
</span><span class='line'><span class="cm">     *</span>
</span><span class='line'><span class="cm">     * @param event</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onSensorChanged</span><span class="o">(</span><span class="n">SensorEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kt">float</span><span class="o">[]</span> <span class="n">values</span> <span class="o">=</span> <span class="n">event</span><span class="o">.</span><span class="na">values</span><span class="o">;</span>
</span><span class='line'>        <span class="cm">/**</span>
</span><span class='line'><span class="cm">         * 这是传感器传送来的数据，根据不同的传感器，其值和数组长度会有所不同。</span>
</span><span class='line'><span class="cm">         */</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>上面的注册监听器是针对以连续性的传感器，如果是触发性的传感器相应的换成：</p>

<ul>
<li><p>注册： <a href="http://developer.android.com/reference/android/hardware/SensorManager.html#requestTriggerSensor(android.hardware.TriggerEventListener,%20android.hardware.Sensor"><code>boolean SensorManager::requestTriggerSensor(TriggerEventListener listener, Sensor sensor)</code></a></p></li>
<li><p>取消注册：<a href="http://developer.android.com/reference/android/hardware/SensorManager.html#cancelTriggerSensor(android.hardware.TriggerEventListener,%20android.hardware.Sensor"><code>boolean SensorManager::cancelTriggerSensor(TriggerEventListener listener, Sensor sensor)</code></a></p></li>
<li><p>监听器：<a href="http://developer.android.com/reference/android/hardware/TriggerEventListener.html"><code>TriggerEventListener</code></a></p></li>
</ul>


<p>上面registerListener中最后一个参数是传感器的频率，频率越高单位时间内数据采集就越多，相应的也就更费电！频率从高到低分别是：</p>

<ol>
<li><p><code>SensorManager.SENSOR_DELAY_FASTEST</code> : 获取数据尽可能的快</p></li>
<li><p><code>SensorManager.SENSOR_DELAY_GAME</code> : 适合游戏的频率</p></li>
<li><p><code>SensorManager.SENSOR_DELAY_NORMAL</code>： 正常的频率，一般实时性要求不高都可以用这个设定。</p></li>
<li><p><code>SensorManager.SENSOR_DELAY_UI</code>：适合普通用户界面的平率。由于频率低，所以，延时大，但是也会更省电。</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一次对非静态内部类引用final变量的研究]]></title>
    <link href="http://LanderlYoung.github.io/blog/2014/08/10/yi-ci-dui-fei-jing-tai-nei-bu-lei-yin-yong-finalbian-liang-de-yan-jiu/"/>
    <updated>2014-08-10T13:57:38+08:00</updated>
    <id>http://LanderlYoung.github.io/blog/2014/08/10/yi-ci-dui-fei-jing-tai-nei-bu-lei-yin-yong-finalbian-liang-de-yan-jiu</id>
    <content type="html"><![CDATA[<p>前几天遇到一个奇怪的问题，问题的起因是我把以前的RingfriendDialogBuilder（以下简称builder，没有IDE的自动补全打完全名还是很长的。。）修改了一下，添加了一个clear()方法。目的是避免每次创建一个Dialog都new一个builder的实例，这样一个builder可以用于创建多个dialog，以提高效率。接下来的问题就是因为这个修改导致的。</p>

<!--more-->


<h2>描述现象</h2>

<p>这个DialogBuilder允许构建Dialog，set其中的标题，监听器之类的变量。然后clear掉所有设置，重新再重新构建一个Dialog。问题出现在构建的多个（> 1）Dialog之后，当某个Dialog显示出来时，点击其按钮时，会出现NullPointerException。</p>

<h2>定位Bug：</h2>

<p>起初我觉得这很奇怪，因为每一个Dialog明明都设置了回调函数的呀。然后看到create方法其中一个setOnClickListener的代码段。
因为Dialong中的内容是普通的View，而Dialog的Listener与View的Listener不同，因此代码中做了如下adapt：</p>

<p><a name="anonymousClass"></a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="k">if</span> <span class="o">(</span><span class="n">mNegativeButtonLinstener</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">negBtn</span><span class="o">.</span><span class="na">setOnClickListener</span><span class="o">(</span><span class="k">new</span> <span class="n">View</span><span class="o">.</span><span class="na">OnClickListener</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="nd">@Override</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">v</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">mNegativeButtonLinstener</span><span class="o">.</span><span class="na">onClick</span><span class="o">(</span><span class="n">mDialog</span><span class="o">,</span> <span class="n">DialogInterface</span><span class="o">.</span><span class="na">BUTTON_NEGATIVE</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">});</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>因为dialog的onclick需要传入dialog自身的引用，所以就很 「随意」的把builder的mDialog成员传了过来，这个mDialog是在create的时候new出来的新的Dialog：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">//定义</span>
</span><span class='line'><span class="kd">private</span> <span class="n">Dialog</span> <span class="n">mDialog</span><span class="o">;</span>
</span><span class='line'><span class="c1">//创建</span>
</span><span class='line'><span class="n">mDialog</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Dialog</span><span class="o">(</span><span class="n">mContext</span><span class="o">,</span> <span class="n">mTheme</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>此时我突然明白了，因为内部匿名类的onClick回调函数使用了外部类（《java编程思想》中称作 enclosing object that made it）的成员变量 mDialog，所以每次onClick，内部类都会resolve外部类的这个成员变量。然而这是不应该发生的，因为：</p>

<blockquote><p><strong>当一个dialog被create之后，builder还有可能再创建一个dialog，或者builder的clear方法可能被调用，其会恢复所有成员变量至默认值，包括设置mDialog为null。所以当某个dialog的按钮被按下时，外部类的mDialog成员可能已经被修改，而不再对应这个dialog。</strong></p></blockquote>

<h2>解决方案</h2>

<p>解决的思路很简单，就是在onClick的<a href="#anonymousClass">内部类</a>中把dialog「定死」，不因成员变量mDialog的变化为转移！这时突然想起来匿名类引用局部变量是必须给局部变量加final修饰符的问题，于是就有了以下解决方案：</p>

<p>在create中声明一个变量</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">final</span> <span class="n">Dialog</span> <span class="n">d</span> <span class="o">=</span> <span class="n">mDialog</span><span class="o">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后下面需要传入mDialog的地方全部使用d代替。于是问题就顺利的解决了！</p>

<h2>思考</h2>

<p>对于上面解决方案为什么生效，首先说一下<strong>匿名类引用局部变量为什么必须声明final，为什么引用外部类的成员变量又不需要是final</strong>。</p>

<p>首先：
 1. static修饰的内部类和外部类是不能相互引用的，即内部类不能直接引用外部类的任何非static成员变量。因为static内部类不依赖于外部类就可以创建比如<code>new AlertDialog.Builder</code>是可以成功执行的。
 2. 然内非static的内部类是不能这样new出来的，比如：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Outer</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">public</span> <span class="nf">A</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">class</span> <span class="nc">Inner</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">public</span> <span class="nf">Inner</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Inner想要被new出来必须这样做：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Outer</span> <span class="n">outer</span>  <span class="o">=</span> <span class="k">new</span> <span class="nf">Outer</span><span class="o">();</span>
</span><span class='line'><span class="n">Outer</span><span class="o">.</span><span class="na">Inner</span> <span class="n">inner</span> <span class="o">=</span> <span class="n">outer</span><span class="o">.</span><span class="na">new</span> <span class="nf">Inner</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm"> * can not pass compile, the compiler would complain</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'> <span class="c1">//Outer.Inner inner = new Outer.Inner();</span>
</span></code></pre></td></tr></table></div></figure>


<p>那么为什么非静态内部类就可以使用外部类的成员变量了呢，那是因为<strong>内部类会保存一个外部类的引用</strong>。可以通过如下方式在内部类中获取该引用。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">//in inner class</span>
</span><span class='line'><span class="n">Outer</span><span class="o">.</span><span class="na">this</span>
</span></code></pre></td></tr></table></div></figure>


<p>怎么样！是不是好熟悉，是不是觉得我用过！没错，就是他！</p>

<p>问题逐渐明朗了，需要说明一件事：<strong>anonymous class肯定全都是非static内部类</strong>。</p>

<p>那么匿名类就可以访问外部类的成员变量，这一点和常识想通。但是匿名类一般是在方法体内被创建的，当匿名类想引用方法体内的变量或者方法的参数时该变量必须声明final才行。这是为什么呢？！</p>

<p>这个说来话长，因为方法的参数，乃至方法内的局部变量都是临时性的，他们储存在栈（stack）中。当方法return的时候他们便不复存在。所以匿名类不可能通过外部类的引用来获取局部变量。
而final修饰的变量是不能修改的，因此内部类并不「引用」这个变量，而是在内部直接copy一下！反正她是不会变的，我copy一下也不会导致不一致的问题。（这里需要说明一个事实，copy一个实例的引用时，并不会copy这个实例，只是copy了「指针」而已！）</p>

<p>所以，结论是：</p>

<blockquote><p><strong>final的作用就是告诉编译器，这个变量不会修改的，内部类想用的话可以自己copy一份过去</strong></p></blockquote>

<p>对于上述的解决方案，因为我们使用了一个final变量代替成员变量，因此内部类会直接使用该final变量的copy，而不像原来那样每次都去resolve外部类的成员，这就保证了这个变量在内部类是「定死」的！</p>

<h2>优化升级</h2>

<p>该才说到，非静态内部类会保留一个外部类的引用。在builder这个实例中，dialog的onclick Listener是builder的内部类，因此该listener会保留Builder的引用。但是builder只是辅助构建Dialog用的，当dialog构造出来之后不应该在和builder保有引用。否则会导致builder不能被垃圾回收掉！
因此做一个修改，把dialog的onclick listener改成静态类，如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'> <span class="k">if</span> <span class="o">(</span><span class="n">mPositiveButtonLinstener</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="kd">final</span> <span class="n">DialogInterface</span><span class="o">.</span><span class="na">OnClickListener</span> <span class="n">listener</span> <span class="o">=</span> <span class="n">mPositiveButtonLinstener</span><span class="o">;</span>
</span><span class='line'>            <span class="n">posBtn</span><span class="o">.</span><span class="na">setOnClickListener</span><span class="o">(</span><span class="k">new</span> <span class="nf">DialogButtonOnClickListener</span><span class="o">(</span><span class="n">dialog</span><span class="o">,</span>
</span><span class='line'>                    <span class="n">DialogInterface</span><span class="o">.</span><span class="na">BUTTON_POSITIVE</span><span class="o">,</span>
</span><span class='line'>                    <span class="n">listener</span><span class="o">));</span>
</span><span class='line'>        <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>其中<code>DialogButtonOnClickListener</code>定义如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">DialogButtonOnClickListener</span> <span class="kd">implements</span> <span class="n">View</span><span class="o">.</span><span class="na">OnClickListener</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">private</span> <span class="n">Dialog</span> <span class="n">mDialog</span><span class="o">;</span>
</span><span class='line'>        <span class="kd">private</span> <span class="kt">int</span> <span class="n">mWhich</span><span class="o">;</span>
</span><span class='line'>        <span class="kd">private</span> <span class="n">DialogInterface</span><span class="o">.</span><span class="na">OnClickListener</span> <span class="n">mListener</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">public</span> <span class="nf">DialogButtonOnClickListener</span><span class="o">(</span>
</span><span class='line'>                <span class="n">Dialog</span> <span class="n">dialog</span><span class="o">,</span>
</span><span class='line'>                <span class="kt">int</span> <span class="n">whichButton</span><span class="o">,</span>
</span><span class='line'>                <span class="n">DialogInterface</span><span class="o">.</span><span class="na">OnClickListener</span> <span class="n">l</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">mDialog</span> <span class="o">=</span> <span class="n">dialog</span><span class="o">;</span>
</span><span class='line'>            <span class="n">mWhich</span> <span class="o">=</span> <span class="n">whichButton</span><span class="o">;</span>
</span><span class='line'>            <span class="n">mListener</span> <span class="o">=</span> <span class="n">l</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="nd">@Override</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">v</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">mListener</span> <span class="o">!=</span> <span class="kc">null</span> <span class="o">&amp;&amp;</span> <span class="n">mDialog</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">mListener</span><span class="o">.</span><span class="na">onClick</span><span class="o">(</span><span class="n">mDialog</span><span class="o">,</span> <span class="n">mWhich</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>[完]</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android 中的Handler相关源代码浅析]]></title>
    <link href="http://LanderlYoung.github.io/blog/2014/06/24/android-zhong-de-handlerxiang-guan-yuan-dai-ma-qian-xi/"/>
    <updated>2014-06-24T17:01:09+08:00</updated>
    <id>http://LanderlYoung.github.io/blog/2014/06/24/android-zhong-de-handlerxiang-guan-yuan-dai-ma-qian-xi</id>
    <content type="html"><![CDATA[<p>简单用法示例：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">//在主线程中</span>
</span><span class='line'><span class="kd">private</span> <span class="n">Handler</span> <span class="n">handler</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Handler</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="c1">// 处理子线程给我们发送的消息。</span>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">handleMessage</span><span class="o">(</span><span class="n">android</span><span class="o">.</span><span class="na">os</span><span class="o">.</span><span class="na">Message</span> <span class="n">msg</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="kt">byte</span><span class="o">[]</span> <span class="n">data</span> <span class="o">=</span> <span class="o">(</span><span class="kt">byte</span><span class="o">[])</span><span class="n">msg</span><span class="o">.</span><span class="na">obj</span><span class="o">;</span>
</span><span class='line'>            <span class="n">Bitmap</span> <span class="n">bitmap</span> <span class="o">=</span> <span class="n">BitmapFactory</span><span class="o">.</span><span class="na">decodeByteArray</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">data</span><span class="o">.</span><span class="na">length</span><span class="o">);</span>
</span><span class='line'>            <span class="n">imageView</span><span class="o">.</span><span class="na">setImageBitmap</span><span class="o">(</span><span class="n">bitmap</span><span class="o">);</span>
</span><span class='line'>            <span class="n">Log</span><span class="o">.</span><span class="na">v</span><span class="o">(</span><span class="s">&quot;handler&quot;</span><span class="o">,</span> <span class="s">&quot;thread:&quot;</span> <span class="o">+</span> <span class="n">Thread</span><span class="o">.</span><span class="na">currentThread</span><span class="o">().</span><span class="na">getName</span><span class="o">()</span> <span class="o">+</span>
</span><span class='line'>                    <span class="s">&quot; msg.target=&quot;</span> <span class="n">msg</span><span class="o">.</span><span class="na">getTarget</span><span class="o">());</span>
</span><span class='line'>            <span class="k">if</span><span class="o">(</span><span class="n">msg</span><span class="o">.</span><span class="na">what</span> <span class="o">==</span> <span class="n">DOWNLOAD_IMG</span><span class="o">){</span>
</span><span class='line'>                <span class="n">dialog</span><span class="o">.</span><span class="na">dismiss</span><span class="o">();</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<!--more-->


<p>然后开启新的线程，在新的线程里面完成后台任务，任务完成后给这个handler发一个消息让它来处理。因为Handler是在主线程实例化(并且在实例化的时候没有指明Looper)，因此handler的handleMessage方法也是在主线程被调用的。</p>

<p>// 使用Handler Message MessageQueue Looper等方式去访问网络资源的时候，我们必须要开启一个子线程</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MyThread</span> <span class="kd">implements</span> <span class="n">Runnable</span><span class="o">{</span>
</span><span class='line'>    <span class="c1">// 在run方法中完成网络耗时的操作</span>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">HttpClient</span> <span class="n">httpClient</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">DefaultHttpClient</span><span class="o">();</span>
</span><span class='line'>            <span class="n">HttpGet</span> <span class="n">httpGet</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">HttpGet</span><span class="o">(</span><span class="n">imgPath</span><span class="o">);</span>
</span><span class='line'>            <span class="n">HttpResponse</span> <span class="n">httpResponse</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>            <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">Log</span><span class="o">.</span><span class="na">v</span><span class="o">(</span><span class="s">&quot;debug&quot;</span><span class="o">,</span> <span class="s">&quot;start download picture in thread:&quot;</span> <span class="o">+</span>
</span><span class='line'>                        <span class="n">Thread</span><span class="o">.</span><span class="na">currentThread</span><span class="o">().</span><span class="na">getName</span><span class="o">());</span>
</span><span class='line'>                <span class="n">httpResponse</span> <span class="o">=</span> <span class="n">httpClient</span><span class="o">.</span><span class="na">execute</span><span class="o">(</span><span class="n">httpGet</span><span class="o">);</span>
</span><span class='line'>                <span class="n">Log</span><span class="o">.</span><span class="na">v</span><span class="o">(</span><span class="s">&quot;debug&quot;</span><span class="o">,</span> <span class="s">&quot;download complete with status code&quot;</span> <span class="o">+</span>
</span><span class='line'>                        <span class="n">httpResponse</span><span class="o">.</span><span class="na">getStatusLine</span><span class="o">().</span><span class="na">getStatusCode</span><span class="o">());</span>
</span><span class='line'>                <span class="k">if</span><span class="o">(</span><span class="mi">200</span> <span class="o">==</span> <span class="n">httpResponse</span><span class="o">.</span><span class="na">getStatusLine</span><span class="o">().</span><span class="na">getStatusCode</span><span class="o">()){</span>
</span><span class='line'>                    <span class="kt">byte</span><span class="o">[]</span> <span class="n">data</span> <span class="o">=</span> <span class="n">EntityUtils</span><span class="o">.</span><span class="na">toByteArray</span><span class="o">(</span><span class="n">httpResponse</span><span class="o">.</span><span class="na">getEntity</span><span class="o">());</span>
</span><span class='line'>                    <span class="c1">// 这里的数据data我们必须发送给UI的主线程，所以我们通过Message的方式来做桥梁。</span>
</span><span class='line'>                    <span class="n">Message</span> <span class="n">message</span> <span class="o">=</span> <span class="n">Message</span><span class="o">.</span><span class="na">obtain</span><span class="o">();</span>
</span><span class='line'>                    <span class="n">message</span><span class="o">.</span><span class="na">obj</span> <span class="o">=</span> <span class="n">data</span><span class="o">;</span>
</span><span class='line'>                    <span class="n">message</span><span class="o">.</span><span class="na">what</span> <span class="o">=</span> <span class="n">DOWNLOAD_IMG</span><span class="o">;</span>
</span><span class='line'>                    <span class="n">handler</span><span class="o">.</span><span class="na">sendMessage</span><span class="o">(</span><span class="n">message</span><span class="o">);</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="c1">// TODO: handle exception</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>分析一下整个过程的大致流程,首先从Handler的sendMessage下手：从源代码中看，sendMessage最终会调用到Handler中的sendMessageAtTime。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">sendMessageAtTime</span><span class="o">(</span><span class="n">Message</span> <span class="n">msg</span><span class="o">,</span> <span class="kt">long</span> <span class="n">uptimeMillis</span><span class="o">)</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="kt">boolean</span> <span class="n">sent</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>    <span class="n">MessageQueue</span> <span class="n">queue</span> <span class="o">=</span> <span class="n">mQueue</span><span class="o">;</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">queue</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">msg</span><span class="o">.</span><span class="na">target</span> <span class="o">=</span> <span class="k">this</span><span class="o">;</span>
</span><span class='line'>        <span class="n">sent</span> <span class="o">=</span> <span class="n">queue</span><span class="o">.</span><span class="na">enqueueMessage</span><span class="o">(</span><span class="n">msg</span><span class="o">,</span> <span class="n">uptimeMillis</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">RuntimeException</span> <span class="n">e</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">RuntimeException</span><span class="o">(</span>
</span><span class='line'>                <span class="k">this</span> <span class="o">+</span> <span class="s">&quot; sendMessageAtTime() called with no mQueue&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">Log</span><span class="o">.</span><span class="na">w</span><span class="o">(</span><span class="s">&quot;Looper&quot;</span><span class="o">,</span> <span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">(),</span> <span class="n">e</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">sent</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>看得出来主要做的事情就是把消息的target设置成自己，然后把消息存入到消息队列MessageQueue中去，
接着首先去看看MessageQueue mQueue的定义</p>

<p>在Handler类的最后，既然是final的那初始化一定在构造函数了：
默认构造函数，代码中的注释写道“默认构造函数，把这个handler和当前线程的消息队列联系起来，如果没有（当前线程的消息队列），这个handler就不能接收消息了。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * Default constructor associates this handler with the queue for the</span>
</span><span class='line'><span class="cm"> * current thread.</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> * If there isn&#39;t one, this handler won&#39;t be able to receive messages.</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="nf">Handler</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="o">...</span>
</span><span class='line'>        <span class="n">mLooper</span> <span class="o">=</span> <span class="n">Looper</span><span class="o">.</span><span class="na">myLooper</span><span class="o">();</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">mLooper</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">throw</span> <span class="k">new</span> <span class="nf">RuntimeException</span><span class="o">(</span>
</span><span class='line'>                <span class="s">&quot;Can&#39;t create handler inside thread that has not called Looper.prepare()&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="n">mQueue</span> <span class="o">=</span> <span class="n">mLooper</span><span class="o">.</span><span class="na">mQueue</span><span class="o">;</span>
</span><span class='line'>    <span class="n">mCallback</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>使用提供的消息队列，而不是使用默认的。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * Use the provided queue instead of the default one.</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="nf">Handler</span><span class="o">(</span><span class="n">Looper</span> <span class="n">looper</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">mLooper</span> <span class="o">=</span> <span class="n">looper</span><span class="o">;</span>
</span><span class='line'>    <span class="n">mQueue</span> <span class="o">=</span> <span class="n">looper</span><span class="o">.</span><span class="na">mQueue</span><span class="o">;</span>
</span><span class='line'>    <span class="n">mCallback</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>从上面两个函数可以看出来消息队列是Looper的，handler的sendMessage只是把Message加到了消息队列去。接着去看看Looper对消息对了mQueue做了什么。</p>

<p>Looper中的MessageQueue的定义如下：</p>

<p>然后是Looper 中的loop方法</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * Run the message queue in this thread. Be sure to call</span>
</span><span class='line'><span class="cm"> * {@link #quit()} to end the loop.</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">loop</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">final</span> <span class="n">Looper</span> <span class="n">me</span> <span class="o">=</span> <span class="n">myLooper</span><span class="o">();</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">me</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">throw</span> <span class="k">new</span> <span class="nf">RuntimeException</span><span class="o">(</span><span class="s">&quot;No Looper; Looper.prepare() wasn&#39;t called on this thread.&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="kd">final</span> <span class="n">MessageQueue</span> <span class="n">queue</span> <span class="o">=</span> <span class="n">me</span><span class="o">.</span><span class="na">mQueue</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Make sure the identity of this thread is that of the local process,</span>
</span><span class='line'>    <span class="c1">// and keep track of what that identity token actually is.</span>
</span><span class='line'>    <span class="n">Binder</span><span class="o">.</span><span class="na">clearCallingIdentity</span><span class="o">();</span>
</span><span class='line'>    <span class="kd">final</span> <span class="kt">long</span> <span class="n">ident</span> <span class="o">=</span> <span class="n">Binder</span><span class="o">.</span><span class="na">clearCallingIdentity</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">for</span> <span class="o">(;;)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">Message</span> <span class="n">msg</span> <span class="o">=</span> <span class="n">queue</span><span class="o">.</span><span class="na">next</span><span class="o">();</span> <span class="c1">// might block</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">msg</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="c1">// No message indicates that the message queue is quitting.</span>
</span><span class='line'>            <span class="k">return</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// This must be in a local variable, in case a UI event sets the logger</span>
</span><span class='line'>        <span class="n">Printer</span> <span class="n">logging</span> <span class="o">=</span> <span class="n">me</span><span class="o">.</span><span class="na">mLogging</span><span class="o">;</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">logging</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">logging</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;&gt;&gt;&gt;&gt;&gt; Dispatching to &quot;</span> <span class="o">+</span> <span class="n">msg</span><span class="o">.</span><span class="na">target</span> <span class="o">+</span> <span class="s">&quot; &quot;</span> <span class="o">+</span>
</span><span class='line'>                    <span class="n">msg</span><span class="o">.</span><span class="na">callback</span> <span class="o">+</span> <span class="s">&quot;: &quot;</span> <span class="o">+</span> <span class="n">msg</span><span class="o">.</span><span class="na">what</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">msg</span><span class="o">.</span><span class="na">target</span><span class="o">.</span><span class="na">dispatchMessage</span><span class="o">(</span><span class="n">msg</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">logging</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">logging</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;&lt;&lt;&lt;&lt;&lt; Finished to &quot;</span> <span class="o">+</span> <span class="n">msg</span><span class="o">.</span><span class="na">target</span> <span class="o">+</span> <span class="s">&quot; &quot;</span> <span class="o">+</span> <span class="n">msg</span><span class="o">.</span><span class="na">callback</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Make sure that during the course of dispatching the</span>
</span><span class='line'>        <span class="c1">// identity of the thread wasn&#39;t corrupted.</span>
</span><span class='line'>        <span class="kd">final</span> <span class="kt">long</span> <span class="n">newIdent</span> <span class="o">=</span> <span class="n">Binder</span><span class="o">.</span><span class="na">clearCallingIdentity</span><span class="o">();</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">ident</span> <span class="o">!=</span> <span class="n">newIdent</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">Log</span><span class="o">.</span><span class="na">wtf</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;Thread identity changed from 0x&quot;</span>
</span><span class='line'>                    <span class="o">+</span> <span class="n">Long</span><span class="o">.</span><span class="na">toHexString</span><span class="o">(</span><span class="n">ident</span><span class="o">)</span> <span class="o">+</span> <span class="s">&quot; to 0x&quot;</span>
</span><span class='line'>                    <span class="o">+</span> <span class="n">Long</span><span class="o">.</span><span class="na">toHexString</span><span class="o">(</span><span class="n">newIdent</span><span class="o">)</span> <span class="o">+</span> <span class="s">&quot; while dispatching to &quot;</span>
</span><span class='line'>                    <span class="o">+</span> <span class="n">msg</span><span class="o">.</span><span class="na">target</span><span class="o">.</span><span class="na">getClass</span><span class="o">().</span><span class="na">getName</span><span class="o">()</span> <span class="o">+</span> <span class="s">&quot; &quot;</span>
</span><span class='line'>                    <span class="o">+</span> <span class="n">msg</span><span class="o">.</span><span class="na">callback</span> <span class="o">+</span> <span class="s">&quot; what=&quot;</span> <span class="o">+</span> <span class="n">msg</span><span class="o">.</span><span class="na">what</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">msg</span><span class="o">.</span><span class="na">recycle</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>注意到中间的死循环 <code>for(;;;){...}</code>
以及关键的这一句：</p>

<p>猜测target就是这个message对应处理他的handler，于是我圆润的滚过去看看：
Message中的target是这么定义的：</p>

<p>看来八九不离十了。继续看target赋值的语句：</p>

<p>当然还有各种带有Handler参数的obtain方法，都会给target赋值。
于是看看Handler.dispatchMessage(Message)是做什么的：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">dispatchMessage</span><span class="o">(</span><span class="n">Message</span> <span class="n">msg</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">msg</span><span class="o">.</span><span class="na">callback</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">handleCallback</span><span class="o">(</span><span class="n">msg</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">mCallback</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">mCallback</span><span class="o">.</span><span class="na">handleMessage</span><span class="o">(</span><span class="n">msg</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>                <span class="k">return</span><span class="o">;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="n">handleMessage</span><span class="o">(</span><span class="n">msg</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果msg的callback不为null就调用callback，否则如果就看看mCallback有没有设置，如果有的话就让callback来处理消息，如果没有就是用默认的处理方法。默认的处理方法是什么都不多，但是子类如果覆盖了handleMessage方法就可以执行子类想要做的代码了。</p>

<p>但是 事情没有那么简单！还有一个无参数的obtain方法，那么没有指定target的message是怎么成功发送到相应的handler的呢？还是圆润的滚过去看Looper的代码吧。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SNG迷你项目感悟]]></title>
    <link href="http://LanderlYoung.github.io/blog/2014/06/20/sngmi-ni-xiang-mu-gan-wu/"/>
    <updated>2014-06-20T16:38:32+08:00</updated>
    <id>http://LanderlYoung.github.io/blog/2014/06/20/sngmi-ni-xiang-mu-gan-wu</id>
    <content type="html"><![CDATA[<p>来腾讯实习有半个月来，刚进来公司统一培训了一天半，闲扯了点东西。然后SNG部门培训了3天时间，讲解一些业务流程。然后就是重头戏，所谓的迷你项目。我擦，虽然今天做完了，但是我还是想说这个巨坑啊！</p>

<!--more-->


<p>做这个迷你项目首先要说的是，还真的有点累的。。。每天早上做班车从酒店到公司，然后晚上一边九点走，到最后两天就更夸张了。前天在公司通宵了一夜，昨天夜里也是十二点多才走，欣慰的是腾大东侧的路上出租车排排停，估计我鹅长的员工加班都很积极吧。一个安卓应用，7天时间，两个人做，看这数据都觉得恐怖。</p>

<p>不过最后还是搞定了，尽管没拿奖，但是自己仍然很有成就感。做项目期间还是受到导师同事们的很大帮助的。最后一晚要不是wii帮qiuhang调了一个多小时的bug估计就得继续通宵了，而且说不定通宵了也搞不，那就苦逼了。</p>

<p>因为我做和服务器端的接口工作，当时一边商量一边改。一开始觉得商量接口真麻烦，后来才发现没有事先定义好接口才是做苦逼的。最荒唐的一件事是今天上午mini项目要测评了，结果昨天下午还在找后台的同学加接口。所以说：</p>

<blockquote><p>概要设计真的很重要</p></blockquote>

<p>前天晚上的问题是在电脑上调试完毕的net接口整合到Android上却得不到返回数据，比较奇怪的是有一个房屋信息POST请求能上传，而且数据库里会出现相应信息，但是返回值却是空的。一开始怀疑是没有申请网络访问权限，后来发现不是。后来sponsor Lewis 过来帮我调试，教了我安卓单步调试的方法，但是问题还是没能轻松解决。当天晚上熬了一夜，睡醒了4点，突然灵机一现决定把所有的JSON返回值都Log出来，同时所有的Exeption也要Log出来。后来慢慢调试才发现是<code>NetworkOnMainThreadException</code>！网络跑在主UI线程！所以每次执行到connect的时候android系统都会抛出这个异常，但是我却Too young， sometimes too naive！把所有可能抛出异常的地方都catch (Exception e) {}。就是说catch了所有Exception的父类并且什么也不做！对！就是不作为！后来跟我的导师raez说这件事，他说：</p>

<blockquote><p>异常本来是用来发现问题的，不能随便catch。</p></blockquote>

<p>对此我的理解是，需要catch一个exception的时候<strong>尽量精准catch</strong>。比如一个方法可能抛出IOException就不要懒懒的去直接catch Exception，同时如果抛出多种异常也要一个一个catch;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="k">try</span> <span class="o">{</span>
</span><span class='line'>    <span class="o">...</span>
</span><span class='line'>    <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>            <span class="o">...</span>
</span><span class='line'>    <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">FileNotFoundException</span> <span class="n">ex</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>            <span class="o">...</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>同时<strong>捕获一个异常之后不能什么都不做</strong>，至少应该<code>printStackTrace</code>或者是Log出来，否则出现问题之后很难排查出来。另外<code>NullPointerException</code> 原则上不允许catch，<code>OutOfMemoryError</code>除了在大量消耗内存的代码片段上（比图图片处理，或者字符串拼接等）不允许catch。还有就是捕获异常是一定<strong>精准捕获</strong>。</p>

<p>另外关于安卓多线程的使用，学习到了两种方式：Activity的<code>runOnUiThread(Runnable)</code>方法，还有使用AsyncTask类, 另外还有是用Handler之类的方法，当时没有还没有学习。</p>

<p>另外一方面是缺少大型软开发的经验，原来自己写过的代码，最多也就一两千行。导致我们缺乏大型软件框架方面的知识。mini项目的Android端事实上来说就分了两个部分，UI和后台。今天听Wii讲了我们组的项目的大致构架，各个模块的分工功能，模块之间怎么通信回调，瞬间觉得高达上！真的是很开眼界。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[css动画链接特效]]></title>
    <link href="http://LanderlYoung.github.io/blog/2014/05/27/cssdong-hua-lian-jie-te-xiao/"/>
    <updated>2014-05-27T17:24:01+08:00</updated>
    <id>http://LanderlYoung.github.io/blog/2014/05/27/cssdong-hua-lian-jie-te-xiao</id>
    <content type="html"><![CDATA[<p>今天见到几个css3实现的连接特效，效果不错。放到博客上<a href="http://landerlyoung.github.io/assets/storage/CreativeLinkEffects">存档</a>一下。可惜的是找不到原始地址了。</p>

<!--more-->

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[网页中实现阅读模式]]></title>
    <link href="http://LanderlYoung.github.io/blog/2014/05/26/wang-ye-zhong-shi-xian-yue-du-mo-shi/"/>
    <updated>2014-05-26T22:03:55+08:00</updated>
    <id>http://LanderlYoung.github.io/blog/2014/05/26/wang-ye-zhong-shi-xian-yue-du-mo-shi</id>
    <content type="html"><![CDATA[<p>一直觉得safari的阅读模式超赞，然后今天突然觉得想有一个。于是搜索了一些东西找到了readability这个东西。</p>

<!--more-->


<p>不得不说这个一个超赞的东西，而且在<a href="https://code.google.com/p/arc90labs-readability/">googlecode</a>上有开源的版本，实在是良心。但是这个开源的版本是以书签的方式使用的，所以必须有地方存放js脚本和css文件，于是决定存到github博客上。不过我根据个人爱好修改了css和部分js文件。</p>

<p>使用相当方便，打开<a href="http://landerlyoung.github.io/assets/storage/readability-0.5.1/">主页面</a>按照你的需求设置好阅读模式，然后把右边的按钮拖到书签栏。以后看网页的时候点击书签就可以使用了。效果很不错哦。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[stepByStepAndroid-第一课]]></title>
    <link href="http://LanderlYoung.github.io/blog/2014/05/13/stepbystepandroid-di-%5B%3F%5D-ke/"/>
    <updated>2014-05-13T12:04:19+08:00</updated>
    <id>http://LanderlYoung.github.io/blog/2014/05/13/stepbystepandroid-di-[?]-ke</id>
    <content type="html"><![CDATA[<p>&lt;资源></p>

<ul>
<li>git项目<a href="https://github.com/LanderlYoung/stepByStepAndroid">github</a></li>
<li>详见<a href="https://github.com/LanderlYoung/stepByStepAndroid/releases">release note</a></li>
<li><a href="https://github.com/LanderlYoung/stepByStepAndroid/wiki">项目wiki</a></li>
</ul>


<p>&lt;/资源></p>

<p>梳理一下第一课学到的内容:</p>

<ol>
<li>创建简单的用户界面

<ul>
<li>简单的布局控制</li>
</ul>
</li>
<li>启动另一个Activity

<ul>
<li>给button添加回调函数</li>
<li>使用Intent</li>
</ul>
</li>
</ol>


<!--more-->


<h3>创建用户界面</h3>

<p>修改原来的fragment_main.xml文件，使用LinearLayout：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;LinearLayout</span> <span class="na">xmlns:android=</span><span class="s">&quot;http://schemas.android.com/apk/res/android&quot;</span>
</span><span class='line'>    <span class="na">xmlns:tools=</span><span class="s">&quot;http://schemas.android.com/tools&quot;</span>
</span><span class='line'>    <span class="na">android:layout_width=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>    <span class="na">android:layout_height=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>    <span class="na">android:orientation=</span><span class="s">&quot;horizontal&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;/LinearLayout&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>上面的android:orientation属性把LinearLayout设置成水平线性布局，所有元素水平排列。
然后在LinearLayout中添加控件EditText和Button</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;EditText</span>
</span><span class='line'>    <span class="na">android:id=</span><span class="s">&quot;@+id/edit_message&quot;</span>
</span><span class='line'>    <span class="na">android:layout_width=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>    <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>    <span class="na">android:hint=</span><span class="s">&quot;@string/edit_message&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;Button</span>
</span><span class='line'>    <span class="na">android:layout_width=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>    <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>    <span class="na">android:text=</span><span class="s">&quot;@string/button_send&quot;</span> <span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后在相应的strings.xml中添加string值。
效果如图：</p>

<p><img src="https://cloud.githubusercontent.com/assets/5700847/2953445/c8028f00-da59-11e3-9800-89a5c859064b.png" width="360" alt="device-2014-05-12-231827" /></p>

<p>接着控制一下布局：让EditText占据LinearLayout横向的剩余空间。只需要调整两个方面<code>android:layout_weight="1"</code>和<code>android:layout_width="0dp"</code>，其中layout_weight=1可以让它占据剩下的空间，layout_width=0改善性能。
看一下效果：</p>

<p><img src="https://cloud.githubusercontent.com/assets/5700847/2953442/b9d4597c-da59-11e3-886d-08d3f8e667a9.png" width="360" alt="device-2014-05-12-235041" /></p>

<h2>为button添加click事件处理</h2>

<p>在Button中添加一行<code>android:onClick="sendMessage"</code>这样就指定了button的click事件由<code>public void onClick(View view)</code>这样方法签名的方法来处理。
所以对应的去MainActicity.java中添加该函数：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">//call back of the button</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">sendMessage</span><span class="o">(</span><span class="n">View</span> <span class="n">view</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">Intent</span> <span class="n">intent</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Intent</span><span class="o">(</span><span class="n">getApplication</span><span class="o">(),</span><span class="n">DisplayMessageActivity</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>  <span class="n">EditText</span> <span class="n">editText</span> <span class="o">=</span> <span class="o">(</span><span class="n">EditText</span><span class="o">)</span><span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">edit_message</span><span class="o">);</span>
</span><span class='line'>  <span class="n">String</span> <span class="n">message</span> <span class="o">=</span> <span class="n">editText</span><span class="o">.</span><span class="na">getText</span><span class="o">().</span><span class="na">toString</span><span class="o">();</span>
</span><span class='line'>  <span class="n">intent</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="n">EXTRA_MESSAGE</span><span class="o">,</span><span class="n">message</span><span class="o">);</span>
</span><span class='line'>  <span class="n">startActivity</span><span class="o">(</span><span class="n">intent</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>上面的DisplayMessageActivity类是使用向导创建的新Activity。</p>

<h3>创建新Activity</h3>

<p>使用向导创建新的Activity，然后需要在AndroidManifest.xml里注册Activity</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>   <span class="nt">&lt;application</span>
</span><span class='line'>       <span class="err">......</span>
</span><span class='line'>        <span class="err">&lt;activity</span>
</span><span class='line'>            <span class="na">android:name=</span><span class="s">&quot;com.young.stepbystepandroid.DisplayMessageActivity&quot;</span>
</span><span class='line'>            <span class="na">android:label=</span><span class="s">&quot;@string/title_activity_display_message&quot;</span>
</span><span class='line'>            <span class="na">android:parentActivityName=</span><span class="s">&quot;com.young.stepbystepandroid.MainActivity&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;meta-data</span>
</span><span class='line'>                <span class="na">android:name=</span><span class="s">&quot;android.support.PARENT_ACTIVITY&quot;</span>
</span><span class='line'>                <span class="na">android:value=</span><span class="s">&quot;com.young.stepbystepandroid.MainActivity&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/activity&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/application&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>使用Intent</h3>

<p><em>启动Intent</em></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Intent</span> <span class="n">intent</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Intent</span><span class="o">(</span><span class="n">getApplication</span><span class="o">(),</span><span class="n">DisplayMessageActivity</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'><span class="n">EditText</span> <span class="n">editText</span> <span class="o">=</span> <span class="o">(</span><span class="n">EditText</span><span class="o">)</span><span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">edit_message</span><span class="o">);</span>
</span><span class='line'><span class="n">String</span> <span class="n">message</span> <span class="o">=</span> <span class="n">editText</span><span class="o">.</span><span class="na">getText</span><span class="o">().</span><span class="na">toString</span><span class="o">();</span>
</span><span class='line'><span class="n">intent</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="n">EXTRA_MESSAGE</span><span class="o">,</span><span class="n">message</span><span class="o">);</span>
</span><span class='line'><span class="n">startActivity</span><span class="o">(</span><span class="n">intent</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>其中<code>public static final String EXTRA_MESSAGE = "com.young.stepByStepAndroid.MESSAGE";</code>
这个是一个显示Intent构造函数第一个参数是Context，可以使用this，因为Activity继承Context；但是推荐使用ApplicationContext防止内存泄漏。
<em>接收Intent</em></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Intent</span> <span class="n">intent</span> <span class="o">=</span> <span class="n">getIntent</span><span class="o">();</span>
</span><span class='line'><span class="n">String</span> <span class="n">message</span> <span class="o">=</span> <span class="n">intent</span><span class="o">.</span><span class="na">getStringExtra</span><span class="o">(</span>
</span><span class='line'>      <span class="n">MainActivity</span><span class="o">.</span><span class="na">EXTRA_MESSAGE</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">TextView</span> <span class="n">textView</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">TextView</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
</span><span class='line'><span class="n">textView</span><span class="o">.</span><span class="na">setTextSize</span><span class="o">(</span><span class="mi">40</span><span class="o">);</span>
</span><span class='line'><span class="n">textView</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">message</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>代码很明显，不多说什么了。当然在Intent里面附加信息推荐使用<a href="http://developer.android.com/reference/android/os/Bundle.html">Bundle</a>。</p>

<p>看看成果：</p>

<p><img src="https://cloud.githubusercontent.com/assets/5700847/2953446/d6257c5a-da59-11e3-8e67-80bbecb4640f.png" width="360" alt="device-2014-05-13-002646" /></p>

<p><img src="https://cloud.githubusercontent.com/assets/5700847/2953447/d71cdef0-da59-11e3-9d39-e3e5d4de150d.png" width="360" alt="device-2014-05-13-002651" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git中创建tag和release]]></title>
    <link href="http://LanderlYoung.github.io/blog/2014/05/12/gitzhong-chuang-jian-taghe-release/"/>
    <updated>2014-05-12T21:28:57+08:00</updated>
    <id>http://LanderlYoung.github.io/blog/2014/05/12/gitzhong-chuang-jian-taghe-release</id>
    <content type="html"><![CDATA[<p>今天开始学习Android Design，也详细了解一下Android的应用开发，方便暑假的实习。于是打算创建一个github的仓库，记录学习的过程。然后想到每学习一个新功能都应该有一个tag（或者叫release）不然别人看你的仓库的时候怎么知道学习的步步过程。然后就学习了一下git tag的相关内容，如下：</p>

<h2>创建</h2>

<ul>
<li><code>git tag -a &lt;tagname&gt; -m "comment"</code> 或者<code>git tag -a &lt;tagname&gt;</code>和commit差不多只是多了一个tagname，使用后面那个命令会打开一个文本编辑器写入comment信息。总的来说 和commit是一样的。</li>
<li>轻量级tag，输入<code>git tag &lt;tagname&gt;</code>。</li>
</ul>


<!--more-->


<h2>列出所有tag</h2>

<ul>
<li><code>git tag</code>会直接列出当前可用tag。</li>
<li><code>git tag -l "pattern"</code>列出tagname符合正则表达式的所有tag。</li>
</ul>


<h2>查看tag信息</h2>

<ul>
<li><code>git show &lt;tagname&gt;</code>会列出tag的相关信息，包括tagname，打tag时写入的comment信息，以及diff信息。</li>
</ul>


<h2>push tag</h2>

<ul>
<li><code>git push origin &lt;tagname&gt;</code></li>
<li><code>git push origin --tags</code>push 所有tags</li>
</ul>


<h2>删除tag</h2>

<ol>
<li>删除本地tag<code>git tag -d &lt;tagname&gt;</code>。</li>
<li>删除远端tag<code>git push origin :refs/tags/&lt;tagname&gt;</code>, 这个命令和删除远端branches很神似。</li>
</ol>


<p>以上只说了一些简单的操作，还有是用签名的tag，这些就比较复杂一点了，更多内容请参考：<a href="http://git-scm.com/book/en/Git-Basics-Tagging">git-scm.com</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vim quick reference]]></title>
    <link href="http://LanderlYoung.github.io/blog/2014/05/07/vim-quick-reference/"/>
    <updated>2014-05-07T22:46:32+08:00</updated>
    <id>http://LanderlYoung.github.io/blog/2014/05/07/vim-quick-reference</id>
    <content type="html"><![CDATA[<center>
<h2><b>quickref.txt</b>  For Vim version 7.4.  Last change: 2013 Jun 29</h2>
<p>VIM REFERENCE MANUAL    by Bram Moolenaar</p>
<p>Quick reference guide</p>
</center>


<!--more-->




<div style="font-family:monospace">
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
<span class='line-number'>219</span>
<span class='line-number'>220</span>
<span class='line-number'>221</span>
<span class='line-number'>222</span>
<span class='line-number'>223</span>
<span class='line-number'>224</span>
<span class='line-number'>225</span>
<span class='line-number'>226</span>
<span class='line-number'>227</span>
<span class='line-number'>228</span>
<span class='line-number'>229</span>
<span class='line-number'>230</span>
<span class='line-number'>231</span>
<span class='line-number'>232</span>
<span class='line-number'>233</span>
<span class='line-number'>234</span>
<span class='line-number'>235</span>
<span class='line-number'>236</span>
<span class='line-number'>237</span>
<span class='line-number'>238</span>
<span class='line-number'>239</span>
<span class='line-number'>240</span>
<span class='line-number'>241</span>
<span class='line-number'>242</span>
<span class='line-number'>243</span>
<span class='line-number'>244</span>
<span class='line-number'>245</span>
<span class='line-number'>246</span>
<span class='line-number'>247</span>
<span class='line-number'>248</span>
<span class='line-number'>249</span>
<span class='line-number'>250</span>
<span class='line-number'>251</span>
<span class='line-number'>252</span>
<span class='line-number'>253</span>
<span class='line-number'>254</span>
<span class='line-number'>255</span>
<span class='line-number'>256</span>
<span class='line-number'>257</span>
<span class='line-number'>258</span>
<span class='line-number'>259</span>
<span class='line-number'>260</span>
<span class='line-number'>261</span>
<span class='line-number'>262</span>
<span class='line-number'>263</span>
<span class='line-number'>264</span>
<span class='line-number'>265</span>
<span class='line-number'>266</span>
<span class='line-number'>267</span>
<span class='line-number'>268</span>
<span class='line-number'>269</span>
<span class='line-number'>270</span>
<span class='line-number'>271</span>
<span class='line-number'>272</span>
<span class='line-number'>273</span>
<span class='line-number'>274</span>
<span class='line-number'>275</span>
<span class='line-number'>276</span>
<span class='line-number'>277</span>
<span class='line-number'>278</span>
<span class='line-number'>279</span>
<span class='line-number'>280</span>
<span class='line-number'>281</span>
<span class='line-number'>282</span>
<span class='line-number'>283</span>
<span class='line-number'>284</span>
<span class='line-number'>285</span>
<span class='line-number'>286</span>
<span class='line-number'>287</span>
<span class='line-number'>288</span>
<span class='line-number'>289</span>
<span class='line-number'>290</span>
<span class='line-number'>291</span>
<span class='line-number'>292</span>
<span class='line-number'>293</span>
<span class='line-number'>294</span>
<span class='line-number'>295</span>
<span class='line-number'>296</span>
<span class='line-number'>297</span>
<span class='line-number'>298</span>
<span class='line-number'>299</span>
<span class='line-number'>300</span>
<span class='line-number'>301</span>
<span class='line-number'>302</span>
<span class='line-number'>303</span>
<span class='line-number'>304</span>
<span class='line-number'>305</span>
<span class='line-number'>306</span>
<span class='line-number'>307</span>
<span class='line-number'>308</span>
<span class='line-number'>309</span>
<span class='line-number'>310</span>
<span class='line-number'>311</span>
<span class='line-number'>312</span>
<span class='line-number'>313</span>
<span class='line-number'>314</span>
<span class='line-number'>315</span>
<span class='line-number'>316</span>
<span class='line-number'>317</span>
<span class='line-number'>318</span>
<span class='line-number'>319</span>
<span class='line-number'>320</span>
<span class='line-number'>321</span>
<span class='line-number'>322</span>
<span class='line-number'>323</span>
<span class='line-number'>324</span>
<span class='line-number'>325</span>
<span class='line-number'>326</span>
<span class='line-number'>327</span>
<span class='line-number'>328</span>
<span class='line-number'>329</span>
<span class='line-number'>330</span>
<span class='line-number'>331</span>
<span class='line-number'>332</span>
<span class='line-number'>333</span>
<span class='line-number'>334</span>
<span class='line-number'>335</span>
<span class='line-number'>336</span>
<span class='line-number'>337</span>
<span class='line-number'>338</span>
<span class='line-number'>339</span>
<span class='line-number'>340</span>
<span class='line-number'>341</span>
<span class='line-number'>342</span>
<span class='line-number'>343</span>
<span class='line-number'>344</span>
<span class='line-number'>345</span>
<span class='line-number'>346</span>
<span class='line-number'>347</span>
<span class='line-number'>348</span>
<span class='line-number'>349</span>
<span class='line-number'>350</span>
<span class='line-number'>351</span>
<span class='line-number'>352</span>
<span class='line-number'>353</span>
<span class='line-number'>354</span>
<span class='line-number'>355</span>
<span class='line-number'>356</span>
<span class='line-number'>357</span>
<span class='line-number'>358</span>
<span class='line-number'>359</span>
<span class='line-number'>360</span>
<span class='line-number'>361</span>
<span class='line-number'>362</span>
<span class='line-number'>363</span>
<span class='line-number'>364</span>
<span class='line-number'>365</span>
<span class='line-number'>366</span>
<span class='line-number'>367</span>
<span class='line-number'>368</span>
<span class='line-number'>369</span>
<span class='line-number'>370</span>
<span class='line-number'>371</span>
<span class='line-number'>372</span>
<span class='line-number'>373</span>
<span class='line-number'>374</span>
<span class='line-number'>375</span>
<span class='line-number'>376</span>
<span class='line-number'>377</span>
<span class='line-number'>378</span>
<span class='line-number'>379</span>
<span class='line-number'>380</span>
<span class='line-number'>381</span>
<span class='line-number'>382</span>
<span class='line-number'>383</span>
<span class='line-number'>384</span>
<span class='line-number'>385</span>
<span class='line-number'>386</span>
<span class='line-number'>387</span>
<span class='line-number'>388</span>
<span class='line-number'>389</span>
<span class='line-number'>390</span>
<span class='line-number'>391</span>
<span class='line-number'>392</span>
<span class='line-number'>393</span>
<span class='line-number'>394</span>
<span class='line-number'>395</span>
<span class='line-number'>396</span>
<span class='line-number'>397</span>
<span class='line-number'>398</span>
<span class='line-number'>399</span>
<span class='line-number'>400</span>
<span class='line-number'>401</span>
<span class='line-number'>402</span>
<span class='line-number'>403</span>
<span class='line-number'>404</span>
<span class='line-number'>405</span>
<span class='line-number'>406</span>
<span class='line-number'>407</span>
<span class='line-number'>408</span>
<span class='line-number'>409</span>
<span class='line-number'>410</span>
<span class='line-number'>411</span>
<span class='line-number'>412</span>
<span class='line-number'>413</span>
<span class='line-number'>414</span>
<span class='line-number'>415</span>
<span class='line-number'>416</span>
<span class='line-number'>417</span>
<span class='line-number'>418</span>
<span class='line-number'>419</span>
<span class='line-number'>420</span>
<span class='line-number'>421</span>
<span class='line-number'>422</span>
<span class='line-number'>423</span>
<span class='line-number'>424</span>
<span class='line-number'>425</span>
<span class='line-number'>426</span>
<span class='line-number'>427</span>
<span class='line-number'>428</span>
<span class='line-number'>429</span>
<span class='line-number'>430</span>
<span class='line-number'>431</span>
<span class='line-number'>432</span>
<span class='line-number'>433</span>
<span class='line-number'>434</span>
<span class='line-number'>435</span>
<span class='line-number'>436</span>
<span class='line-number'>437</span>
<span class='line-number'>438</span>
<span class='line-number'>439</span>
<span class='line-number'>440</span>
<span class='line-number'>441</span>
<span class='line-number'>442</span>
<span class='line-number'>443</span>
<span class='line-number'>444</span>
<span class='line-number'>445</span>
<span class='line-number'>446</span>
<span class='line-number'>447</span>
<span class='line-number'>448</span>
<span class='line-number'>449</span>
<span class='line-number'>450</span>
<span class='line-number'>451</span>
<span class='line-number'>452</span>
<span class='line-number'>453</span>
<span class='line-number'>454</span>
<span class='line-number'>455</span>
<span class='line-number'>456</span>
<span class='line-number'>457</span>
<span class='line-number'>458</span>
<span class='line-number'>459</span>
<span class='line-number'>460</span>
<span class='line-number'>461</span>
<span class='line-number'>462</span>
<span class='line-number'>463</span>
<span class='line-number'>464</span>
<span class='line-number'>465</span>
<span class='line-number'>466</span>
<span class='line-number'>467</span>
<span class='line-number'>468</span>
<span class='line-number'>469</span>
<span class='line-number'>470</span>
<span class='line-number'>471</span>
<span class='line-number'>472</span>
<span class='line-number'>473</span>
<span class='line-number'>474</span>
<span class='line-number'>475</span>
<span class='line-number'>476</span>
<span class='line-number'>477</span>
<span class='line-number'>478</span>
<span class='line-number'>479</span>
<span class='line-number'>480</span>
<span class='line-number'>481</span>
<span class='line-number'>482</span>
<span class='line-number'>483</span>
<span class='line-number'>484</span>
<span class='line-number'>485</span>
<span class='line-number'>486</span>
<span class='line-number'>487</span>
<span class='line-number'>488</span>
<span class='line-number'>489</span>
<span class='line-number'>490</span>
<span class='line-number'>491</span>
<span class='line-number'>492</span>
<span class='line-number'>493</span>
<span class='line-number'>494</span>
<span class='line-number'>495</span>
<span class='line-number'>496</span>
<span class='line-number'>497</span>
<span class='line-number'>498</span>
<span class='line-number'>499</span>
<span class='line-number'>500</span>
<span class='line-number'>501</span>
<span class='line-number'>502</span>
<span class='line-number'>503</span>
<span class='line-number'>504</span>
<span class='line-number'>505</span>
<span class='line-number'>506</span>
<span class='line-number'>507</span>
<span class='line-number'>508</span>
<span class='line-number'>509</span>
<span class='line-number'>510</span>
<span class='line-number'>511</span>
<span class='line-number'>512</span>
<span class='line-number'>513</span>
<span class='line-number'>514</span>
<span class='line-number'>515</span>
<span class='line-number'>516</span>
<span class='line-number'>517</span>
<span class='line-number'>518</span>
<span class='line-number'>519</span>
<span class='line-number'>520</span>
<span class='line-number'>521</span>
<span class='line-number'>522</span>
<span class='line-number'>523</span>
<span class='line-number'>524</span>
<span class='line-number'>525</span>
<span class='line-number'>526</span>
<span class='line-number'>527</span>
<span class='line-number'>528</span>
<span class='line-number'>529</span>
<span class='line-number'>530</span>
<span class='line-number'>531</span>
<span class='line-number'>532</span>
<span class='line-number'>533</span>
<span class='line-number'>534</span>
<span class='line-number'>535</span>
<span class='line-number'>536</span>
<span class='line-number'>537</span>
<span class='line-number'>538</span>
<span class='line-number'>539</span>
<span class='line-number'>540</span>
<span class='line-number'>541</span>
<span class='line-number'>542</span>
<span class='line-number'>543</span>
<span class='line-number'>544</span>
<span class='line-number'>545</span>
<span class='line-number'>546</span>
<span class='line-number'>547</span>
<span class='line-number'>548</span>
<span class='line-number'>549</span>
<span class='line-number'>550</span>
<span class='line-number'>551</span>
<span class='line-number'>552</span>
<span class='line-number'>553</span>
<span class='line-number'>554</span>
<span class='line-number'>555</span>
<span class='line-number'>556</span>
<span class='line-number'>557</span>
<span class='line-number'>558</span>
<span class='line-number'>559</span>
<span class='line-number'>560</span>
<span class='line-number'>561</span>
<span class='line-number'>562</span>
<span class='line-number'>563</span>
<span class='line-number'>564</span>
<span class='line-number'>565</span>
<span class='line-number'>566</span>
<span class='line-number'>567</span>
<span class='line-number'>568</span>
<span class='line-number'>569</span>
<span class='line-number'>570</span>
<span class='line-number'>571</span>
<span class='line-number'>572</span>
<span class='line-number'>573</span>
<span class='line-number'>574</span>
<span class='line-number'>575</span>
<span class='line-number'>576</span>
<span class='line-number'>577</span>
<span class='line-number'>578</span>
<span class='line-number'>579</span>
<span class='line-number'>580</span>
<span class='line-number'>581</span>
<span class='line-number'>582</span>
<span class='line-number'>583</span>
<span class='line-number'>584</span>
<span class='line-number'>585</span>
<span class='line-number'>586</span>
<span class='line-number'>587</span>
<span class='line-number'>588</span>
<span class='line-number'>589</span>
<span class='line-number'>590</span>
<span class='line-number'>591</span>
<span class='line-number'>592</span>
<span class='line-number'>593</span>
<span class='line-number'>594</span>
<span class='line-number'>595</span>
<span class='line-number'>596</span>
<span class='line-number'>597</span>
<span class='line-number'>598</span>
<span class='line-number'>599</span>
<span class='line-number'>600</span>
<span class='line-number'>601</span>
<span class='line-number'>602</span>
<span class='line-number'>603</span>
<span class='line-number'>604</span>
<span class='line-number'>605</span>
<span class='line-number'>606</span>
<span class='line-number'>607</span>
<span class='line-number'>608</span>
<span class='line-number'>609</span>
<span class='line-number'>610</span>
<span class='line-number'>611</span>
<span class='line-number'>612</span>
<span class='line-number'>613</span>
<span class='line-number'>614</span>
<span class='line-number'>615</span>
<span class='line-number'>616</span>
<span class='line-number'>617</span>
<span class='line-number'>618</span>
<span class='line-number'>619</span>
<span class='line-number'>620</span>
<span class='line-number'>621</span>
<span class='line-number'>622</span>
<span class='line-number'>623</span>
<span class='line-number'>624</span>
<span class='line-number'>625</span>
<span class='line-number'>626</span>
<span class='line-number'>627</span>
<span class='line-number'>628</span>
<span class='line-number'>629</span>
<span class='line-number'>630</span>
<span class='line-number'>631</span>
<span class='line-number'>632</span>
<span class='line-number'>633</span>
<span class='line-number'>634</span>
<span class='line-number'>635</span>
<span class='line-number'>636</span>
<span class='line-number'>637</span>
<span class='line-number'>638</span>
<span class='line-number'>639</span>
<span class='line-number'>640</span>
<span class='line-number'>641</span>
<span class='line-number'>642</span>
<span class='line-number'>643</span>
<span class='line-number'>644</span>
<span class='line-number'>645</span>
<span class='line-number'>646</span>
<span class='line-number'>647</span>
<span class='line-number'>648</span>
<span class='line-number'>649</span>
<span class='line-number'>650</span>
<span class='line-number'>651</span>
<span class='line-number'>652</span>
<span class='line-number'>653</span>
<span class='line-number'>654</span>
<span class='line-number'>655</span>
<span class='line-number'>656</span>
<span class='line-number'>657</span>
<span class='line-number'>658</span>
<span class='line-number'>659</span>
<span class='line-number'>660</span>
<span class='line-number'>661</span>
<span class='line-number'>662</span>
<span class='line-number'>663</span>
<span class='line-number'>664</span>
<span class='line-number'>665</span>
<span class='line-number'>666</span>
<span class='line-number'>667</span>
<span class='line-number'>668</span>
<span class='line-number'>669</span>
<span class='line-number'>670</span>
<span class='line-number'>671</span>
<span class='line-number'>672</span>
<span class='line-number'>673</span>
<span class='line-number'>674</span>
<span class='line-number'>675</span>
<span class='line-number'>676</span>
<span class='line-number'>677</span>
<span class='line-number'>678</span>
<span class='line-number'>679</span>
<span class='line-number'>680</span>
<span class='line-number'>681</span>
<span class='line-number'>682</span>
<span class='line-number'>683</span>
<span class='line-number'>684</span>
<span class='line-number'>685</span>
<span class='line-number'>686</span>
<span class='line-number'>687</span>
<span class='line-number'>688</span>
<span class='line-number'>689</span>
<span class='line-number'>690</span>
<span class='line-number'>691</span>
<span class='line-number'>692</span>
<span class='line-number'>693</span>
<span class='line-number'>694</span>
<span class='line-number'>695</span>
<span class='line-number'>696</span>
<span class='line-number'>697</span>
<span class='line-number'>698</span>
<span class='line-number'>699</span>
<span class='line-number'>700</span>
<span class='line-number'>701</span>
<span class='line-number'>702</span>
<span class='line-number'>703</span>
<span class='line-number'>704</span>
<span class='line-number'>705</span>
<span class='line-number'>706</span>
<span class='line-number'>707</span>
<span class='line-number'>708</span>
<span class='line-number'>709</span>
<span class='line-number'>710</span>
<span class='line-number'>711</span>
<span class='line-number'>712</span>
<span class='line-number'>713</span>
<span class='line-number'>714</span>
<span class='line-number'>715</span>
<span class='line-number'>716</span>
<span class='line-number'>717</span>
<span class='line-number'>718</span>
<span class='line-number'>719</span>
<span class='line-number'>720</span>
<span class='line-number'>721</span>
<span class='line-number'>722</span>
<span class='line-number'>723</span>
<span class='line-number'>724</span>
<span class='line-number'>725</span>
<span class='line-number'>726</span>
<span class='line-number'>727</span>
<span class='line-number'>728</span>
<span class='line-number'>729</span>
<span class='line-number'>730</span>
<span class='line-number'>731</span>
<span class='line-number'>732</span>
<span class='line-number'>733</span>
<span class='line-number'>734</span>
<span class='line-number'>735</span>
<span class='line-number'>736</span>
<span class='line-number'>737</span>
<span class='line-number'>738</span>
<span class='line-number'>739</span>
<span class='line-number'>740</span>
<span class='line-number'>741</span>
<span class='line-number'>742</span>
<span class='line-number'>743</span>
<span class='line-number'>744</span>
<span class='line-number'>745</span>
<span class='line-number'>746</span>
<span class='line-number'>747</span>
<span class='line-number'>748</span>
<span class='line-number'>749</span>
<span class='line-number'>750</span>
<span class='line-number'>751</span>
<span class='line-number'>752</span>
<span class='line-number'>753</span>
<span class='line-number'>754</span>
<span class='line-number'>755</span>
<span class='line-number'>756</span>
<span class='line-number'>757</span>
<span class='line-number'>758</span>
<span class='line-number'>759</span>
<span class='line-number'>760</span>
<span class='line-number'>761</span>
<span class='line-number'>762</span>
<span class='line-number'>763</span>
<span class='line-number'>764</span>
<span class='line-number'>765</span>
<span class='line-number'>766</span>
<span class='line-number'>767</span>
<span class='line-number'>768</span>
<span class='line-number'>769</span>
<span class='line-number'>770</span>
<span class='line-number'>771</span>
<span class='line-number'>772</span>
<span class='line-number'>773</span>
<span class='line-number'>774</span>
<span class='line-number'>775</span>
<span class='line-number'>776</span>
<span class='line-number'>777</span>
<span class='line-number'>778</span>
<span class='line-number'>779</span>
<span class='line-number'>780</span>
<span class='line-number'>781</span>
<span class='line-number'>782</span>
<span class='line-number'>783</span>
<span class='line-number'>784</span>
<span class='line-number'>785</span>
<span class='line-number'>786</span>
<span class='line-number'>787</span>
<span class='line-number'>788</span>
<span class='line-number'>789</span>
<span class='line-number'>790</span>
<span class='line-number'>791</span>
<span class='line-number'>792</span>
<span class='line-number'>793</span>
<span class='line-number'>794</span>
<span class='line-number'>795</span>
<span class='line-number'>796</span>
<span class='line-number'>797</span>
<span class='line-number'>798</span>
<span class='line-number'>799</span>
<span class='line-number'>800</span>
<span class='line-number'>801</span>
<span class='line-number'>802</span>
<span class='line-number'>803</span>
<span class='line-number'>804</span>
<span class='line-number'>805</span>
<span class='line-number'>806</span>
<span class='line-number'>807</span>
<span class='line-number'>808</span>
<span class='line-number'>809</span>
<span class='line-number'>810</span>
<span class='line-number'>811</span>
<span class='line-number'>812</span>
<span class='line-number'>813</span>
<span class='line-number'>814</span>
<span class='line-number'>815</span>
<span class='line-number'>816</span>
<span class='line-number'>817</span>
<span class='line-number'>818</span>
<span class='line-number'>819</span>
<span class='line-number'>820</span>
<span class='line-number'>821</span>
<span class='line-number'>822</span>
<span class='line-number'>823</span>
<span class='line-number'>824</span>
<span class='line-number'>825</span>
<span class='line-number'>826</span>
<span class='line-number'>827</span>
<span class='line-number'>828</span>
<span class='line-number'>829</span>
<span class='line-number'>830</span>
<span class='line-number'>831</span>
<span class='line-number'>832</span>
<span class='line-number'>833</span>
<span class='line-number'>834</span>
<span class='line-number'>835</span>
<span class='line-number'>836</span>
<span class='line-number'>837</span>
<span class='line-number'>838</span>
<span class='line-number'>839</span>
<span class='line-number'>840</span>
<span class='line-number'>841</span>
<span class='line-number'>842</span>
<span class='line-number'>843</span>
<span class='line-number'>844</span>
<span class='line-number'>845</span>
<span class='line-number'>846</span>
<span class='line-number'>847</span>
<span class='line-number'>848</span>
<span class='line-number'>849</span>
<span class='line-number'>850</span>
<span class='line-number'>851</span>
<span class='line-number'>852</span>
<span class='line-number'>853</span>
<span class='line-number'>854</span>
<span class='line-number'>855</span>
<span class='line-number'>856</span>
<span class='line-number'>857</span>
<span class='line-number'>858</span>
<span class='line-number'>859</span>
<span class='line-number'>860</span>
<span class='line-number'>861</span>
<span class='line-number'>862</span>
<span class='line-number'>863</span>
<span class='line-number'>864</span>
<span class='line-number'>865</span>
<span class='line-number'>866</span>
<span class='line-number'>867</span>
<span class='line-number'>868</span>
<span class='line-number'>869</span>
<span class='line-number'>870</span>
<span class='line-number'>871</span>
<span class='line-number'>872</span>
<span class='line-number'>873</span>
<span class='line-number'>874</span>
<span class='line-number'>875</span>
<span class='line-number'>876</span>
<span class='line-number'>877</span>
<span class='line-number'>878</span>
<span class='line-number'>879</span>
<span class='line-number'>880</span>
<span class='line-number'>881</span>
<span class='line-number'>882</span>
<span class='line-number'>883</span>
<span class='line-number'>884</span>
<span class='line-number'>885</span>
<span class='line-number'>886</span>
<span class='line-number'>887</span>
<span class='line-number'>888</span>
<span class='line-number'>889</span>
<span class='line-number'>890</span>
<span class='line-number'>891</span>
<span class='line-number'>892</span>
<span class='line-number'>893</span>
<span class='line-number'>894</span>
<span class='line-number'>895</span>
<span class='line-number'>896</span>
<span class='line-number'>897</span>
<span class='line-number'>898</span>
<span class='line-number'>899</span>
<span class='line-number'>900</span>
<span class='line-number'>901</span>
<span class='line-number'>902</span>
<span class='line-number'>903</span>
<span class='line-number'>904</span>
<span class='line-number'>905</span>
<span class='line-number'>906</span>
<span class='line-number'>907</span>
<span class='line-number'>908</span>
<span class='line-number'>909</span>
<span class='line-number'>910</span>
<span class='line-number'>911</span>
<span class='line-number'>912</span>
<span class='line-number'>913</span>
<span class='line-number'>914</span>
<span class='line-number'>915</span>
<span class='line-number'>916</span>
<span class='line-number'>917</span>
<span class='line-number'>918</span>
<span class='line-number'>919</span>
<span class='line-number'>920</span>
<span class='line-number'>921</span>
<span class='line-number'>922</span>
<span class='line-number'>923</span>
<span class='line-number'>924</span>
<span class='line-number'>925</span>
<span class='line-number'>926</span>
<span class='line-number'>927</span>
<span class='line-number'>928</span>
<span class='line-number'>929</span>
<span class='line-number'>930</span>
<span class='line-number'>931</span>
<span class='line-number'>932</span>
<span class='line-number'>933</span>
<span class='line-number'>934</span>
<span class='line-number'>935</span>
<span class='line-number'>936</span>
<span class='line-number'>937</span>
<span class='line-number'>938</span>
<span class='line-number'>939</span>
<span class='line-number'>940</span>
<span class='line-number'>941</span>
<span class='line-number'>942</span>
<span class='line-number'>943</span>
<span class='line-number'>944</span>
<span class='line-number'>945</span>
<span class='line-number'>946</span>
<span class='line-number'>947</span>
<span class='line-number'>948</span>
<span class='line-number'>949</span>
<span class='line-number'>950</span>
<span class='line-number'>951</span>
<span class='line-number'>952</span>
<span class='line-number'>953</span>
<span class='line-number'>954</span>
<span class='line-number'>955</span>
<span class='line-number'>956</span>
<span class='line-number'>957</span>
<span class='line-number'>958</span>
<span class='line-number'>959</span>
<span class='line-number'>960</span>
<span class='line-number'>961</span>
<span class='line-number'>962</span>
<span class='line-number'>963</span>
<span class='line-number'>964</span>
<span class='line-number'>965</span>
<span class='line-number'>966</span>
<span class='line-number'>967</span>
<span class='line-number'>968</span>
<span class='line-number'>969</span>
<span class='line-number'>970</span>
<span class='line-number'>971</span>
<span class='line-number'>972</span>
<span class='line-number'>973</span>
<span class='line-number'>974</span>
<span class='line-number'>975</span>
<span class='line-number'>976</span>
<span class='line-number'>977</span>
<span class='line-number'>978</span>
<span class='line-number'>979</span>
<span class='line-number'>980</span>
<span class='line-number'>981</span>
<span class='line-number'>982</span>
<span class='line-number'>983</span>
<span class='line-number'>984</span>
<span class='line-number'>985</span>
<span class='line-number'>986</span>
<span class='line-number'>987</span>
<span class='line-number'>988</span>
<span class='line-number'>989</span>
<span class='line-number'>990</span>
<span class='line-number'>991</span>
<span class='line-number'>992</span>
<span class='line-number'>993</span>
<span class='line-number'>994</span>
<span class='line-number'>995</span>
<span class='line-number'>996</span>
<span class='line-number'>997</span>
<span class='line-number'>998</span>
<span class='line-number'>999</span>
<span class='line-number'>1000</span>
<span class='line-number'>1001</span>
<span class='line-number'>1002</span>
<span class='line-number'>1003</span>
<span class='line-number'>1004</span>
<span class='line-number'>1005</span>
<span class='line-number'>1006</span>
<span class='line-number'>1007</span>
<span class='line-number'>1008</span>
<span class='line-number'>1009</span>
<span class='line-number'>1010</span>
<span class='line-number'>1011</span>
<span class='line-number'>1012</span>
<span class='line-number'>1013</span>
<span class='line-number'>1014</span>
<span class='line-number'>1015</span>
<span class='line-number'>1016</span>
<span class='line-number'>1017</span>
<span class='line-number'>1018</span>
<span class='line-number'>1019</span>
<span class='line-number'>1020</span>
<span class='line-number'>1021</span>
<span class='line-number'>1022</span>
<span class='line-number'>1023</span>
<span class='line-number'>1024</span>
<span class='line-number'>1025</span>
<span class='line-number'>1026</span>
<span class='line-number'>1027</span>
<span class='line-number'>1028</span>
<span class='line-number'>1029</span>
<span class='line-number'>1030</span>
<span class='line-number'>1031</span>
<span class='line-number'>1032</span>
<span class='line-number'>1033</span>
<span class='line-number'>1034</span>
<span class='line-number'>1035</span>
<span class='line-number'>1036</span>
<span class='line-number'>1037</span>
<span class='line-number'>1038</span>
<span class='line-number'>1039</span>
<span class='line-number'>1040</span>
<span class='line-number'>1041</span>
<span class='line-number'>1042</span>
<span class='line-number'>1043</span>
<span class='line-number'>1044</span>
<span class='line-number'>1045</span>
<span class='line-number'>1046</span>
<span class='line-number'>1047</span>
<span class='line-number'>1048</span>
<span class='line-number'>1049</span>
<span class='line-number'>1050</span>
<span class='line-number'>1051</span>
<span class='line-number'>1052</span>
<span class='line-number'>1053</span>
<span class='line-number'>1054</span>
<span class='line-number'>1055</span>
<span class='line-number'>1056</span>
<span class='line-number'>1057</span>
<span class='line-number'>1058</span>
<span class='line-number'>1059</span>
<span class='line-number'>1060</span>
<span class='line-number'>1061</span>
<span class='line-number'>1062</span>
<span class='line-number'>1063</span>
<span class='line-number'>1064</span>
<span class='line-number'>1065</span>
<span class='line-number'>1066</span>
<span class='line-number'>1067</span>
<span class='line-number'>1068</span>
<span class='line-number'>1069</span>
<span class='line-number'>1070</span>
<span class='line-number'>1071</span>
<span class='line-number'>1072</span>
<span class='line-number'>1073</span>
<span class='line-number'>1074</span>
<span class='line-number'>1075</span>
<span class='line-number'>1076</span>
<span class='line-number'>1077</span>
<span class='line-number'>1078</span>
<span class='line-number'>1079</span>
<span class='line-number'>1080</span>
<span class='line-number'>1081</span>
<span class='line-number'>1082</span>
<span class='line-number'>1083</span>
<span class='line-number'>1084</span>
<span class='line-number'>1085</span>
<span class='line-number'>1086</span>
<span class='line-number'>1087</span>
<span class='line-number'>1088</span>
<span class='line-number'>1089</span>
<span class='line-number'>1090</span>
<span class='line-number'>1091</span>
<span class='line-number'>1092</span>
<span class='line-number'>1093</span>
<span class='line-number'>1094</span>
<span class='line-number'>1095</span>
<span class='line-number'>1096</span>
<span class='line-number'>1097</span>
<span class='line-number'>1098</span>
<span class='line-number'>1099</span>
<span class='line-number'>1100</span>
<span class='line-number'>1101</span>
<span class='line-number'>1102</span>
<span class='line-number'>1103</span>
<span class='line-number'>1104</span>
<span class='line-number'>1105</span>
<span class='line-number'>1106</span>
<span class='line-number'>1107</span>
<span class='line-number'>1108</span>
<span class='line-number'>1109</span>
<span class='line-number'>1110</span>
<span class='line-number'>1111</span>
<span class='line-number'>1112</span>
<span class='line-number'>1113</span>
<span class='line-number'>1114</span>
<span class='line-number'>1115</span>
<span class='line-number'>1116</span>
<span class='line-number'>1117</span>
<span class='line-number'>1118</span>
<span class='line-number'>1119</span>
<span class='line-number'>1120</span>
<span class='line-number'>1121</span>
<span class='line-number'>1122</span>
<span class='line-number'>1123</span>
<span class='line-number'>1124</span>
<span class='line-number'>1125</span>
<span class='line-number'>1126</span>
<span class='line-number'>1127</span>
<span class='line-number'>1128</span>
<span class='line-number'>1129</span>
<span class='line-number'>1130</span>
<span class='line-number'>1131</span>
<span class='line-number'>1132</span>
<span class='line-number'>1133</span>
<span class='line-number'>1134</span>
<span class='line-number'>1135</span>
<span class='line-number'>1136</span>
<span class='line-number'>1137</span>
<span class='line-number'>1138</span>
<span class='line-number'>1139</span>
<span class='line-number'>1140</span>
<span class='line-number'>1141</span>
<span class='line-number'>1142</span>
<span class='line-number'>1143</span>
<span class='line-number'>1144</span>
<span class='line-number'>1145</span>
<span class='line-number'>1146</span>
<span class='line-number'>1147</span>
<span class='line-number'>1148</span>
<span class='line-number'>1149</span>
<span class='line-number'>1150</span>
<span class='line-number'>1151</span>
<span class='line-number'>1152</span>
<span class='line-number'>1153</span>
<span class='line-number'>1154</span>
<span class='line-number'>1155</span>
<span class='line-number'>1156</span>
<span class='line-number'>1157</span>
<span class='line-number'>1158</span>
<span class='line-number'>1159</span>
<span class='line-number'>1160</span>
<span class='line-number'>1161</span>
<span class='line-number'>1162</span>
<span class='line-number'>1163</span>
<span class='line-number'>1164</span>
<span class='line-number'>1165</span>
<span class='line-number'>1166</span>
<span class='line-number'>1167</span>
<span class='line-number'>1168</span>
<span class='line-number'>1169</span>
<span class='line-number'>1170</span>
<span class='line-number'>1171</span>
<span class='line-number'>1172</span>
<span class='line-number'>1173</span>
<span class='line-number'>1174</span>
<span class='line-number'>1175</span>
<span class='line-number'>1176</span>
<span class='line-number'>1177</span>
<span class='line-number'>1178</span>
<span class='line-number'>1179</span>
<span class='line-number'>1180</span>
<span class='line-number'>1181</span>
<span class='line-number'>1182</span>
<span class='line-number'>1183</span>
<span class='line-number'>1184</span>
<span class='line-number'>1185</span>
<span class='line-number'>1186</span>
<span class='line-number'>1187</span>
<span class='line-number'>1188</span>
<span class='line-number'>1189</span>
<span class='line-number'>1190</span>
<span class='line-number'>1191</span>
<span class='line-number'>1192</span>
<span class='line-number'>1193</span>
<span class='line-number'>1194</span>
<span class='line-number'>1195</span>
<span class='line-number'>1196</span>
<span class='line-number'>1197</span>
<span class='line-number'>1198</span>
<span class='line-number'>1199</span>
<span class='line-number'>1200</span>
<span class='line-number'>1201</span>
<span class='line-number'>1202</span>
<span class='line-number'>1203</span>
<span class='line-number'>1204</span>
<span class='line-number'>1205</span>
<span class='line-number'>1206</span>
<span class='line-number'>1207</span>
<span class='line-number'>1208</span>
<span class='line-number'>1209</span>
<span class='line-number'>1210</span>
<span class='line-number'>1211</span>
<span class='line-number'>1212</span>
<span class='line-number'>1213</span>
<span class='line-number'>1214</span>
<span class='line-number'>1215</span>
<span class='line-number'>1216</span>
<span class='line-number'>1217</span>
<span class='line-number'>1218</span>
<span class='line-number'>1219</span>
<span class='line-number'>1220</span>
<span class='line-number'>1221</span>
<span class='line-number'>1222</span>
<span class='line-number'>1223</span>
<span class='line-number'>1224</span>
<span class='line-number'>1225</span>
<span class='line-number'>1226</span>
<span class='line-number'>1227</span>
<span class='line-number'>1228</span>
<span class='line-number'>1229</span>
<span class='line-number'>1230</span>
<span class='line-number'>1231</span>
<span class='line-number'>1232</span>
<span class='line-number'>1233</span>
<span class='line-number'>1234</span>
<span class='line-number'>1235</span>
<span class='line-number'>1236</span>
<span class='line-number'>1237</span>
<span class='line-number'>1238</span>
<span class='line-number'>1239</span>
<span class='line-number'>1240</span>
<span class='line-number'>1241</span>
<span class='line-number'>1242</span>
<span class='line-number'>1243</span>
<span class='line-number'>1244</span>
<span class='line-number'>1245</span>
<span class='line-number'>1246</span>
<span class='line-number'>1247</span>
<span class='line-number'>1248</span>
<span class='line-number'>1249</span>
<span class='line-number'>1250</span>
<span class='line-number'>1251</span>
<span class='line-number'>1252</span>
<span class='line-number'>1253</span>
<span class='line-number'>1254</span>
<span class='line-number'>1255</span>
<span class='line-number'>1256</span>
<span class='line-number'>1257</span>
<span class='line-number'>1258</span>
<span class='line-number'>1259</span>
<span class='line-number'>1260</span>
<span class='line-number'>1261</span>
<span class='line-number'>1262</span>
<span class='line-number'>1263</span>
<span class='line-number'>1264</span>
<span class='line-number'>1265</span>
<span class='line-number'>1266</span>
<span class='line-number'>1267</span>
<span class='line-number'>1268</span>
<span class='line-number'>1269</span>
<span class='line-number'>1270</span>
<span class='line-number'>1271</span>
<span class='line-number'>1272</span>
<span class='line-number'>1273</span>
<span class='line-number'>1274</span>
<span class='line-number'>1275</span>
<span class='line-number'>1276</span>
<span class='line-number'>1277</span>
<span class='line-number'>1278</span>
<span class='line-number'>1279</span>
<span class='line-number'>1280</span>
<span class='line-number'>1281</span>
<span class='line-number'>1282</span>
<span class='line-number'>1283</span>
<span class='line-number'>1284</span>
<span class='line-number'>1285</span>
<span class='line-number'>1286</span>
<span class='line-number'>1287</span>
<span class='line-number'>1288</span>
<span class='line-number'>1289</span>
<span class='line-number'>1290</span>
<span class='line-number'>1291</span>
<span class='line-number'>1292</span>
<span class='line-number'>1293</span>
<span class='line-number'>1294</span>
<span class='line-number'>1295</span>
<span class='line-number'>1296</span>
<span class='line-number'>1297</span>
<span class='line-number'>1298</span>
<span class='line-number'>1299</span>
<span class='line-number'>1300</span>
<span class='line-number'>1301</span>
<span class='line-number'>1302</span>
<span class='line-number'>1303</span>
<span class='line-number'>1304</span>
<span class='line-number'>1305</span>
<span class='line-number'>1306</span>
<span class='line-number'>1307</span>
<span class='line-number'>1308</span>
<span class='line-number'>1309</span>
<span class='line-number'>1310</span>
<span class='line-number'>1311</span>
<span class='line-number'>1312</span>
<span class='line-number'>1313</span>
<span class='line-number'>1314</span>
<span class='line-number'>1315</span>
<span class='line-number'>1316</span>
<span class='line-number'>1317</span>
<span class='line-number'>1318</span>
<span class='line-number'>1319</span>
<span class='line-number'>1320</span>
<span class='line-number'>1321</span>
<span class='line-number'>1322</span>
<span class='line-number'>1323</span>
<span class='line-number'>1324</span>
<span class='line-number'>1325</span>
<span class='line-number'>1326</span>
<span class='line-number'>1327</span>
<span class='line-number'>1328</span>
<span class='line-number'>1329</span>
<span class='line-number'>1330</span>
<span class='line-number'>1331</span>
<span class='line-number'>1332</span>
<span class='line-number'>1333</span>
<span class='line-number'>1334</span>
<span class='line-number'>1335</span>
<span class='line-number'>1336</span>
<span class='line-number'>1337</span>
<span class='line-number'>1338</span>
<span class='line-number'>1339</span>
<span class='line-number'>1340</span>
<span class='line-number'>1341</span>
<span class='line-number'>1342</span>
<span class='line-number'>1343</span>
<span class='line-number'>1344</span>
<span class='line-number'>1345</span>
<span class='line-number'>1346</span>
<span class='line-number'>1347</span>
<span class='line-number'>1348</span>
<span class='line-number'>1349</span>
<span class='line-number'>1350</span>
<span class='line-number'>1351</span>
<span class='line-number'>1352</span>
<span class='line-number'>1353</span>
<span class='line-number'>1354</span>
<span class='line-number'>1355</span>
<span class='line-number'>1356</span>
<span class='line-number'>1357</span>
<span class='line-number'>1358</span>
<span class='line-number'>1359</span>
<span class='line-number'>1360</span>
<span class='line-number'>1361</span>
<span class='line-number'>1362</span>
<span class='line-number'>1363</span>
<span class='line-number'>1364</span>
<span class='line-number'>1365</span>
<span class='line-number'>1366</span>
<span class='line-number'>1367</span>
<span class='line-number'>1368</span>
<span class='line-number'>1369</span>
<span class='line-number'>1370</span>
<span class='line-number'>1371</span>
<span class='line-number'>1372</span>
<span class='line-number'>1373</span>
<span class='line-number'>1374</span>
<span class='line-number'>1375</span>
<span class='line-number'>1376</span>
<span class='line-number'>1377</span>
<span class='line-number'>1378</span>
<span class='line-number'>1379</span>
<span class='line-number'>1380</span>
<span class='line-number'>1381</span>
<span class='line-number'>1382</span>
<span class='line-number'>1383</span>
<span class='line-number'>1384</span>
<span class='line-number'>1385</span>
<span class='line-number'>1386</span>
<span class='line-number'>1387</span>
<span class='line-number'>1388</span>
<span class='line-number'>1389</span>
<span class='line-number'>1390</span>
<span class='line-number'>1391</span>
<span class='line-number'>1392</span>
<span class='line-number'>1393</span>
<span class='line-number'>1394</span>
<span class='line-number'>1395</span>
<span class='line-number'>1396</span>
<span class='line-number'>1397</span>
<span class='line-number'>1398</span>
<span class='line-number'>1399</span>
<span class='line-number'>1400</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'> <span class="n">tag</span>     <span class="n">subject</span>             <span class="n">tag</span>   <span class="n">subject</span>    <span class="o">~</span>
</span><span class='line'><span class="n">Q_ct</span>   <span class="n">list</span> <span class="n">of</span> <span class="n">help</span> <span class="n">files</span>      <span class="n">Q_re</span> <span class="n">Repeating</span> <span class="n">commands</span>
</span><span class='line'><span class="n">Q_lr</span>   <span class="nl">motion</span><span class="p">:</span> <span class="n">Left</span><span class="o">-</span><span class="n">right</span>      <span class="n">Q_km</span> <span class="n">Key</span> <span class="n">mapping</span>
</span><span class='line'><span class="n">Q_ud</span>   <span class="nl">motion</span><span class="p">:</span> <span class="n">Up</span><span class="o">-</span><span class="n">down</span>         <span class="n">Q_ab</span> <span class="n">Abbreviations</span>
</span><span class='line'><span class="n">Q_tm</span>   <span class="nl">motion</span><span class="p">:</span> <span class="n">Text</span> <span class="n">object</span>        <span class="n">Q_op</span> <span class="n">Options</span>
</span><span class='line'><span class="n">Q_pa</span>   <span class="nl">motion</span><span class="p">:</span> <span class="n">Pattern</span> <span class="n">searches</span>   <span class="n">Q_ur</span> <span class="n">Undo</span><span class="o">/</span><span class="n">Redo</span> <span class="n">commands</span>
</span><span class='line'><span class="n">Q_ma</span>   <span class="nl">motion</span><span class="p">:</span> <span class="n">Marks</span>         <span class="n">Q_et</span> <span class="n">External</span> <span class="n">commands</span>
</span><span class='line'><span class="n">Q_vm</span>   <span class="nl">motion</span><span class="p">:</span> <span class="n">Various</span>           <span class="n">Q_qf</span> <span class="n">Quickfix</span> <span class="n">commands</span>
</span><span class='line'><span class="n">Q_ta</span>   <span class="nl">motion</span><span class="p">:</span> <span class="n">Using</span> <span class="n">tags</span>     <span class="n">Q_vc</span> <span class="n">Various</span> <span class="n">commands</span>
</span><span class='line'><span class="n">Q_sc</span>   <span class="n">Scrolling</span>            <span class="n">Q_ce</span> <span class="nl">Ex</span><span class="p">:</span> <span class="n">Command</span><span class="o">-</span><span class="n">line</span> <span class="n">editing</span>
</span><span class='line'><span class="n">Q_in</span>   <span class="nl">insert</span><span class="p">:</span> <span class="n">Inserting</span> <span class="n">text</span>     <span class="n">Q_ra</span> <span class="nl">Ex</span><span class="p">:</span> <span class="n">Ranges</span>
</span><span class='line'><span class="n">Q_ai</span>   <span class="nl">insert</span><span class="p">:</span> <span class="n">Keys</span>          <span class="n">Q_ex</span> <span class="nl">Ex</span><span class="p">:</span> <span class="n">Special</span> <span class="n">characters</span>
</span><span class='line'><span class="n">Q_ss</span>   <span class="nl">insert</span><span class="p">:</span> <span class="n">Special</span> <span class="n">keys</span>       <span class="n">Q_st</span> <span class="n">Starting</span> <span class="n">Vim</span>
</span><span class='line'><span class="n">Q_di</span>   <span class="nl">insert</span><span class="p">:</span> <span class="n">Digraphs</span>      <span class="n">Q_ed</span> <span class="n">Editing</span> <span class="n">a</span> <span class="n">file</span>
</span><span class='line'><span class="n">Q_si</span>   <span class="nl">insert</span><span class="p">:</span> <span class="n">Special</span> <span class="n">inserts</span>        <span class="n">Q_fl</span> <span class="n">Using</span> <span class="n">the</span> <span class="n">argument</span> <span class="n">list</span>
</span><span class='line'><span class="n">Q_de</span>   <span class="nl">change</span><span class="p">:</span> <span class="n">Deleting</span> <span class="n">text</span>      <span class="n">Q_wq</span> <span class="n">Writing</span> <span class="n">and</span> <span class="n">quitting</span>
</span><span class='line'><span class="n">Q_cm</span>   <span class="nl">change</span><span class="p">:</span> <span class="n">Copying</span> <span class="n">and</span> <span class="n">moving</span>  <span class="n">Q_ac</span> <span class="n">Automatic</span> <span class="n">commands</span>
</span><span class='line'><span class="n">Q_ch</span>   <span class="nl">change</span><span class="p">:</span> <span class="n">Changing</span> <span class="n">text</span>      <span class="n">Q_wi</span> <span class="n">Multi</span><span class="o">-</span><span class="n">window</span> <span class="n">commands</span>
</span><span class='line'><span class="n">Q_co</span>   <span class="nl">change</span><span class="p">:</span> <span class="n">Complex</span>           <span class="n">Q_bu</span> <span class="n">Buffer</span> <span class="n">list</span> <span class="n">commands</span>
</span><span class='line'><span class="n">Q_vi</span>   <span class="n">Visual</span> <span class="n">mode</span>           <span class="n">Q_sy</span> <span class="n">Syntax</span> <span class="n">highlighting</span>
</span><span class='line'><span class="n">Q_to</span>   <span class="n">Text</span> <span class="n">objects</span>          <span class="n">Q_gu</span> <span class="n">GUI</span> <span class="n">commands</span>
</span><span class='line'>                  <span class="n">Q_fo</span> <span class="n">Folding</span>
</span><span class='line'>
</span><span class='line'><span class="o">------------------------------------------------------------------------------</span>
</span><span class='line'><span class="n">N</span> <span class="n">is</span> <span class="n">used</span> <span class="n">to</span> <span class="n">indicate</span> <span class="n">an</span> <span class="n">optional</span> <span class="n">count</span> <span class="n">that</span> <span class="n">can</span> <span class="n">be</span> <span class="n">given</span> <span class="n">before</span> <span class="n">the</span> <span class="n">command</span><span class="p">.</span>
</span><span class='line'><span class="o">------------------------------------------------------------------------------</span>
</span><span class='line'><span class="o">*</span><span class="n">Q_lr</span><span class="o">*</span>       <span class="n">Left</span><span class="o">-</span><span class="n">right</span> <span class="n">motions</span>
</span><span class='line'>
</span><span class='line'><span class="n">h</span>  <span class="n">N</span>  <span class="n">h</span>      <span class="n">left</span> <span class="p">(</span><span class="nl">also</span><span class="p">:</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">H</span><span class="p">,</span> <span class="o">&lt;</span><span class="n">BS</span><span class="o">&gt;</span><span class="p">,</span> <span class="n">or</span> <span class="o">&lt;</span><span class="n">Left</span><span class="o">&gt;</span> <span class="n">key</span><span class="p">)</span>
</span><span class='line'><span class="n">l</span>  <span class="n">N</span>  <span class="n">l</span>      <span class="n">right</span> <span class="p">(</span><span class="nl">also</span><span class="p">:</span> <span class="o">&lt;</span><span class="n">Space</span><span class="o">&gt;</span> <span class="n">or</span> <span class="o">&lt;</span><span class="n">Right</span><span class="o">&gt;</span> <span class="n">key</span><span class="p">)</span>
</span><span class='line'><span class="mi">0</span>    <span class="mi">0</span>        <span class="n">to</span> <span class="n">first</span> <span class="n">character</span> <span class="n">in</span> <span class="n">the</span> <span class="n">line</span> <span class="p">(</span><span class="nl">also</span><span class="p">:</span> <span class="o">&lt;</span><span class="n">Home</span><span class="o">&gt;</span> <span class="n">key</span><span class="p">)</span>
</span><span class='line'><span class="o">^</span>     <span class="o">^</span>     <span class="n">to</span> <span class="n">first</span> <span class="n">non</span><span class="o">-</span><span class="n">blank</span> <span class="n">character</span> <span class="n">in</span> <span class="n">the</span> <span class="n">line</span>
</span><span class='line'><span class="err">$</span>    <span class="n">N</span>  <span class="err">$</span>        <span class="n">to</span> <span class="n">the</span> <span class="n">last</span> <span class="n">character</span> <span class="n">in</span> <span class="n">the</span> <span class="n">line</span> <span class="p">(</span><span class="n">N</span><span class="o">-</span><span class="mi">1</span> <span class="n">lines</span> <span class="n">lower</span><span class="p">)</span>
</span><span class='line'>             <span class="p">(</span><span class="nl">also</span><span class="p">:</span> <span class="o">&lt;</span><span class="n">End</span><span class="o">&gt;</span> <span class="n">key</span><span class="p">)</span>
</span><span class='line'><span class="n">g0</span>    <span class="n">g0</span>        <span class="n">to</span> <span class="n">first</span> <span class="n">character</span> <span class="n">in</span> <span class="n">screen</span> <span class="n">line</span> <span class="p">(</span><span class="n">differs</span> <span class="n">from</span> <span class="s">&quot;0&quot;</span>
</span><span class='line'>             <span class="n">when</span> <span class="n">lines</span> <span class="n">wrap</span><span class="p">)</span>
</span><span class='line'><span class="n">g</span><span class="o">^</span>     <span class="n">g</span><span class="o">^</span>     <span class="n">to</span> <span class="n">first</span> <span class="n">non</span><span class="o">-</span><span class="n">blank</span> <span class="n">character</span> <span class="n">in</span> <span class="n">screen</span> <span class="n">line</span> <span class="p">(</span><span class="n">differs</span>
</span><span class='line'>             <span class="n">from</span> <span class="s">&quot;^&quot;</span> <span class="n">when</span> <span class="n">lines</span> <span class="n">wrap</span><span class="p">)</span>
</span><span class='line'><span class="n">g</span><span class="err">$</span>    <span class="n">N</span>  <span class="n">g</span><span class="err">$</span>        <span class="n">to</span> <span class="n">last</span> <span class="n">character</span> <span class="n">in</span> <span class="n">screen</span> <span class="n">line</span> <span class="p">(</span><span class="n">differs</span> <span class="n">from</span> <span class="s">&quot;$&quot;</span>
</span><span class='line'>             <span class="n">when</span> <span class="n">lines</span> <span class="n">wrap</span><span class="p">)</span>
</span><span class='line'><span class="n">gm</span>    <span class="n">gm</span>        <span class="n">to</span> <span class="n">middle</span> <span class="n">of</span> <span class="n">the</span> <span class="n">screen</span> <span class="n">line</span>
</span><span class='line'><span class="n">bar</span>    <span class="n">N</span>        <span class="n">to</span> <span class="n">column</span> <span class="n">N</span> <span class="p">(</span><span class="k">default</span><span class="o">:</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="n">f</span>  <span class="n">N</span>  <span class="n">f</span><span class="p">{</span><span class="kt">char</span><span class="p">}</span>  <span class="n">to</span> <span class="n">the</span> <span class="n">Nth</span> <span class="n">occurrence</span> <span class="n">of</span> <span class="p">{</span><span class="kt">char</span><span class="p">}</span> <span class="n">to</span> <span class="n">the</span> <span class="n">right</span>
</span><span class='line'><span class="n">F</span>  <span class="n">N</span>  <span class="n">F</span><span class="p">{</span><span class="kt">char</span><span class="p">}</span>  <span class="n">to</span> <span class="n">the</span> <span class="n">Nth</span> <span class="n">occurrence</span> <span class="n">of</span> <span class="p">{</span><span class="kt">char</span><span class="p">}</span> <span class="n">to</span> <span class="n">the</span> <span class="n">left</span>
</span><span class='line'><span class="n">t</span>  <span class="n">N</span>  <span class="n">t</span><span class="p">{</span><span class="kt">char</span><span class="p">}</span>  <span class="n">till</span> <span class="n">before</span> <span class="n">the</span> <span class="n">Nth</span> <span class="n">occurrence</span> <span class="n">of</span> <span class="p">{</span><span class="kt">char</span><span class="p">}</span> <span class="n">to</span> <span class="n">the</span> <span class="n">right</span>
</span><span class='line'><span class="n">T</span>  <span class="n">N</span>  <span class="n">T</span><span class="p">{</span><span class="kt">char</span><span class="p">}</span>  <span class="n">till</span> <span class="n">before</span> <span class="n">the</span> <span class="n">Nth</span> <span class="n">occurrence</span> <span class="n">of</span> <span class="p">{</span><span class="kt">char</span><span class="p">}</span> <span class="n">to</span> <span class="n">the</span> <span class="n">left</span>
</span><span class='line'><span class="p">;</span>  <span class="n">N</span>  <span class="p">;</span>      <span class="n">repeat</span> <span class="n">the</span> <span class="n">last</span> <span class="s">&quot;f&quot;</span><span class="p">,</span> <span class="s">&quot;F&quot;</span><span class="p">,</span> <span class="s">&quot;t&quot;</span><span class="p">,</span> <span class="n">or</span> <span class="s">&quot;T&quot;</span> <span class="n">N</span> <span class="n">times</span>
</span><span class='line'><span class="p">,</span>  <span class="n">N</span>  <span class="p">,</span>      <span class="n">repeat</span> <span class="n">the</span> <span class="n">last</span> <span class="s">&quot;f&quot;</span><span class="p">,</span> <span class="s">&quot;F&quot;</span><span class="p">,</span> <span class="s">&quot;t&quot;</span><span class="p">,</span> <span class="n">or</span> <span class="s">&quot;T&quot;</span> <span class="n">N</span> <span class="n">times</span> <span class="n">in</span>
</span><span class='line'>             <span class="n">opposite</span> <span class="n">direction</span>
</span><span class='line'><span class="o">------------------------------------------------------------------------------</span>
</span><span class='line'><span class="o">*</span><span class="n">Q_ud</span><span class="o">*</span>       <span class="n">Up</span><span class="o">-</span><span class="n">down</span> <span class="n">motions</span>
</span><span class='line'>
</span><span class='line'><span class="n">k</span>  <span class="n">N</span>  <span class="n">k</span>      <span class="n">up</span> <span class="n">N</span> <span class="n">lines</span> <span class="p">(</span><span class="nl">also</span><span class="p">:</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">P</span> <span class="n">and</span> <span class="o">&lt;</span><span class="n">Up</span><span class="o">&gt;</span><span class="p">)</span>
</span><span class='line'><span class="n">j</span>  <span class="n">N</span>  <span class="n">j</span>      <span class="n">down</span> <span class="n">N</span> <span class="n">lines</span> <span class="p">(</span><span class="nl">also</span><span class="p">:</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">J</span><span class="p">,</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">N</span><span class="p">,</span> <span class="o">&lt;</span><span class="n">NL</span><span class="o">&gt;</span><span class="p">,</span> <span class="n">and</span> <span class="o">&lt;</span><span class="n">Down</span><span class="o">&gt;</span><span class="p">)</span>
</span><span class='line'><span class="o">-</span>  <span class="n">N</span>  <span class="o">-</span>      <span class="n">up</span> <span class="n">N</span> <span class="n">lines</span><span class="p">,</span> <span class="n">on</span> <span class="n">the</span> <span class="n">first</span> <span class="n">non</span><span class="o">-</span><span class="n">blank</span> <span class="n">character</span>
</span><span class='line'><span class="o">+</span>  <span class="n">N</span>  <span class="o">+</span>      <span class="n">down</span> <span class="n">N</span> <span class="n">lines</span><span class="p">,</span> <span class="n">on</span> <span class="n">the</span> <span class="n">first</span> <span class="n">non</span><span class="o">-</span><span class="n">blank</span> <span class="n">character</span> <span class="p">(</span><span class="nl">also</span><span class="p">:</span>
</span><span class='line'>             <span class="n">CTRL</span><span class="o">-</span><span class="n">M</span> <span class="n">and</span> <span class="o">&lt;</span><span class="n">CR</span><span class="o">&gt;</span><span class="p">)</span>
</span><span class='line'><span class="n">_</span>  <span class="n">N</span>  <span class="n">_</span>      <span class="n">down</span> <span class="n">N</span><span class="o">-</span><span class="mi">1</span> <span class="n">lines</span><span class="p">,</span> <span class="n">on</span> <span class="n">the</span> <span class="n">first</span> <span class="n">non</span><span class="o">-</span><span class="n">blank</span> <span class="n">character</span>
</span><span class='line'><span class="n">G</span>  <span class="n">N</span>  <span class="n">G</span>      <span class="k">goto</span> <span class="n">line</span> <span class="n">N</span> <span class="p">(</span><span class="k">default</span><span class="o">:</span> <span class="n">last</span> <span class="n">line</span><span class="p">),</span> <span class="n">on</span> <span class="n">the</span> <span class="n">first</span>
</span><span class='line'>             <span class="n">non</span><span class="o">-</span><span class="n">blank</span> <span class="n">character</span>
</span><span class='line'><span class="n">gg</span> <span class="n">N</span>  <span class="n">gg</span>     <span class="k">goto</span> <span class="n">line</span> <span class="n">N</span> <span class="p">(</span><span class="k">default</span><span class="o">:</span> <span class="n">first</span> <span class="n">line</span><span class="p">),</span> <span class="n">on</span> <span class="n">the</span> <span class="n">first</span>
</span><span class='line'>             <span class="n">non</span><span class="o">-</span><span class="n">blank</span> <span class="n">character</span>
</span><span class='line'><span class="n">N</span><span class="o">%</span>  <span class="n">N</span>  <span class="o">%</span>      <span class="k">goto</span> <span class="n">line</span> <span class="n">N</span> <span class="n">percentage</span> <span class="n">down</span> <span class="n">in</span> <span class="n">the</span> <span class="n">file</span><span class="p">;</span> <span class="n">N</span> <span class="n">must</span> <span class="n">be</span>
</span><span class='line'>             <span class="n">given</span><span class="p">,</span> <span class="n">otherwise</span> <span class="n">it</span> <span class="n">is</span> <span class="n">the</span> <span class="o">%</span> <span class="n">command</span>
</span><span class='line'><span class="n">gk</span> <span class="n">N</span>  <span class="n">gk</span>     <span class="n">up</span> <span class="n">N</span> <span class="n">screen</span> <span class="n">lines</span> <span class="p">(</span><span class="n">differs</span> <span class="n">from</span> <span class="s">&quot;k&quot;</span> <span class="n">when</span> <span class="n">line</span> <span class="n">wraps</span><span class="p">)</span>
</span><span class='line'><span class="n">gj</span> <span class="n">N</span>  <span class="n">gj</span>     <span class="n">down</span> <span class="n">N</span> <span class="n">screen</span> <span class="n">lines</span> <span class="p">(</span><span class="n">differs</span> <span class="n">from</span> <span class="s">&quot;j&quot;</span> <span class="n">when</span> <span class="n">line</span> <span class="n">wraps</span><span class="p">)</span>
</span><span class='line'><span class="o">------------------------------------------------------------------------------</span>
</span><span class='line'><span class="o">*</span><span class="n">Q_tm</span><span class="o">*</span>       <span class="n">Text</span> <span class="n">object</span> <span class="n">motions</span>
</span><span class='line'>
</span><span class='line'><span class="n">w</span>  <span class="n">N</span>  <span class="n">w</span>      <span class="n">N</span> <span class="n">words</span> <span class="n">forward</span>
</span><span class='line'><span class="n">W</span>  <span class="n">N</span>  <span class="n">W</span>      <span class="n">N</span> <span class="n">blank</span><span class="o">-</span><span class="n">separated</span> <span class="n">WORDs</span> <span class="n">forward</span>
</span><span class='line'><span class="n">e</span>  <span class="n">N</span>  <span class="n">e</span>      <span class="n">forward</span> <span class="n">to</span> <span class="n">the</span> <span class="n">end</span> <span class="n">of</span> <span class="n">the</span> <span class="n">Nth</span> <span class="n">word</span>
</span><span class='line'><span class="n">E</span>  <span class="n">N</span>  <span class="n">E</span>      <span class="n">forward</span> <span class="n">to</span> <span class="n">the</span> <span class="n">end</span> <span class="n">of</span> <span class="n">the</span> <span class="n">Nth</span> <span class="n">blank</span><span class="o">-</span><span class="n">separated</span> <span class="n">WORD</span>
</span><span class='line'><span class="n">b</span>  <span class="n">N</span>  <span class="n">b</span>      <span class="n">N</span> <span class="n">words</span> <span class="n">backward</span>
</span><span class='line'><span class="n">B</span>  <span class="n">N</span>  <span class="n">B</span>      <span class="n">N</span> <span class="n">blank</span><span class="o">-</span><span class="n">separated</span> <span class="n">WORDs</span> <span class="n">backward</span>
</span><span class='line'><span class="n">ge</span> <span class="n">N</span>  <span class="n">ge</span>     <span class="n">backward</span> <span class="n">to</span> <span class="n">the</span> <span class="n">end</span> <span class="n">of</span> <span class="n">the</span> <span class="n">Nth</span> <span class="n">word</span>
</span><span class='line'><span class="n">gE</span> <span class="n">N</span>  <span class="n">gE</span>     <span class="n">backward</span> <span class="n">to</span> <span class="n">the</span> <span class="n">end</span> <span class="n">of</span> <span class="n">the</span> <span class="n">Nth</span> <span class="n">blank</span><span class="o">-</span><span class="n">separated</span> <span class="n">WORD</span>
</span><span class='line'>
</span><span class='line'><span class="p">)</span>  <span class="n">N</span>  <span class="p">)</span>      <span class="n">N</span> <span class="n">sentences</span> <span class="n">forward</span>
</span><span class='line'><span class="p">(</span>  <span class="n">N</span>  <span class="p">(</span>      <span class="n">N</span> <span class="n">sentences</span> <span class="n">backward</span>
</span><span class='line'><span class="p">}</span>  <span class="n">N</span>  <span class="p">}</span>      <span class="n">N</span> <span class="n">paragraphs</span> <span class="n">forward</span>
</span><span class='line'><span class="p">{</span>  <span class="n">N</span>  <span class="p">{</span>      <span class="n">N</span> <span class="n">paragraphs</span> <span class="n">backward</span>
</span><span class='line'><span class="p">]]</span> <span class="n">N</span>  <span class="p">]]</span>     <span class="n">N</span> <span class="n">sections</span> <span class="n">forward</span><span class="p">,</span> <span class="n">at</span> <span class="n">start</span> <span class="n">of</span> <span class="n">section</span>
</span><span class='line'><span class="p">[[</span> <span class="n">N</span>  <span class="p">[[</span>     <span class="n">N</span> <span class="n">sections</span> <span class="n">backward</span><span class="p">,</span> <span class="n">at</span> <span class="n">start</span> <span class="n">of</span> <span class="n">section</span>
</span><span class='line'><span class="p">][</span> <span class="n">N</span>  <span class="p">][</span>     <span class="n">N</span> <span class="n">sections</span> <span class="n">forward</span><span class="p">,</span> <span class="n">at</span> <span class="n">end</span> <span class="n">of</span> <span class="n">section</span>
</span><span class='line'><span class="p">[]</span> <span class="n">N</span>  <span class="p">[]</span>     <span class="n">N</span> <span class="n">sections</span> <span class="n">backward</span><span class="p">,</span> <span class="n">at</span> <span class="n">end</span> <span class="n">of</span> <span class="n">section</span>
</span><span class='line'><span class="p">[(</span> <span class="n">N</span>  <span class="p">[(</span>     <span class="n">N</span> <span class="n">times</span> <span class="n">back</span> <span class="n">to</span> <span class="n">unclosed</span> <span class="sc">&#39;(&#39;</span>
</span><span class='line'><span class="p">[{</span> <span class="n">N</span>  <span class="p">[{</span>     <span class="n">N</span> <span class="n">times</span> <span class="n">back</span> <span class="n">to</span> <span class="n">unclosed</span> <span class="sc">&#39;{&#39;</span>
</span><span class='line'><span class="p">[</span><span class="n">m</span>  <span class="n">N</span>  <span class="p">[</span><span class="n">m</span>      <span class="n">N</span> <span class="n">times</span> <span class="n">back</span> <span class="n">to</span> <span class="n">start</span> <span class="n">of</span> <span class="n">method</span> <span class="p">(</span><span class="k">for</span> <span class="n">Java</span><span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="n">M</span>  <span class="n">N</span>  <span class="p">[</span><span class="n">M</span>      <span class="n">N</span> <span class="n">times</span> <span class="n">back</span> <span class="n">to</span> <span class="n">end</span> <span class="n">of</span> <span class="n">method</span> <span class="p">(</span><span class="k">for</span> <span class="n">Java</span><span class="p">)</span>
</span><span class='line'><span class="p">])</span> <span class="n">N</span>  <span class="p">])</span>     <span class="n">N</span> <span class="n">times</span> <span class="n">forward</span> <span class="n">to</span> <span class="n">unclosed</span> <span class="sc">&#39;)&#39;</span>
</span><span class='line'><span class="p">]}</span> <span class="n">N</span>  <span class="p">]}</span>     <span class="n">N</span> <span class="n">times</span> <span class="n">forward</span> <span class="n">to</span> <span class="n">unclosed</span> <span class="sc">&#39;}&#39;</span>
</span><span class='line'><span class="p">]</span><span class="n">m</span>  <span class="n">N</span>  <span class="p">]</span><span class="n">m</span>      <span class="n">N</span> <span class="n">times</span> <span class="n">forward</span> <span class="n">to</span> <span class="n">start</span> <span class="n">of</span> <span class="n">method</span> <span class="p">(</span><span class="k">for</span> <span class="n">Java</span><span class="p">)</span>
</span><span class='line'><span class="p">]</span><span class="n">M</span>  <span class="n">N</span>  <span class="p">]</span><span class="n">M</span>      <span class="n">N</span> <span class="n">times</span> <span class="n">forward</span> <span class="n">to</span> <span class="n">end</span> <span class="n">of</span> <span class="n">method</span> <span class="p">(</span><span class="k">for</span> <span class="n">Java</span><span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="err">#</span>    <span class="n">N</span>  <span class="p">[</span><span class="err">#</span>        <span class="n">N</span> <span class="n">times</span> <span class="n">back</span> <span class="n">to</span> <span class="n">unclosed</span> <span class="s">&quot;#if&quot;</span> <span class="n">or</span> <span class="s">&quot;#else&quot;</span>
</span><span class='line'><span class="p">]</span><span class="err">#</span>    <span class="n">N</span>  <span class="p">]</span><span class="err">#</span>        <span class="n">N</span> <span class="n">times</span> <span class="n">forward</span> <span class="n">to</span> <span class="n">unclosed</span> <span class="s">&quot;#else&quot;</span> <span class="n">or</span> <span class="s">&quot;#endif&quot;</span>
</span><span class='line'><span class="p">[</span><span class="n">star</span>   <span class="n">N</span>  <span class="p">[</span><span class="o">*</span>      <span class="n">N</span> <span class="n">times</span> <span class="n">back</span> <span class="n">to</span> <span class="n">start</span> <span class="n">of</span> <span class="n">comment</span> <span class="s">&quot;/*&quot;</span>
</span><span class='line'><span class="p">]</span><span class="n">star</span>   <span class="n">N</span>  <span class="p">]</span><span class="o">*</span>      <span class="n">N</span> <span class="n">times</span> <span class="n">forward</span> <span class="n">to</span> <span class="n">end</span> <span class="n">of</span> <span class="n">comment</span> <span class="s">&quot;*/&quot;</span>
</span><span class='line'><span class="o">------------------------------------------------------------------------------</span>
</span><span class='line'><span class="o">*</span><span class="n">Q_pa</span><span class="o">*</span>       <span class="n">Pattern</span> <span class="n">searches</span>
</span><span class='line'>
</span><span class='line'><span class="o">/</span>  <span class="n">N</span>  <span class="o">/</span><span class="p">{</span><span class="n">pattern</span><span class="p">}[</span><span class="o">/</span><span class="p">[</span><span class="n">offset</span><span class="p">]]</span><span class="o">&lt;</span><span class="n">CR</span><span class="o">&gt;</span>
</span><span class='line'>          <span class="n">search</span> <span class="n">forward</span> <span class="k">for</span> <span class="n">the</span> <span class="n">Nth</span> <span class="n">occurrence</span> <span class="n">of</span> <span class="p">{</span><span class="n">pattern</span><span class="p">}</span>
</span><span class='line'><span class="o">?</span>  <span class="n">N</span>  <span class="o">?</span><span class="p">{</span><span class="n">pattern</span><span class="p">}[</span><span class="o">?</span><span class="p">[</span><span class="n">offset</span><span class="p">]]</span><span class="o">&lt;</span><span class="n">CR</span><span class="o">&gt;</span>
</span><span class='line'>          <span class="n">search</span> <span class="n">backward</span> <span class="k">for</span> <span class="n">the</span> <span class="n">Nth</span> <span class="n">occurrence</span> <span class="n">of</span> <span class="p">{</span><span class="n">pattern</span><span class="p">}</span>
</span><span class='line'><span class="o">/&lt;</span><span class="n">CR</span><span class="o">&gt;</span>  <span class="n">N</span>  <span class="o">/&lt;</span><span class="n">CR</span><span class="o">&gt;</span>  <span class="n">repeat</span> <span class="n">last</span> <span class="n">search</span><span class="p">,</span> <span class="n">in</span> <span class="n">the</span> <span class="n">forward</span> <span class="n">direction</span>
</span><span class='line'><span class="o">?&lt;</span><span class="n">CR</span><span class="o">&gt;</span>  <span class="n">N</span>  <span class="o">?&lt;</span><span class="n">CR</span><span class="o">&gt;</span>  <span class="n">repeat</span> <span class="n">last</span> <span class="n">search</span><span class="p">,</span> <span class="n">in</span> <span class="n">the</span> <span class="n">backward</span> <span class="n">direction</span>
</span><span class='line'><span class="n">n</span>  <span class="n">N</span>  <span class="n">n</span>      <span class="n">repeat</span> <span class="n">last</span> <span class="n">search</span>
</span><span class='line'><span class="n">N</span>  <span class="n">N</span>  <span class="n">N</span>      <span class="n">repeat</span> <span class="n">last</span> <span class="n">search</span><span class="p">,</span> <span class="n">in</span> <span class="n">opposite</span> <span class="n">direction</span>
</span><span class='line'><span class="n">star</span>   <span class="n">N</span>  <span class="o">*</span>      <span class="n">search</span> <span class="n">forward</span> <span class="k">for</span> <span class="n">the</span> <span class="n">identifier</span> <span class="n">under</span> <span class="n">the</span> <span class="n">cursor</span>
</span><span class='line'><span class="cp">#    N  #        search backward for the identifier under the cursor</span>
</span><span class='line'><span class="n">gstar</span>  <span class="n">N</span>  <span class="n">g</span><span class="o">*</span>      <span class="n">like</span> <span class="s">&quot;*&quot;</span><span class="p">,</span> <span class="n">but</span> <span class="n">also</span> <span class="n">find</span> <span class="n">partial</span> <span class="n">matches</span>
</span><span class='line'><span class="n">g</span><span class="err">#</span>    <span class="n">N</span>  <span class="n">g</span><span class="err">#</span>        <span class="n">like</span> <span class="s">&quot;#&quot;</span><span class="p">,</span> <span class="n">but</span> <span class="n">also</span> <span class="n">find</span> <span class="n">partial</span> <span class="n">matches</span>
</span><span class='line'><span class="n">gd</span>    <span class="n">gd</span>        <span class="k">goto</span> <span class="n">local</span> <span class="n">declaration</span> <span class="n">of</span> <span class="n">identifier</span> <span class="n">under</span> <span class="n">the</span> <span class="n">cursor</span>
</span><span class='line'><span class="n">gD</span>    <span class="n">gD</span>        <span class="k">goto</span> <span class="n">global</span> <span class="n">declaration</span> <span class="n">of</span> <span class="n">identifier</span> <span class="n">under</span> <span class="n">the</span> <span class="n">cursor</span>
</span><span class='line'>
</span><span class='line'><span class="n">pattern</span>        <span class="n">Special</span> <span class="n">characters</span> <span class="n">in</span> <span class="n">search</span> <span class="n">patterns</span>
</span><span class='line'>
</span><span class='line'>          <span class="n">meaning</span>            <span class="n">magic</span>   <span class="n">nomagic</span> <span class="o">~</span>
</span><span class='line'>      <span class="n">matches</span> <span class="n">any</span> <span class="n">single</span> <span class="n">character</span>    <span class="p">.</span>    <span class="err">\</span><span class="p">.</span>
</span><span class='line'>             <span class="n">matches</span> <span class="n">start</span> <span class="n">of</span> <span class="n">line</span>    <span class="o">^</span>    <span class="o">^</span>
</span><span class='line'>                 <span class="n">matches</span> <span class="o">&lt;</span><span class="n">EOL</span><span class="o">&gt;</span>  <span class="err">$</span>  <span class="err">$</span>
</span><span class='line'>             <span class="n">matches</span> <span class="n">start</span> <span class="n">of</span> <span class="n">word</span>    <span class="err">\</span><span class="o">&lt;</span>   <span class="err">\</span><span class="o">&lt;</span>
</span><span class='line'>           <span class="n">matches</span> <span class="n">end</span> <span class="n">of</span> <span class="n">word</span>    <span class="err">\</span><span class="o">&gt;</span>   <span class="err">\</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="n">matches</span> <span class="n">a</span> <span class="n">single</span> <span class="kt">char</span> <span class="n">from</span> <span class="n">the</span> <span class="n">range</span>  <span class="p">[</span><span class="n">a</span><span class="o">-</span><span class="n">z</span><span class="p">]</span>    <span class="err">\</span><span class="p">[</span><span class="n">a</span><span class="o">-</span><span class="n">z</span><span class="p">]</span>
</span><span class='line'>      <span class="n">matches</span> <span class="n">a</span> <span class="n">single</span> <span class="kt">char</span> <span class="n">not</span> <span class="n">in</span> <span class="n">the</span> <span class="n">range</span> <span class="p">[</span><span class="o">^</span><span class="n">a</span><span class="o">-</span><span class="n">z</span><span class="p">]</span>    <span class="err">\</span><span class="p">[</span><span class="o">^</span><span class="n">a</span><span class="o">-</span><span class="n">z</span><span class="p">]</span>
</span><span class='line'>        <span class="n">matches</span> <span class="n">an</span> <span class="n">identifier</span> <span class="kt">char</span>   <span class="err">\</span><span class="n">i</span>  <span class="err">\</span><span class="n">i</span>
</span><span class='line'>         <span class="n">idem</span> <span class="n">but</span> <span class="n">excluding</span> <span class="n">digits</span>    <span class="err">\</span><span class="n">I</span>  <span class="err">\</span><span class="n">I</span>
</span><span class='line'>       <span class="n">matches</span> <span class="n">a</span> <span class="n">keyword</span> <span class="n">character</span>    <span class="err">\</span><span class="n">k</span>  <span class="err">\</span><span class="n">k</span>
</span><span class='line'>         <span class="n">idem</span> <span class="n">but</span> <span class="n">excluding</span> <span class="n">digits</span>    <span class="err">\</span><span class="n">K</span>  <span class="err">\</span><span class="n">K</span>
</span><span class='line'>         <span class="n">matches</span> <span class="n">a</span> <span class="n">file</span> <span class="n">name</span> <span class="n">character</span> <span class="err">\</span><span class="n">f</span>  <span class="err">\</span><span class="n">f</span>
</span><span class='line'>         <span class="n">idem</span> <span class="n">but</span> <span class="n">excluding</span> <span class="n">digits</span>    <span class="err">\</span><span class="n">F</span>  <span class="err">\</span><span class="n">F</span>
</span><span class='line'>         <span class="n">matches</span> <span class="n">a</span> <span class="n">printable</span> <span class="n">character</span>    <span class="err">\</span><span class="n">p</span>  <span class="err">\</span><span class="n">p</span>
</span><span class='line'>         <span class="n">idem</span> <span class="n">but</span> <span class="n">excluding</span> <span class="n">digits</span>    <span class="err">\</span><span class="n">P</span>  <span class="err">\</span><span class="n">P</span>
</span><span class='line'>       <span class="n">matches</span> <span class="n">a</span> <span class="n">white</span> <span class="n">space</span> <span class="n">character</span> <span class="err">\</span><span class="n">s</span>  <span class="err">\</span><span class="n">s</span>
</span><span class='line'>   <span class="n">matches</span> <span class="n">a</span> <span class="n">non</span><span class="o">-</span><span class="n">white</span> <span class="n">space</span> <span class="n">character</span>   <span class="err">\</span><span class="n">S</span>  <span class="err">\</span><span class="n">S</span>
</span><span class='line'>
</span><span class='line'>                 <span class="n">matches</span> <span class="o">&lt;</span><span class="n">Esc</span><span class="o">&gt;</span>  <span class="err">\</span><span class="n">e</span>  <span class="err">\</span><span class="n">e</span>
</span><span class='line'>                 <span class="n">matches</span> <span class="o">&lt;</span><span class="n">Tab</span><span class="o">&gt;</span>  <span class="err">\</span><span class="n">t</span>  <span class="err">\</span><span class="n">t</span>
</span><span class='line'>              <span class="n">matches</span> <span class="o">&lt;</span><span class="n">CR</span><span class="o">&gt;</span>  <span class="err">\</span><span class="n">r</span>  <span class="err">\</span><span class="n">r</span>
</span><span class='line'>              <span class="n">matches</span> <span class="o">&lt;</span><span class="n">BS</span><span class="o">&gt;</span>  <span class="err">\</span><span class="n">b</span>  <span class="err">\</span><span class="n">b</span>
</span><span class='line'>
</span><span class='line'>     <span class="n">matches</span> <span class="mi">0</span> <span class="n">or</span> <span class="n">more</span> <span class="n">of</span> <span class="n">the</span> <span class="n">preceding</span> <span class="n">atom</span> <span class="o">*</span>    <span class="err">\</span><span class="o">*</span>
</span><span class='line'>     <span class="n">matches</span> <span class="mi">1</span> <span class="n">or</span> <span class="n">more</span> <span class="n">of</span> <span class="n">the</span> <span class="n">preceding</span> <span class="n">atom</span> <span class="err">\</span><span class="o">+</span>  <span class="err">\</span><span class="o">+</span>
</span><span class='line'>  <span class="n">matches</span> <span class="mi">0</span> <span class="n">or</span> <span class="mi">1</span> <span class="n">of</span> <span class="n">the</span> <span class="n">preceding</span> <span class="n">atom</span>  <span class="err">\</span><span class="o">=</span>  <span class="err">\</span><span class="o">=</span>
</span><span class='line'>  <span class="n">matches</span> <span class="mi">2</span> <span class="n">to</span> <span class="mi">5</span> <span class="n">of</span> <span class="n">the</span> <span class="n">preceding</span> <span class="n">atom</span>  <span class="err">\</span><span class="p">{</span><span class="mi">2</span><span class="p">,</span><span class="mi">5</span><span class="p">}</span>  <span class="err">\</span><span class="p">{</span><span class="mi">2</span><span class="p">,</span><span class="mi">5</span><span class="p">}</span>
</span><span class='line'>        <span class="n">separates</span> <span class="n">two</span> <span class="n">alternatives</span>   <span class="err">\</span>  \
</span><span class='line'>      <span class="n">group</span> <span class="n">a</span> <span class="n">pattern</span> <span class="n">into</span> <span class="n">an</span> <span class="n">atom</span>  <span class="err">\</span><span class="p">(</span><span class="err">\</span><span class="p">)</span>    <span class="err">\</span><span class="p">(</span><span class="err">\</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">search</span><span class="o">-</span><span class="n">offset</span>        <span class="n">Offsets</span> <span class="n">allowed</span> <span class="n">after</span> <span class="n">search</span> <span class="n">command</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="n">num</span><span class="p">]</span>    <span class="p">[</span><span class="n">num</span><span class="p">]</span> <span class="n">lines</span> <span class="n">downwards</span><span class="p">,</span> <span class="n">in</span> <span class="n">column</span> <span class="mi">1</span>
</span><span class='line'>    <span class="o">+</span><span class="p">[</span><span class="n">num</span><span class="p">]</span>    <span class="p">[</span><span class="n">num</span><span class="p">]</span> <span class="n">lines</span> <span class="n">downwards</span><span class="p">,</span> <span class="n">in</span> <span class="n">column</span> <span class="mi">1</span>
</span><span class='line'>    <span class="o">-</span><span class="p">[</span><span class="n">num</span><span class="p">]</span>    <span class="p">[</span><span class="n">num</span><span class="p">]</span> <span class="n">lines</span> <span class="n">upwards</span><span class="p">,</span> <span class="n">in</span> <span class="n">column</span> <span class="mi">1</span>
</span><span class='line'>    <span class="n">e</span><span class="p">[</span><span class="o">+</span><span class="n">num</span><span class="p">]</span>    <span class="p">[</span><span class="n">num</span><span class="p">]</span> <span class="n">characters</span> <span class="n">to</span> <span class="n">the</span> <span class="n">right</span> <span class="n">of</span> <span class="n">the</span> <span class="n">end</span> <span class="n">of</span> <span class="n">the</span> <span class="n">match</span>
</span><span class='line'>    <span class="n">e</span><span class="p">[</span><span class="o">-</span><span class="n">num</span><span class="p">]</span>    <span class="p">[</span><span class="n">num</span><span class="p">]</span> <span class="n">characters</span> <span class="n">to</span> <span class="n">the</span> <span class="n">left</span> <span class="n">of</span> <span class="n">the</span> <span class="n">end</span> <span class="n">of</span> <span class="n">the</span> <span class="n">match</span>
</span><span class='line'>    <span class="n">s</span><span class="p">[</span><span class="o">+</span><span class="n">num</span><span class="p">]</span>    <span class="p">[</span><span class="n">num</span><span class="p">]</span> <span class="n">characters</span> <span class="n">to</span> <span class="n">the</span> <span class="n">right</span> <span class="n">of</span> <span class="n">the</span> <span class="n">start</span> <span class="n">of</span> <span class="n">the</span> <span class="n">match</span>
</span><span class='line'>    <span class="n">s</span><span class="p">[</span><span class="o">-</span><span class="n">num</span><span class="p">]</span>    <span class="p">[</span><span class="n">num</span><span class="p">]</span> <span class="n">characters</span> <span class="n">to</span> <span class="n">the</span> <span class="n">left</span> <span class="n">of</span> <span class="n">the</span> <span class="n">start</span> <span class="n">of</span> <span class="n">the</span> <span class="n">match</span>
</span><span class='line'>    <span class="n">b</span><span class="p">[</span><span class="o">+</span><span class="n">num</span><span class="p">]</span>    <span class="p">[</span><span class="n">num</span><span class="p">]</span> <span class="n">identical</span> <span class="n">to</span> <span class="n">s</span><span class="p">[</span><span class="o">+</span><span class="n">num</span><span class="p">]</span> <span class="n">above</span> <span class="p">(</span><span class="nl">mnemonic</span><span class="p">:</span> <span class="n">begin</span><span class="p">)</span>
</span><span class='line'>    <span class="n">b</span><span class="p">[</span><span class="o">-</span><span class="n">num</span><span class="p">]</span>    <span class="p">[</span><span class="n">num</span><span class="p">]</span> <span class="n">identical</span> <span class="n">to</span> <span class="n">s</span><span class="p">[</span><span class="o">-</span><span class="n">num</span><span class="p">]</span> <span class="n">above</span> <span class="p">(</span><span class="nl">mnemonic</span><span class="p">:</span> <span class="n">begin</span><span class="p">)</span>
</span><span class='line'>    <span class="p">;{</span><span class="n">search</span><span class="o">-</span><span class="n">command</span><span class="p">}</span>  <span class="n">execute</span> <span class="p">{</span><span class="n">search</span><span class="o">-</span><span class="n">command</span><span class="p">}</span> <span class="n">next</span>
</span><span class='line'><span class="o">------------------------------------------------------------------------------</span>
</span><span class='line'><span class="o">*</span><span class="n">Q_ma</span><span class="o">*</span>       <span class="n">Marks</span> <span class="n">and</span> <span class="n">motions</span>
</span><span class='line'>
</span><span class='line'><span class="n">m</span>        <span class="n">m</span><span class="p">{</span><span class="n">a</span><span class="o">-</span><span class="n">zA</span><span class="o">-</span><span class="n">Z</span><span class="p">}</span> <span class="n">mark</span> <span class="n">current</span> <span class="n">position</span> <span class="n">with</span> <span class="n">mark</span> <span class="p">{</span><span class="n">a</span><span class="o">-</span><span class="n">zA</span><span class="o">-</span><span class="n">Z</span><span class="p">}</span>
</span><span class='line'><span class="err">`</span><span class="n">a</span>       <span class="err">`</span><span class="p">{</span><span class="n">a</span><span class="o">-</span><span class="n">z</span><span class="p">}</span>   <span class="n">go</span> <span class="n">to</span> <span class="n">mark</span> <span class="p">{</span><span class="n">a</span><span class="o">-</span><span class="n">z</span><span class="p">}</span> <span class="n">within</span> <span class="n">current</span> <span class="n">file</span>
</span><span class='line'><span class="err">`</span><span class="n">A</span>       <span class="err">`</span><span class="p">{</span><span class="n">A</span><span class="o">-</span><span class="n">Z</span><span class="p">}</span>   <span class="n">go</span> <span class="n">to</span> <span class="n">mark</span> <span class="p">{</span><span class="n">A</span><span class="o">-</span><span class="n">Z</span><span class="p">}</span> <span class="n">in</span> <span class="n">any</span> <span class="n">file</span>
</span><span class='line'><span class="err">`</span><span class="mi">0</span>       <span class="err">`</span><span class="p">{</span><span class="mi">0</span><span class="o">-</span><span class="mi">9</span><span class="p">}</span>    <span class="n">go</span> <span class="n">to</span> <span class="n">the</span> <span class="n">position</span> <span class="n">where</span> <span class="n">Vim</span> <span class="n">was</span> <span class="n">previously</span> <span class="n">exited</span>
</span><span class='line'><span class="err">``</span>       <span class="err">``</span>     <span class="n">go</span> <span class="n">to</span> <span class="n">the</span> <span class="n">position</span> <span class="n">before</span> <span class="n">the</span> <span class="n">last</span> <span class="n">jump</span>
</span><span class='line'><span class="err">`</span><span class="n">quote</span>   <span class="err">`</span><span class="s">&quot;     go to the position when last editing this file</span>
</span><span class='line'><span class="err">`</span><span class="p">[</span>       <span class="err">`</span><span class="p">[</span>       <span class="n">go</span> <span class="n">to</span> <span class="n">the</span> <span class="n">start</span> <span class="n">of</span> <span class="n">the</span> <span class="n">previously</span> <span class="n">operated</span> <span class="n">or</span> <span class="n">put</span> <span class="n">text</span>
</span><span class='line'><span class="err">`</span><span class="p">]</span>       <span class="err">`</span><span class="p">]</span>       <span class="n">go</span> <span class="n">to</span> <span class="n">the</span> <span class="n">end</span> <span class="n">of</span> <span class="n">the</span> <span class="n">previously</span> <span class="n">operated</span> <span class="n">or</span> <span class="n">put</span> <span class="n">text</span>
</span><span class='line'><span class="err">`</span><span class="o">&lt;</span>       <span class="err">`</span><span class="o">&lt;</span>     <span class="n">go</span> <span class="n">to</span> <span class="n">the</span> <span class="n">start</span> <span class="n">of</span> <span class="n">the</span> <span class="p">(</span><span class="n">previous</span><span class="p">)</span> <span class="n">Visual</span> <span class="n">area</span>
</span><span class='line'><span class="err">`</span><span class="o">&gt;</span>       <span class="err">`</span><span class="o">&gt;</span>     <span class="n">go</span> <span class="n">to</span> <span class="n">the</span> <span class="n">end</span> <span class="n">of</span> <span class="n">the</span> <span class="p">(</span><span class="n">previous</span><span class="p">)</span> <span class="n">Visual</span> <span class="n">area</span>
</span><span class='line'><span class="err">`</span><span class="p">.</span>       <span class="err">`</span><span class="p">.</span>       <span class="n">go</span> <span class="n">to</span> <span class="n">the</span> <span class="n">position</span> <span class="n">of</span> <span class="n">the</span> <span class="n">last</span> <span class="n">change</span> <span class="n">in</span> <span class="k">this</span> <span class="n">file</span>
</span><span class='line'><span class="err">&#39;</span>        <span class="err">&#39;</span><span class="p">{</span><span class="n">a</span><span class="o">-</span><span class="n">zA</span><span class="o">-</span><span class="n">Z0</span><span class="o">-</span><span class="mi">9</span><span class="p">[]</span><span class="err">&#39;</span><span class="s">&quot;&lt;&gt;.}</span>
</span><span class='line'>          <span class="n">same</span> <span class="n">as</span> <span class="err">`</span><span class="p">,</span> <span class="n">but</span> <span class="n">on</span> <span class="n">the</span> <span class="n">first</span> <span class="n">non</span><span class="o">-</span><span class="n">blank</span> <span class="n">in</span> <span class="n">the</span> <span class="nl">line</span>
</span><span class='line'><span class="p">:</span><span class="nl">marks</span>  <span class="p">:</span><span class="n">marks</span>   <span class="n">print</span> <span class="n">the</span> <span class="n">active</span> <span class="n">marks</span>
</span><span class='line'><span class="n">CTRL</span><span class="o">-</span><span class="n">O</span>  <span class="n">N</span>  <span class="n">CTRL</span><span class="o">-</span><span class="n">O</span>    <span class="n">go</span> <span class="n">to</span> <span class="n">Nth</span> <span class="n">older</span> <span class="n">position</span> <span class="n">in</span> <span class="n">jump</span> <span class="n">list</span>
</span><span class='line'><span class="n">CTRL</span><span class="o">-</span><span class="n">I</span>  <span class="n">N</span>  <span class="n">CTRL</span><span class="o">-</span><span class="n">I</span>    <span class="n">go</span> <span class="n">to</span> <span class="n">Nth</span> <span class="n">newer</span> <span class="n">position</span> <span class="n">in</span> <span class="n">jump</span> <span class="nl">list</span>
</span><span class='line'><span class="p">:</span><span class="nl">ju</span>     <span class="p">:</span><span class="n">ju</span><span class="p">[</span><span class="n">mps</span><span class="p">]</span>    <span class="n">print</span> <span class="n">the</span> <span class="n">jump</span> <span class="n">list</span>
</span><span class='line'><span class="o">------------------------------------------------------------------------------</span>
</span><span class='line'><span class="o">*</span><span class="n">Q_vm</span><span class="o">*</span>       <span class="n">Various</span> <span class="n">motions</span>
</span><span class='line'>
</span><span class='line'><span class="o">%</span>     <span class="o">%</span>     <span class="n">find</span> <span class="n">the</span> <span class="n">next</span> <span class="n">brace</span><span class="p">,</span> <span class="n">bracket</span><span class="p">,</span> <span class="n">comment</span><span class="p">,</span> <span class="n">or</span> <span class="s">&quot;#if&quot;</span><span class="o">/</span>
</span><span class='line'>             <span class="s">&quot;#else&quot;</span><span class="o">/</span><span class="s">&quot;#endif&quot;</span> <span class="n">in</span> <span class="k">this</span> <span class="n">line</span> <span class="n">and</span> <span class="n">go</span> <span class="n">to</span> <span class="n">its</span> <span class="n">match</span>
</span><span class='line'><span class="n">H</span>  <span class="n">N</span>  <span class="n">H</span>      <span class="n">go</span> <span class="n">to</span> <span class="n">the</span> <span class="n">Nth</span> <span class="n">line</span> <span class="n">in</span> <span class="n">the</span> <span class="n">window</span><span class="p">,</span> <span class="n">on</span> <span class="n">the</span> <span class="n">first</span>
</span><span class='line'>             <span class="n">non</span><span class="o">-</span><span class="n">blank</span>
</span><span class='line'><span class="n">M</span>     <span class="n">M</span>     <span class="n">go</span> <span class="n">to</span> <span class="n">the</span> <span class="n">middle</span> <span class="n">line</span> <span class="n">in</span> <span class="n">the</span> <span class="n">window</span><span class="p">,</span> <span class="n">on</span> <span class="n">the</span> <span class="n">first</span>
</span><span class='line'>             <span class="n">non</span><span class="o">-</span><span class="n">blank</span>
</span><span class='line'><span class="n">L</span>  <span class="n">N</span>  <span class="n">L</span>      <span class="n">go</span> <span class="n">to</span> <span class="n">the</span> <span class="n">Nth</span> <span class="n">line</span> <span class="n">from</span> <span class="n">the</span> <span class="n">bottom</span><span class="p">,</span> <span class="n">on</span> <span class="n">the</span> <span class="n">first</span>
</span><span class='line'>             <span class="n">non</span><span class="o">-</span><span class="n">blank</span>
</span><span class='line'>
</span><span class='line'><span class="n">go</span> <span class="n">N</span>  <span class="n">go</span>         <span class="n">go</span> <span class="n">to</span> <span class="n">Nth</span> <span class="n">byte</span> <span class="n">in</span> <span class="n">the</span> <span class="nl">buffer</span>
</span><span class='line'><span class="p">:</span><span class="nl">go</span>    <span class="p">:[</span><span class="n">range</span><span class="p">]</span><span class="n">go</span><span class="p">[</span><span class="n">to</span><span class="p">]</span> <span class="p">[</span><span class="n">off</span><span class="p">]</span>  <span class="n">go</span> <span class="n">to</span> <span class="p">[</span><span class="n">off</span><span class="p">]</span> <span class="n">byte</span> <span class="n">in</span> <span class="n">the</span> <span class="n">buffer</span>
</span><span class='line'><span class="o">------------------------------------------------------------------------------</span>
</span><span class='line'><span class="o">*</span><span class="n">Q_ta</span><span class="o">*</span>       <span class="n">Using</span> <span class="nl">tags</span>
</span><span class='line'>
</span><span class='line'><span class="p">:</span><span class="nl">ta</span>      <span class="p">:</span><span class="n">ta</span><span class="p">[</span><span class="n">g</span><span class="p">][</span><span class="o">!</span><span class="p">]</span> <span class="p">{</span><span class="n">tag</span><span class="p">}</span> <span class="n">jump</span> <span class="n">to</span> <span class="n">tag</span> <span class="p">{</span><span class="n">tag</span><span class="p">}</span>
</span><span class='line'><span class="o">:</span><span class="nl">ta</span>      <span class="p">:[</span><span class="n">count</span><span class="p">]</span><span class="n">ta</span><span class="p">[</span><span class="n">g</span><span class="p">][</span><span class="o">!</span><span class="p">]</span>   <span class="n">jump</span> <span class="n">to</span> <span class="p">[</span><span class="n">count</span><span class="p">]</span><span class="err">&#39;</span><span class="n">th</span> <span class="n">newer</span> <span class="n">tag</span> <span class="n">in</span> <span class="n">tag</span> <span class="n">list</span>
</span><span class='line'><span class="n">CTRL</span><span class="o">-</span><span class="p">]</span>      <span class="n">CTRL</span><span class="o">-</span><span class="p">]</span>      <span class="n">jump</span> <span class="n">to</span> <span class="n">the</span> <span class="n">tag</span> <span class="n">under</span> <span class="n">cursor</span><span class="p">,</span> <span class="n">unless</span> <span class="n">changes</span>
</span><span class='line'>                 <span class="n">have</span> <span class="n">been</span> <span class="nl">made</span>
</span><span class='line'><span class="p">:</span><span class="nl">ts</span>      <span class="p">:</span><span class="n">ts</span><span class="p">[</span><span class="n">elect</span><span class="p">][</span><span class="o">!</span><span class="p">]</span> <span class="p">[</span><span class="n">tag</span><span class="p">]</span> <span class="n">list</span> <span class="n">matching</span> <span class="n">tags</span> <span class="n">and</span> <span class="n">select</span> <span class="n">one</span> <span class="n">to</span> <span class="n">jump</span> <span class="nl">to</span>
</span><span class='line'><span class="p">:</span><span class="nl">tjump</span>   <span class="p">:</span><span class="n">tj</span><span class="p">[</span><span class="n">ump</span><span class="p">][</span><span class="o">!</span><span class="p">]</span> <span class="p">[</span><span class="n">tag</span><span class="p">]</span>   <span class="n">jump</span> <span class="n">to</span> <span class="n">tag</span> <span class="p">[</span><span class="n">tag</span><span class="p">]</span> <span class="n">or</span> <span class="n">select</span> <span class="n">from</span> <span class="n">list</span> <span class="n">when</span>
</span><span class='line'>                 <span class="n">there</span> <span class="n">are</span> <span class="n">multiple</span> <span class="nl">matches</span>
</span><span class='line'><span class="p">:</span><span class="nl">ltag</span>    <span class="p">:</span><span class="n">lt</span><span class="p">[</span><span class="n">ag</span><span class="p">][</span><span class="o">!</span><span class="p">]</span> <span class="p">[</span><span class="n">tag</span><span class="p">]</span>    <span class="n">jump</span> <span class="n">to</span> <span class="n">tag</span> <span class="p">[</span><span class="n">tag</span><span class="p">]</span> <span class="n">and</span> <span class="n">add</span> <span class="n">matching</span> <span class="n">tags</span> <span class="n">to</span> <span class="n">the</span>
</span><span class='line'>                 <span class="n">location</span> <span class="nl">list</span>
</span><span class='line'>
</span><span class='line'><span class="p">:</span><span class="nl">tags</span>    <span class="p">:</span><span class="n">tags</span>       <span class="n">print</span> <span class="n">tag</span> <span class="n">list</span>
</span><span class='line'><span class="n">CTRL</span><span class="o">-</span><span class="n">T</span>   <span class="n">N</span>  <span class="n">CTRL</span><span class="o">-</span><span class="n">T</span>       <span class="n">jump</span> <span class="n">back</span> <span class="n">from</span> <span class="n">Nth</span> <span class="n">older</span> <span class="n">tag</span> <span class="n">in</span> <span class="n">tag</span> <span class="nl">list</span>
</span><span class='line'><span class="p">:</span><span class="nl">po</span>      <span class="p">:[</span><span class="n">count</span><span class="p">]</span><span class="n">po</span><span class="p">[</span><span class="n">p</span><span class="p">][</span><span class="o">!</span><span class="p">]</span>   <span class="n">jump</span> <span class="n">back</span> <span class="n">from</span> <span class="p">[</span><span class="n">count</span><span class="p">]</span><span class="err">&#39;</span><span class="n">th</span> <span class="n">older</span> <span class="n">tag</span> <span class="n">in</span> <span class="n">tag</span> <span class="nl">list</span>
</span><span class='line'><span class="p">:</span><span class="nl">tnext</span>   <span class="p">:[</span><span class="n">count</span><span class="p">]</span><span class="n">tn</span><span class="p">[</span><span class="n">ext</span><span class="p">][</span><span class="o">!</span><span class="p">]</span> <span class="n">jump</span> <span class="n">to</span> <span class="p">[</span><span class="n">count</span><span class="p">]</span><span class="err">&#39;</span><span class="n">th</span> <span class="n">next</span> <span class="n">matching</span> <span class="nl">tag</span>
</span><span class='line'><span class="p">:</span><span class="nl">tp</span>      <span class="p">:[</span><span class="n">count</span><span class="p">]</span><span class="n">tp</span><span class="p">[</span><span class="n">revious</span><span class="p">][</span><span class="o">!</span><span class="p">]</span> <span class="n">jump</span> <span class="n">to</span> <span class="p">[</span><span class="n">count</span><span class="p">]</span><span class="err">&#39;</span><span class="n">th</span> <span class="n">previous</span> <span class="n">matching</span> <span class="nl">tag</span>
</span><span class='line'><span class="p">:</span><span class="nl">tr</span>      <span class="p">:[</span><span class="n">count</span><span class="p">]</span><span class="n">tr</span><span class="p">[</span><span class="n">ewind</span><span class="p">][</span><span class="o">!</span><span class="p">]</span>   <span class="n">jump</span> <span class="n">to</span> <span class="p">[</span><span class="n">count</span><span class="p">]</span><span class="err">&#39;</span><span class="n">th</span> <span class="n">matching</span> <span class="nl">tag</span>
</span><span class='line'><span class="p">:</span><span class="nl">tl</span>      <span class="p">:</span><span class="n">tl</span><span class="p">[</span><span class="n">ast</span><span class="p">][</span><span class="o">!</span><span class="p">]</span>      <span class="n">jump</span> <span class="n">to</span> <span class="n">last</span> <span class="n">matching</span> <span class="nl">tag</span>
</span><span class='line'>
</span><span class='line'><span class="p">:</span><span class="nl">ptag</span>    <span class="p">:</span><span class="n">pt</span><span class="p">[</span><span class="n">ag</span><span class="p">]</span> <span class="p">{</span><span class="n">tag</span><span class="p">}</span> <span class="n">open</span> <span class="n">a</span> <span class="n">preview</span> <span class="n">window</span> <span class="n">to</span> <span class="n">show</span> <span class="n">tag</span> <span class="p">{</span><span class="n">tag</span><span class="p">}</span>
</span><span class='line'><span class="n">CTRL</span><span class="o">-</span><span class="n">W_</span><span class="p">}</span>    <span class="n">CTRL</span><span class="o">-</span><span class="n">W</span> <span class="p">}</span>      <span class="n">like</span> <span class="n">CTRL</span><span class="o">-</span><span class="p">]</span> <span class="n">but</span> <span class="n">show</span> <span class="n">tag</span> <span class="n">in</span> <span class="n">preview</span> <span class="nl">window</span>
</span><span class='line'><span class="p">:</span><span class="nl">pts</span>     <span class="p">:</span><span class="n">pts</span><span class="p">[</span><span class="n">elect</span><span class="p">]</span>        <span class="n">like</span> <span class="s">&quot;:tselect&quot;</span> <span class="n">but</span> <span class="n">show</span> <span class="n">tag</span> <span class="n">in</span> <span class="n">preview</span> <span class="nl">window</span>
</span><span class='line'><span class="p">:</span><span class="nl">ptjump</span>  <span class="p">:</span><span class="n">ptj</span><span class="p">[</span><span class="n">ump</span><span class="p">]</span>      <span class="n">like</span> <span class="s">&quot;:tjump&quot;</span> <span class="n">but</span> <span class="n">show</span> <span class="n">tag</span> <span class="n">in</span> <span class="n">preview</span> <span class="nl">window</span>
</span><span class='line'><span class="p">:</span><span class="nl">pclose</span>  <span class="p">:</span><span class="n">pc</span><span class="p">[</span><span class="n">lose</span><span class="p">]</span>      <span class="n">close</span> <span class="n">tag</span> <span class="n">preview</span> <span class="n">window</span>
</span><span class='line'><span class="n">CTRL</span><span class="o">-</span><span class="n">W_z</span>    <span class="n">CTRL</span><span class="o">-</span><span class="n">W</span> <span class="n">z</span>     <span class="n">close</span> <span class="n">tag</span> <span class="n">preview</span> <span class="n">window</span>
</span><span class='line'><span class="o">------------------------------------------------------------------------------</span>
</span><span class='line'><span class="o">*</span><span class="n">Q_sc</span><span class="o">*</span>       <span class="n">Scrolling</span>
</span><span class='line'>
</span><span class='line'><span class="n">CTRL</span><span class="o">-</span><span class="n">E</span>   <span class="n">N</span>  <span class="n">CTRL</span><span class="o">-</span><span class="n">E</span>   <span class="n">window</span> <span class="n">N</span> <span class="n">lines</span> <span class="n">downwards</span> <span class="p">(</span><span class="k">default</span><span class="o">:</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="n">CTRL</span><span class="o">-</span><span class="n">D</span>   <span class="n">N</span>  <span class="n">CTRL</span><span class="o">-</span><span class="n">D</span>   <span class="n">window</span> <span class="n">N</span> <span class="n">lines</span> <span class="n">Downwards</span> <span class="p">(</span><span class="k">default</span><span class="o">:</span> <span class="mi">1</span><span class="o">/</span><span class="mi">2</span> <span class="n">window</span><span class="p">)</span>
</span><span class='line'><span class="n">CTRL</span><span class="o">-</span><span class="n">F</span>   <span class="n">N</span>  <span class="n">CTRL</span><span class="o">-</span><span class="n">F</span>   <span class="n">window</span> <span class="n">N</span> <span class="n">pages</span> <span class="n">Forwards</span> <span class="p">(</span><span class="n">downwards</span><span class="p">)</span>
</span><span class='line'><span class="n">CTRL</span><span class="o">-</span><span class="n">Y</span>   <span class="n">N</span>  <span class="n">CTRL</span><span class="o">-</span><span class="n">Y</span>   <span class="n">window</span> <span class="n">N</span> <span class="n">lines</span> <span class="n">upwards</span> <span class="p">(</span><span class="k">default</span><span class="o">:</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="n">CTRL</span><span class="o">-</span><span class="n">U</span>   <span class="n">N</span>  <span class="n">CTRL</span><span class="o">-</span><span class="n">U</span>   <span class="n">window</span> <span class="n">N</span> <span class="n">lines</span> <span class="n">Upwards</span> <span class="p">(</span><span class="k">default</span><span class="o">:</span> <span class="mi">1</span><span class="o">/</span><span class="mi">2</span> <span class="n">window</span><span class="p">)</span>
</span><span class='line'><span class="n">CTRL</span><span class="o">-</span><span class="n">B</span>   <span class="n">N</span>  <span class="n">CTRL</span><span class="o">-</span><span class="n">B</span>   <span class="n">window</span> <span class="n">N</span> <span class="n">pages</span> <span class="n">Backwards</span> <span class="p">(</span><span class="n">upwards</span><span class="p">)</span>
</span><span class='line'><span class="n">z</span><span class="o">&lt;</span><span class="n">CR</span><span class="o">&gt;</span>          <span class="n">z</span><span class="o">&lt;</span><span class="n">CR</span><span class="o">&gt;</span> <span class="n">or</span> <span class="n">zt</span>  <span class="n">redraw</span><span class="p">,</span> <span class="n">current</span> <span class="n">line</span> <span class="n">at</span> <span class="n">top</span> <span class="n">of</span> <span class="n">window</span>
</span><span class='line'><span class="n">z</span><span class="p">.</span>         <span class="n">z</span><span class="p">.</span>  <span class="n">or</span> <span class="n">zz</span>    <span class="n">redraw</span><span class="p">,</span> <span class="n">current</span> <span class="n">line</span> <span class="n">at</span> <span class="n">center</span> <span class="n">of</span> <span class="n">window</span>
</span><span class='line'><span class="n">z</span><span class="o">-</span>         <span class="n">z</span><span class="o">-</span>  <span class="n">or</span> <span class="n">zb</span>    <span class="n">redraw</span><span class="p">,</span> <span class="n">current</span> <span class="n">line</span> <span class="n">at</span> <span class="n">bottom</span> <span class="n">of</span> <span class="n">window</span>
</span><span class='line'>
</span><span class='line'><span class="n">These</span> <span class="n">only</span> <span class="n">work</span> <span class="n">when</span> <span class="err">&#39;</span><span class="n">wrap</span><span class="err">&#39;</span> <span class="n">is</span> <span class="nl">off</span><span class="p">:</span>
</span><span class='line'><span class="n">zh</span>     <span class="n">N</span>  <span class="n">zh</span>     <span class="n">scroll</span> <span class="n">screen</span> <span class="n">N</span> <span class="n">characters</span> <span class="n">to</span> <span class="n">the</span> <span class="n">right</span>
</span><span class='line'><span class="n">zl</span>     <span class="n">N</span>  <span class="n">zl</span>     <span class="n">scroll</span> <span class="n">screen</span> <span class="n">N</span> <span class="n">characters</span> <span class="n">to</span> <span class="n">the</span> <span class="n">left</span>
</span><span class='line'><span class="n">zH</span>     <span class="n">N</span>  <span class="n">zH</span>     <span class="n">scroll</span> <span class="n">screen</span> <span class="n">half</span> <span class="n">a</span> <span class="n">screenwidth</span> <span class="n">to</span> <span class="n">the</span> <span class="n">right</span>
</span><span class='line'><span class="n">zL</span>     <span class="n">N</span>  <span class="n">zL</span>     <span class="n">scroll</span> <span class="n">screen</span> <span class="n">half</span> <span class="n">a</span> <span class="n">screenwidth</span> <span class="n">to</span> <span class="n">the</span> <span class="n">left</span>
</span><span class='line'><span class="o">------------------------------------------------------------------------------</span>
</span><span class='line'><span class="o">*</span><span class="n">Q_in</span><span class="o">*</span>       <span class="n">Inserting</span> <span class="n">text</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span>  <span class="n">N</span>  <span class="n">a</span>  <span class="n">append</span> <span class="n">text</span> <span class="n">after</span> <span class="n">the</span> <span class="n">cursor</span> <span class="p">(</span><span class="n">N</span> <span class="n">times</span><span class="p">)</span>
</span><span class='line'><span class="n">A</span>  <span class="n">N</span>  <span class="n">A</span>  <span class="n">append</span> <span class="n">text</span> <span class="n">at</span> <span class="n">the</span> <span class="n">end</span> <span class="n">of</span> <span class="n">the</span> <span class="n">line</span> <span class="p">(</span><span class="n">N</span> <span class="n">times</span><span class="p">)</span>
</span><span class='line'><span class="n">i</span>  <span class="n">N</span>  <span class="n">i</span>  <span class="n">insert</span> <span class="n">text</span> <span class="n">before</span> <span class="n">the</span> <span class="n">cursor</span> <span class="p">(</span><span class="n">N</span> <span class="n">times</span><span class="p">)</span> <span class="p">(</span><span class="nl">also</span><span class="p">:</span> <span class="o">&lt;</span><span class="n">Insert</span><span class="o">&gt;</span><span class="p">)</span>
</span><span class='line'><span class="n">I</span>  <span class="n">N</span>  <span class="n">I</span>  <span class="n">insert</span> <span class="n">text</span> <span class="n">before</span> <span class="n">the</span> <span class="n">first</span> <span class="n">non</span><span class="o">-</span><span class="n">blank</span> <span class="n">in</span> <span class="n">the</span> <span class="n">line</span> <span class="p">(</span><span class="n">N</span> <span class="n">times</span><span class="p">)</span>
</span><span class='line'><span class="n">gI</span> <span class="n">N</span>  <span class="n">gI</span> <span class="n">insert</span> <span class="n">text</span> <span class="n">in</span> <span class="n">column</span> <span class="mi">1</span> <span class="p">(</span><span class="n">N</span> <span class="n">times</span><span class="p">)</span>
</span><span class='line'><span class="n">o</span>  <span class="n">N</span>  <span class="n">o</span>  <span class="n">open</span> <span class="n">a</span> <span class="k">new</span> <span class="n">line</span> <span class="n">below</span> <span class="n">the</span> <span class="n">current</span> <span class="n">line</span><span class="p">,</span> <span class="n">append</span> <span class="n">text</span> <span class="p">(</span><span class="n">N</span> <span class="n">times</span><span class="p">)</span>
</span><span class='line'><span class="n">O</span>  <span class="n">N</span>  <span class="n">O</span>  <span class="n">open</span> <span class="n">a</span> <span class="k">new</span> <span class="n">line</span> <span class="n">above</span> <span class="n">the</span> <span class="n">current</span> <span class="n">line</span><span class="p">,</span> <span class="n">append</span> <span class="n">text</span> <span class="p">(</span><span class="n">N</span> <span class="n">times</span><span class="p">)</span>
</span><span class='line'><span class="o">:</span><span class="nl">startinsert</span>  <span class="p">:</span><span class="n">star</span><span class="p">[</span><span class="n">tinsert</span><span class="p">][</span><span class="o">!</span><span class="p">]</span>  <span class="n">start</span> <span class="n">Insert</span> <span class="n">mode</span><span class="p">,</span> <span class="n">append</span> <span class="n">when</span> <span class="p">[</span><span class="o">!</span><span class="p">]</span> <span class="nl">used</span>
</span><span class='line'><span class="p">:</span><span class="nl">startreplace</span> <span class="p">:</span><span class="n">startr</span><span class="p">[</span><span class="n">eplace</span><span class="p">][</span><span class="o">!</span><span class="p">]</span>  <span class="n">start</span> <span class="n">Replace</span> <span class="n">mode</span><span class="p">,</span> <span class="n">at</span> <span class="n">EOL</span> <span class="n">when</span> <span class="p">[</span><span class="o">!</span><span class="p">]</span> <span class="n">used</span>
</span><span class='line'>
</span><span class='line'><span class="n">in</span> <span class="n">Visual</span> <span class="n">block</span> <span class="nl">mode</span><span class="p">:</span>
</span><span class='line'><span class="n">v_b_I</span>     <span class="n">I</span> <span class="n">insert</span> <span class="n">the</span> <span class="n">same</span> <span class="n">text</span> <span class="n">in</span> <span class="n">front</span> <span class="n">of</span> <span class="n">all</span> <span class="n">the</span> <span class="n">selected</span> <span class="n">lines</span>
</span><span class='line'><span class="n">v_b_A</span>     <span class="n">A</span> <span class="n">append</span> <span class="n">the</span> <span class="n">same</span> <span class="n">text</span> <span class="n">after</span> <span class="n">all</span> <span class="n">the</span> <span class="n">selected</span> <span class="n">lines</span>
</span><span class='line'><span class="o">------------------------------------------------------------------------------</span>
</span><span class='line'><span class="o">*</span><span class="n">Q_ai</span><span class="o">*</span>       <span class="n">Insert</span> <span class="n">mode</span> <span class="n">keys</span>
</span><span class='line'>
</span><span class='line'><span class="n">insert</span><span class="o">-</span><span class="n">index</span> <span class="n">alphabetical</span> <span class="n">index</span> <span class="n">of</span> <span class="n">Insert</span> <span class="n">mode</span> <span class="n">commands</span>
</span><span class='line'>
</span><span class='line'><span class="n">leaving</span> <span class="n">Insert</span> <span class="nl">mode</span><span class="p">:</span>
</span><span class='line'><span class="n">i_</span><span class="o">&lt;</span><span class="n">Esc</span><span class="o">&gt;</span> <span class="o">&lt;</span><span class="n">Esc</span><span class="o">&gt;</span>          <span class="n">end</span> <span class="n">Insert</span> <span class="n">mode</span><span class="p">,</span> <span class="n">back</span> <span class="n">to</span> <span class="n">Normal</span> <span class="n">mode</span>
</span><span class='line'><span class="n">i_CTRL</span><span class="o">-</span><span class="n">C</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">C</span>       <span class="n">like</span> <span class="o">&lt;</span><span class="n">Esc</span><span class="o">&gt;</span><span class="p">,</span> <span class="n">but</span> <span class="k">do</span> <span class="n">not</span> <span class="n">use</span> <span class="n">an</span> <span class="n">abbreviation</span>
</span><span class='line'><span class="n">i_CTRL</span><span class="o">-</span><span class="n">O</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">O</span> <span class="p">{</span><span class="n">command</span><span class="p">}</span>  <span class="n">execute</span> <span class="p">{</span><span class="n">command</span><span class="p">}</span> <span class="n">and</span> <span class="k">return</span> <span class="n">to</span> <span class="n">Insert</span> <span class="n">mode</span>
</span><span class='line'>
</span><span class='line'><span class="n">moving</span> <span class="nl">around</span><span class="p">:</span>
</span><span class='line'><span class="n">i_</span><span class="o">&lt;</span><span class="n">Up</span><span class="o">&gt;</span>  <span class="n">cursor</span> <span class="n">keys</span>     <span class="n">move</span> <span class="n">cursor</span> <span class="n">left</span><span class="o">/</span><span class="n">right</span><span class="o">/</span><span class="n">up</span><span class="o">/</span><span class="n">down</span>
</span><span class='line'><span class="n">i_</span><span class="o">&lt;</span><span class="n">S</span><span class="o">-</span><span class="n">Left</span><span class="o">&gt;</span>    <span class="n">shift</span><span class="o">-</span><span class="n">left</span><span class="o">/</span><span class="n">right</span>  <span class="n">one</span> <span class="n">word</span> <span class="n">left</span><span class="o">/</span><span class="n">right</span>
</span><span class='line'><span class="n">i_</span><span class="o">&lt;</span><span class="n">S</span><span class="o">-</span><span class="n">Up</span><span class="o">&gt;</span>  <span class="n">shift</span><span class="o">-</span><span class="n">up</span><span class="o">/</span><span class="n">down</span>      <span class="n">one</span> <span class="n">screenful</span> <span class="n">backward</span><span class="o">/</span><span class="n">forward</span>
</span><span class='line'><span class="n">i_</span><span class="o">&lt;</span><span class="n">End</span><span class="o">&gt;</span> <span class="o">&lt;</span><span class="n">End</span><span class="o">&gt;</span>          <span class="n">cursor</span> <span class="n">after</span> <span class="n">last</span> <span class="n">character</span> <span class="n">in</span> <span class="n">the</span> <span class="n">line</span>
</span><span class='line'><span class="n">i_</span><span class="o">&lt;</span><span class="n">Home</span><span class="o">&gt;</span>    <span class="o">&lt;</span><span class="n">Home</span><span class="o">&gt;</span>         <span class="n">cursor</span> <span class="n">to</span> <span class="n">first</span> <span class="n">character</span> <span class="n">in</span> <span class="n">the</span> <span class="n">line</span>
</span><span class='line'><span class="o">------------------------------------------------------------------------------</span>
</span><span class='line'><span class="o">*</span><span class="n">Q_ss</span><span class="o">*</span>       <span class="n">Special</span> <span class="n">keys</span> <span class="n">in</span> <span class="n">Insert</span> <span class="n">mode</span>
</span><span class='line'>
</span><span class='line'><span class="n">i_CTRL</span><span class="o">-</span><span class="n">V</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">V</span> <span class="p">{</span><span class="kt">char</span><span class="p">}..</span>    <span class="n">insert</span> <span class="n">character</span> <span class="n">literally</span><span class="p">,</span> <span class="n">or</span> <span class="n">enter</span> <span class="n">decimal</span>
</span><span class='line'>                   <span class="n">byte</span> <span class="n">value</span>
</span><span class='line'><span class="n">i_</span><span class="o">&lt;</span><span class="n">NL</span><span class="o">&gt;</span>  <span class="o">&lt;</span><span class="n">NL</span><span class="o">&gt;</span> <span class="n">or</span> <span class="o">&lt;</span><span class="n">CR</span><span class="o">&gt;</span> <span class="n">or</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">M</span> <span class="n">or</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">J</span>
</span><span class='line'>                <span class="n">begin</span> <span class="k">new</span> <span class="n">line</span>
</span><span class='line'><span class="n">i_CTRL</span><span class="o">-</span><span class="n">E</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">E</span>       <span class="n">insert</span> <span class="n">the</span> <span class="n">character</span> <span class="n">from</span> <span class="n">below</span> <span class="n">the</span> <span class="n">cursor</span>
</span><span class='line'><span class="n">i_CTRL</span><span class="o">-</span><span class="n">Y</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">Y</span>       <span class="n">insert</span> <span class="n">the</span> <span class="n">character</span> <span class="n">from</span> <span class="n">above</span> <span class="n">the</span> <span class="n">cursor</span>
</span><span class='line'>
</span><span class='line'><span class="n">i_CTRL</span><span class="o">-</span><span class="n">A</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">A</span>       <span class="n">insert</span> <span class="n">previously</span> <span class="n">inserted</span> <span class="n">text</span>
</span><span class='line'><span class="n">i_CTRL</span><span class="o">-</span><span class="err">@</span>   <span class="n">CTRL</span><span class="o">-</span><span class="err">@</span>         <span class="n">insert</span> <span class="n">previously</span> <span class="n">inserted</span> <span class="n">text</span> <span class="n">and</span> <span class="n">stop</span>
</span><span class='line'>                   <span class="n">Insert</span> <span class="n">mode</span>
</span><span class='line'><span class="n">i_CTRL</span><span class="o">-</span><span class="n">R</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">R</span> <span class="p">{</span><span class="mi">0</span><span class="o">-</span><span class="mi">9</span><span class="n">a</span><span class="o">-</span><span class="n">z</span><span class="o">%</span><span class="err">#</span><span class="o">:</span><span class="p">.</span><span class="o">-=</span><span class="s">&quot;}  insert the contents of a register</span>
</span><span class='line'>
</span><span class='line'><span class="n">i_CTRL</span><span class="o">-</span><span class="n">N</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">N</span>       <span class="n">insert</span> <span class="n">next</span> <span class="n">match</span> <span class="n">of</span> <span class="n">identifier</span> <span class="n">before</span> <span class="n">the</span>
</span><span class='line'>                   <span class="n">cursor</span>
</span><span class='line'><span class="n">i_CTRL</span><span class="o">-</span><span class="n">P</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">P</span>       <span class="n">insert</span> <span class="n">previous</span> <span class="n">match</span> <span class="n">of</span> <span class="n">identifier</span> <span class="n">before</span>
</span><span class='line'>                   <span class="n">the</span> <span class="n">cursor</span>
</span><span class='line'><span class="n">i_CTRL</span><span class="o">-</span><span class="n">X</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">X</span> <span class="p">...</span>    <span class="n">complete</span> <span class="n">the</span> <span class="n">word</span> <span class="n">before</span> <span class="n">the</span> <span class="n">cursor</span> <span class="n">in</span>
</span><span class='line'>                   <span class="n">various</span> <span class="n">ways</span>
</span><span class='line'>
</span><span class='line'><span class="n">i_</span><span class="o">&lt;</span><span class="n">BS</span><span class="o">&gt;</span>  <span class="o">&lt;</span><span class="n">BS</span><span class="o">&gt;</span> <span class="n">or</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">H</span>     <span class="k">delete</span> <span class="n">the</span> <span class="n">character</span> <span class="n">before</span> <span class="n">the</span> <span class="n">cursor</span>
</span><span class='line'><span class="n">i_</span><span class="o">&lt;</span><span class="n">Del</span><span class="o">&gt;</span> <span class="o">&lt;</span><span class="n">Del</span><span class="o">&gt;</span>          <span class="k">delete</span> <span class="n">the</span> <span class="n">character</span> <span class="n">under</span> <span class="n">the</span> <span class="n">cursor</span>
</span><span class='line'><span class="n">i_CTRL</span><span class="o">-</span><span class="n">W</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">W</span>       <span class="k">delete</span> <span class="n">word</span> <span class="n">before</span> <span class="n">the</span> <span class="n">cursor</span>
</span><span class='line'><span class="n">i_CTRL</span><span class="o">-</span><span class="n">U</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">U</span>       <span class="k">delete</span> <span class="n">all</span> <span class="n">entered</span> <span class="n">characters</span> <span class="n">in</span> <span class="n">the</span> <span class="n">current</span>
</span><span class='line'>                   <span class="n">line</span>
</span><span class='line'><span class="n">i_CTRL</span><span class="o">-</span><span class="n">T</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">T</span>       <span class="n">insert</span> <span class="n">one</span> <span class="n">shiftwidth</span> <span class="n">of</span> <span class="n">indent</span> <span class="n">in</span> <span class="n">front</span> <span class="n">of</span>
</span><span class='line'>                     <span class="n">the</span> <span class="n">current</span> <span class="n">line</span>
</span><span class='line'><span class="n">i_CTRL</span><span class="o">-</span><span class="n">D</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">D</span>       <span class="k">delete</span> <span class="n">one</span> <span class="n">shiftwidth</span> <span class="n">of</span> <span class="n">indent</span> <span class="n">in</span> <span class="n">front</span> <span class="n">of</span>
</span><span class='line'>                   <span class="n">the</span> <span class="n">current</span> <span class="n">line</span>
</span><span class='line'><span class="n">i_0_CTRL</span><span class="o">-</span><span class="n">D</span>   <span class="mi">0</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">D</span>     <span class="k">delete</span> <span class="n">all</span> <span class="n">indent</span> <span class="n">in</span> <span class="n">the</span> <span class="n">current</span> <span class="n">line</span>
</span><span class='line'><span class="n">i_</span><span class="o">^</span><span class="n">_CTRL</span><span class="o">-</span><span class="n">D</span> <span class="o">^</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">D</span>      <span class="k">delete</span> <span class="n">all</span> <span class="n">indent</span> <span class="n">in</span> <span class="n">the</span> <span class="n">current</span> <span class="n">line</span><span class="p">,</span>
</span><span class='line'>                   <span class="n">restore</span> <span class="n">indent</span> <span class="n">in</span> <span class="n">next</span> <span class="n">line</span>
</span><span class='line'><span class="o">------------------------------------------------------------------------------</span>
</span><span class='line'><span class="o">*</span><span class="n">Q_di</span><span class="o">*</span>       <span class="nl">Digraphs</span>
</span><span class='line'>
</span><span class='line'><span class="p">:</span><span class="nl">dig</span>      <span class="p">:</span><span class="n">dig</span><span class="p">[</span><span class="n">raphs</span><span class="p">]</span>       <span class="n">show</span> <span class="n">current</span> <span class="n">list</span> <span class="n">of</span> <span class="nl">digraphs</span>
</span><span class='line'><span class="p">:</span><span class="nl">dig</span>      <span class="p">:</span><span class="n">dig</span><span class="p">[</span><span class="n">raphs</span><span class="p">]</span> <span class="p">{</span><span class="n">char1</span><span class="p">}{</span><span class="n">char2</span><span class="p">}</span> <span class="p">{</span><span class="n">number</span><span class="p">}</span> <span class="p">...</span>
</span><span class='line'>              <span class="n">add</span> <span class="n">digraph</span><span class="p">(</span><span class="n">s</span><span class="p">)</span> <span class="n">to</span> <span class="n">the</span> <span class="n">list</span>
</span><span class='line'>
</span><span class='line'><span class="n">In</span> <span class="n">Insert</span> <span class="n">or</span> <span class="n">Command</span><span class="o">-</span><span class="n">line</span> <span class="nl">mode</span><span class="p">:</span>
</span><span class='line'><span class="n">i_CTRL</span><span class="o">-</span><span class="n">K</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">K</span> <span class="p">{</span><span class="n">char1</span><span class="p">}</span> <span class="p">{</span><span class="n">char2</span><span class="p">}</span>
</span><span class='line'>                <span class="n">enter</span> <span class="n">digraph</span>
</span><span class='line'><span class="n">i_digraph</span>  <span class="p">{</span><span class="n">char1</span><span class="p">}</span> <span class="o">&lt;</span><span class="n">BS</span><span class="o">&gt;</span> <span class="p">{</span><span class="n">char2</span><span class="p">}</span>
</span><span class='line'>                <span class="n">enter</span> <span class="n">digraph</span> <span class="k">if</span> <span class="err">&#39;</span><span class="n">digraph</span><span class="err">&#39;</span> <span class="n">option</span> <span class="n">set</span>
</span><span class='line'><span class="o">------------------------------------------------------------------------------</span>
</span><span class='line'><span class="o">*</span><span class="n">Q_si</span><span class="o">*</span>       <span class="n">Special</span> <span class="nl">inserts</span>
</span><span class='line'>
</span><span class='line'><span class="p">:</span><span class="nl">r</span>    <span class="p">:</span><span class="n">r</span> <span class="p">[</span><span class="n">file</span><span class="p">]</span>    <span class="n">insert</span> <span class="n">the</span> <span class="n">contents</span> <span class="n">of</span> <span class="p">[</span><span class="n">file</span><span class="p">]</span> <span class="n">below</span> <span class="n">the</span> <span class="nl">cursor</span>
</span><span class='line'><span class="p">:</span><span class="n">r</span><span class="o">!</span>     <span class="o">:</span><span class="n">r</span><span class="o">!</span> <span class="p">{</span><span class="n">command</span><span class="p">}</span>   <span class="n">insert</span> <span class="n">the</span> <span class="n">standard</span> <span class="n">output</span> <span class="n">of</span> <span class="p">{</span><span class="n">command</span><span class="p">}</span> <span class="n">below</span> <span class="n">the</span>
</span><span class='line'>                <span class="n">cursor</span>
</span><span class='line'><span class="o">------------------------------------------------------------------------------</span>
</span><span class='line'><span class="o">*</span><span class="n">Q_de</span><span class="o">*</span>       <span class="n">Deleting</span> <span class="n">text</span>
</span><span class='line'>
</span><span class='line'><span class="n">x</span>  <span class="n">N</span>  <span class="n">x</span>      <span class="k">delete</span> <span class="n">N</span> <span class="n">characters</span> <span class="n">under</span> <span class="n">and</span> <span class="n">after</span> <span class="n">the</span> <span class="n">cursor</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">Del</span><span class="o">&gt;</span>  <span class="n">N</span>  <span class="o">&lt;</span><span class="n">Del</span><span class="o">&gt;</span>  <span class="k">delete</span> <span class="n">N</span> <span class="n">characters</span> <span class="n">under</span> <span class="n">and</span> <span class="n">after</span> <span class="n">the</span> <span class="n">cursor</span>
</span><span class='line'><span class="n">X</span>  <span class="n">N</span>  <span class="n">X</span>      <span class="k">delete</span> <span class="n">N</span> <span class="n">characters</span> <span class="n">before</span> <span class="n">the</span> <span class="n">cursor</span>
</span><span class='line'><span class="n">d</span>  <span class="n">N</span>  <span class="n">d</span><span class="p">{</span><span class="n">motion</span><span class="p">}</span> <span class="k">delete</span> <span class="n">the</span> <span class="n">text</span> <span class="n">that</span> <span class="n">is</span> <span class="n">moved</span> <span class="n">over</span> <span class="n">with</span> <span class="p">{</span><span class="n">motion</span><span class="p">}</span>
</span><span class='line'><span class="n">v_d</span>       <span class="p">{</span><span class="n">visual</span><span class="p">}</span><span class="n">d</span>    <span class="k">delete</span> <span class="n">the</span> <span class="n">highlighted</span> <span class="n">text</span>
</span><span class='line'><span class="n">dd</span> <span class="n">N</span>  <span class="n">dd</span>     <span class="k">delete</span> <span class="n">N</span> <span class="n">lines</span>
</span><span class='line'><span class="n">D</span>  <span class="n">N</span>  <span class="n">D</span>      <span class="k">delete</span> <span class="n">to</span> <span class="n">the</span> <span class="n">end</span> <span class="n">of</span> <span class="n">the</span> <span class="n">line</span> <span class="p">(</span><span class="n">and</span> <span class="n">N</span><span class="o">-</span><span class="mi">1</span> <span class="n">more</span> <span class="n">lines</span><span class="p">)</span>
</span><span class='line'><span class="n">J</span>  <span class="n">N</span>  <span class="n">J</span>      <span class="n">join</span> <span class="n">N</span><span class="o">-</span><span class="mi">1</span> <span class="n">lines</span> <span class="p">(</span><span class="k">delete</span> <span class="o">&lt;</span><span class="n">EOL</span><span class="o">&gt;</span><span class="n">s</span><span class="p">)</span>
</span><span class='line'><span class="n">v_J</span>       <span class="p">{</span><span class="n">visual</span><span class="p">}</span><span class="n">J</span>    <span class="n">join</span> <span class="n">the</span> <span class="n">highlighted</span> <span class="n">lines</span>
</span><span class='line'><span class="n">gJ</span> <span class="n">N</span>  <span class="n">gJ</span>     <span class="n">like</span> <span class="s">&quot;J&quot;</span><span class="p">,</span> <span class="n">but</span> <span class="n">without</span> <span class="n">inserting</span> <span class="n">spaces</span>
</span><span class='line'><span class="n">v_gJ</span>      <span class="p">{</span><span class="n">visual</span><span class="p">}</span><span class="n">gJ</span>   <span class="n">like</span> <span class="s">&quot;{visual}J&quot;</span><span class="p">,</span> <span class="n">but</span> <span class="n">without</span> <span class="n">inserting</span> <span class="nl">spaces</span>
</span><span class='line'><span class="p">:</span><span class="nl">d</span> <span class="p">:[</span><span class="n">range</span><span class="p">]</span><span class="n">d</span> <span class="p">[</span><span class="n">x</span><span class="p">]</span>  <span class="k">delete</span> <span class="p">[</span><span class="n">range</span><span class="p">]</span> <span class="n">lines</span> <span class="p">[</span><span class="n">into</span> <span class="k">register</span> <span class="n">x</span><span class="p">]</span>
</span><span class='line'><span class="o">------------------------------------------------------------------------------</span>
</span><span class='line'><span class="o">*</span><span class="n">Q_cm</span><span class="o">*</span>       <span class="n">Copying</span> <span class="n">and</span> <span class="n">moving</span> <span class="n">text</span>
</span><span class='line'>
</span><span class='line'><span class="n">quote</span>    <span class="s">&quot;{char}  use register {char} for the next delete, yank, or put</span>
</span><span class='line'><span class="o">:</span><span class="nl">reg</span>     <span class="p">:</span><span class="n">reg</span>        <span class="n">show</span> <span class="n">the</span> <span class="n">contents</span> <span class="n">of</span> <span class="n">all</span> <span class="nl">registers</span>
</span><span class='line'><span class="p">:</span><span class="nl">reg</span>     <span class="p">:</span><span class="n">reg</span> <span class="p">{</span><span class="n">arg</span><span class="p">}</span> <span class="n">show</span> <span class="n">the</span> <span class="n">contents</span> <span class="n">of</span> <span class="n">registers</span> <span class="n">mentioned</span> <span class="n">in</span> <span class="p">{</span><span class="n">arg</span><span class="p">}</span>
</span><span class='line'><span class="n">y</span>    <span class="n">N</span>  <span class="n">y</span><span class="p">{</span><span class="n">motion</span><span class="p">}</span>   <span class="n">yank</span> <span class="n">the</span> <span class="n">text</span> <span class="n">moved</span> <span class="n">over</span> <span class="n">with</span> <span class="p">{</span><span class="n">motion</span><span class="p">}</span> <span class="n">into</span> <span class="n">a</span> <span class="k">register</span>
</span><span class='line'><span class="n">v_y</span>         <span class="p">{</span><span class="n">visual</span><span class="p">}</span><span class="n">y</span>  <span class="n">yank</span> <span class="n">the</span> <span class="n">highlighted</span> <span class="n">text</span> <span class="n">into</span> <span class="n">a</span> <span class="k">register</span>
</span><span class='line'><span class="n">yy</span>   <span class="n">N</span>  <span class="n">yy</span>       <span class="n">yank</span> <span class="n">N</span> <span class="n">lines</span> <span class="n">into</span> <span class="n">a</span> <span class="k">register</span>
</span><span class='line'><span class="n">Y</span>    <span class="n">N</span>  <span class="n">Y</span>        <span class="n">yank</span> <span class="n">N</span> <span class="n">lines</span> <span class="n">into</span> <span class="n">a</span> <span class="k">register</span>
</span><span class='line'><span class="n">p</span>    <span class="n">N</span>  <span class="n">p</span>        <span class="n">put</span> <span class="n">a</span> <span class="k">register</span> <span class="n">after</span> <span class="n">the</span> <span class="n">cursor</span> <span class="n">position</span> <span class="p">(</span><span class="n">N</span> <span class="n">times</span><span class="p">)</span>
</span><span class='line'><span class="n">P</span>    <span class="n">N</span>  <span class="n">P</span>        <span class="n">put</span> <span class="n">a</span> <span class="k">register</span> <span class="n">before</span> <span class="n">the</span> <span class="n">cursor</span> <span class="n">position</span> <span class="p">(</span><span class="n">N</span> <span class="n">times</span><span class="p">)</span>
</span><span class='line'><span class="p">]</span><span class="n">p</span>    <span class="n">N</span>  <span class="p">]</span><span class="n">p</span>        <span class="n">like</span> <span class="n">p</span><span class="p">,</span> <span class="n">but</span> <span class="n">adjust</span> <span class="n">indent</span> <span class="n">to</span> <span class="n">current</span> <span class="n">line</span>
</span><span class='line'><span class="p">[</span><span class="n">p</span>    <span class="n">N</span>  <span class="p">[</span><span class="n">p</span>        <span class="n">like</span> <span class="n">P</span><span class="p">,</span> <span class="n">but</span> <span class="n">adjust</span> <span class="n">indent</span> <span class="n">to</span> <span class="n">current</span> <span class="n">line</span>
</span><span class='line'><span class="n">gp</span>   <span class="n">N</span>  <span class="n">gp</span>       <span class="n">like</span> <span class="n">p</span><span class="p">,</span> <span class="n">but</span> <span class="n">leave</span> <span class="n">cursor</span> <span class="n">after</span> <span class="n">the</span> <span class="k">new</span> <span class="n">text</span>
</span><span class='line'><span class="n">gP</span>   <span class="n">N</span>  <span class="n">gP</span>       <span class="n">like</span> <span class="n">P</span><span class="p">,</span> <span class="n">but</span> <span class="n">leave</span> <span class="n">cursor</span> <span class="n">after</span> <span class="n">the</span> <span class="k">new</span> <span class="n">text</span>
</span><span class='line'><span class="o">------------------------------------------------------------------------------</span>
</span><span class='line'><span class="o">*</span><span class="n">Q_ch</span><span class="o">*</span>       <span class="n">Changing</span> <span class="n">text</span>
</span><span class='line'>
</span><span class='line'><span class="n">r</span>    <span class="n">N</span>  <span class="n">r</span><span class="p">{</span><span class="kt">char</span><span class="p">}</span>    <span class="n">replace</span> <span class="n">N</span> <span class="n">characters</span> <span class="n">with</span> <span class="p">{</span><span class="kt">char</span><span class="p">}</span>
</span><span class='line'><span class="n">gr</span>   <span class="n">N</span>  <span class="n">gr</span><span class="p">{</span><span class="kt">char</span><span class="p">}</span>   <span class="n">replace</span> <span class="n">N</span> <span class="n">characters</span> <span class="n">without</span> <span class="n">affecting</span> <span class="n">layout</span>
</span><span class='line'><span class="n">R</span>    <span class="n">N</span>  <span class="n">R</span>        <span class="n">enter</span> <span class="n">Replace</span> <span class="n">mode</span> <span class="p">(</span><span class="n">repeat</span> <span class="n">the</span> <span class="n">entered</span> <span class="n">text</span> <span class="n">N</span> <span class="n">times</span><span class="p">)</span>
</span><span class='line'><span class="n">gR</span>   <span class="n">N</span>  <span class="n">gR</span>       <span class="n">enter</span> <span class="k">virtual</span> <span class="n">Replace</span> <span class="nl">mode</span><span class="p">:</span> <span class="n">Like</span> <span class="n">Replace</span> <span class="n">mode</span> <span class="n">but</span>
</span><span class='line'>             <span class="n">without</span> <span class="n">affecting</span> <span class="n">layout</span>
</span><span class='line'><span class="n">v_b_r</span>       <span class="p">{</span><span class="n">visual</span><span class="p">}</span><span class="n">r</span><span class="p">{</span><span class="kt">char</span><span class="p">}</span>
</span><span class='line'>          <span class="n">in</span> <span class="n">Visual</span> <span class="n">block</span> <span class="nl">mode</span><span class="p">:</span> <span class="n">Replace</span> <span class="n">each</span> <span class="kt">char</span> <span class="n">of</span> <span class="n">the</span>
</span><span class='line'>             <span class="n">selected</span> <span class="n">text</span> <span class="n">with</span> <span class="p">{</span><span class="kt">char</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="p">(</span><span class="n">change</span> <span class="o">=</span> <span class="k">delete</span> <span class="n">text</span> <span class="n">and</span> <span class="n">enter</span> <span class="n">Insert</span> <span class="n">mode</span><span class="p">)</span>
</span><span class='line'><span class="n">c</span>    <span class="n">N</span>  <span class="n">c</span><span class="p">{</span><span class="n">motion</span><span class="p">}</span>   <span class="n">change</span> <span class="n">the</span> <span class="n">text</span> <span class="n">that</span> <span class="n">is</span> <span class="n">moved</span> <span class="n">over</span> <span class="n">with</span> <span class="p">{</span><span class="n">motion</span><span class="p">}</span>
</span><span class='line'><span class="n">v_c</span>         <span class="p">{</span><span class="n">visual</span><span class="p">}</span><span class="n">c</span>  <span class="n">change</span> <span class="n">the</span> <span class="n">highlighted</span> <span class="n">text</span>
</span><span class='line'><span class="n">cc</span>   <span class="n">N</span>  <span class="n">cc</span>       <span class="n">change</span> <span class="n">N</span> <span class="n">lines</span>
</span><span class='line'><span class="n">S</span>    <span class="n">N</span>  <span class="n">S</span>        <span class="n">change</span> <span class="n">N</span> <span class="n">lines</span>
</span><span class='line'><span class="n">C</span>    <span class="n">N</span>  <span class="n">C</span>        <span class="n">change</span> <span class="n">to</span> <span class="n">the</span> <span class="n">end</span> <span class="n">of</span> <span class="n">the</span> <span class="n">line</span> <span class="p">(</span><span class="n">and</span> <span class="n">N</span><span class="o">-</span><span class="mi">1</span> <span class="n">more</span> <span class="n">lines</span><span class="p">)</span>
</span><span class='line'><span class="n">s</span>    <span class="n">N</span>  <span class="n">s</span>        <span class="n">change</span> <span class="n">N</span> <span class="n">characters</span>
</span><span class='line'><span class="n">v_b_c</span>       <span class="p">{</span><span class="n">visual</span><span class="p">}</span><span class="n">c</span>  <span class="n">in</span> <span class="n">Visual</span> <span class="n">block</span> <span class="nl">mode</span><span class="p">:</span> <span class="n">Change</span> <span class="n">each</span> <span class="n">of</span> <span class="n">the</span> <span class="n">selected</span>
</span><span class='line'>             <span class="n">lines</span> <span class="n">with</span> <span class="n">the</span> <span class="n">entered</span> <span class="n">text</span>
</span><span class='line'><span class="n">v_b_C</span>       <span class="p">{</span><span class="n">visual</span><span class="p">}</span><span class="n">C</span>  <span class="n">in</span> <span class="n">Visual</span> <span class="n">block</span> <span class="nl">mode</span><span class="p">:</span> <span class="n">Change</span> <span class="n">each</span> <span class="n">of</span> <span class="n">the</span> <span class="n">selected</span>
</span><span class='line'>             <span class="n">lines</span> <span class="n">until</span> <span class="n">end</span><span class="o">-</span><span class="n">of</span><span class="o">-</span><span class="n">line</span> <span class="n">with</span> <span class="n">the</span> <span class="n">entered</span> <span class="n">text</span>
</span><span class='line'>
</span><span class='line'><span class="o">~</span>    <span class="n">N</span>  <span class="o">~</span>        <span class="k">switch</span> <span class="k">case</span> <span class="k">for</span> <span class="n">N</span> <span class="n">characters</span> <span class="n">and</span> <span class="n">advance</span> <span class="n">cursor</span>
</span><span class='line'><span class="n">v_</span><span class="o">~</span>      <span class="p">{</span><span class="n">visual</span><span class="p">}</span><span class="o">~</span>  <span class="k">switch</span> <span class="k">case</span> <span class="k">for</span> <span class="n">highlighted</span> <span class="n">text</span>
</span><span class='line'><span class="n">v_u</span>         <span class="p">{</span><span class="n">visual</span><span class="p">}</span><span class="n">u</span>  <span class="n">make</span> <span class="n">highlighted</span> <span class="n">text</span> <span class="n">lowercase</span>
</span><span class='line'><span class="n">v_U</span>         <span class="p">{</span><span class="n">visual</span><span class="p">}</span><span class="n">U</span>  <span class="n">make</span> <span class="n">highlighted</span> <span class="n">text</span> <span class="n">uppercase</span>
</span><span class='line'><span class="n">g</span><span class="o">~</span>       <span class="n">g</span><span class="o">~</span><span class="p">{</span><span class="n">motion</span><span class="p">}</span> <span class="k">switch</span> <span class="k">case</span> <span class="k">for</span> <span class="n">the</span> <span class="n">text</span> <span class="n">that</span> <span class="n">is</span> <span class="n">moved</span> <span class="n">over</span> <span class="n">with</span>
</span><span class='line'>             <span class="p">{</span><span class="n">motion</span><span class="p">}</span>
</span><span class='line'><span class="n">gu</span>      <span class="n">gu</span><span class="p">{</span><span class="n">motion</span><span class="p">}</span> <span class="n">make</span> <span class="n">the</span> <span class="n">text</span> <span class="n">that</span> <span class="n">is</span> <span class="n">moved</span> <span class="n">over</span> <span class="n">with</span> <span class="p">{</span><span class="n">motion</span><span class="p">}</span>
</span><span class='line'>             <span class="n">lowercase</span>
</span><span class='line'><span class="n">gU</span>      <span class="n">gU</span><span class="p">{</span><span class="n">motion</span><span class="p">}</span> <span class="n">make</span> <span class="n">the</span> <span class="n">text</span> <span class="n">that</span> <span class="n">is</span> <span class="n">moved</span> <span class="n">over</span> <span class="n">with</span> <span class="p">{</span><span class="n">motion</span><span class="p">}</span>
</span><span class='line'>             <span class="n">uppercase</span>
</span><span class='line'><span class="n">v_g</span><span class="o">?</span>         <span class="p">{</span><span class="n">visual</span><span class="p">}</span><span class="n">g</span><span class="o">?</span> <span class="n">perform</span> <span class="n">rot13</span> <span class="n">encoding</span> <span class="n">on</span> <span class="n">highlighted</span> <span class="n">text</span>
</span><span class='line'><span class="n">g</span><span class="o">?</span>       <span class="n">g</span><span class="o">?</span><span class="p">{</span><span class="n">motion</span><span class="p">}</span> <span class="n">perform</span> <span class="n">rot13</span> <span class="n">encoding</span> <span class="n">on</span> <span class="n">the</span> <span class="n">text</span> <span class="n">that</span> <span class="n">is</span> <span class="n">moved</span> <span class="n">over</span>
</span><span class='line'>             <span class="n">with</span> <span class="p">{</span><span class="n">motion</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">CTRL</span><span class="o">-</span><span class="n">A</span>  <span class="n">N</span>  <span class="n">CTRL</span><span class="o">-</span><span class="n">A</span>    <span class="n">add</span> <span class="n">N</span> <span class="n">to</span> <span class="n">the</span> <span class="n">number</span> <span class="n">at</span> <span class="n">or</span> <span class="n">after</span> <span class="n">the</span> <span class="n">cursor</span>
</span><span class='line'><span class="n">CTRL</span><span class="o">-</span><span class="n">X</span>  <span class="n">N</span>  <span class="n">CTRL</span><span class="o">-</span><span class="n">X</span>    <span class="n">subtract</span> <span class="n">N</span> <span class="n">from</span> <span class="n">the</span> <span class="n">number</span> <span class="n">at</span> <span class="n">or</span> <span class="n">after</span> <span class="n">the</span> <span class="n">cursor</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span>     <span class="n">N</span>  <span class="o">&lt;</span><span class="p">{</span><span class="n">motion</span><span class="p">}</span>    <span class="n">move</span> <span class="n">the</span> <span class="n">lines</span> <span class="n">that</span> <span class="n">are</span> <span class="n">moved</span> <span class="n">over</span> <span class="n">with</span> <span class="p">{</span><span class="n">motion</span><span class="p">}</span> <span class="n">one</span>
</span><span class='line'>             <span class="n">shiftwidth</span> <span class="n">left</span>
</span><span class='line'><span class="o">&lt;&lt;</span>     <span class="n">N</span>  <span class="o">&lt;&lt;</span>     <span class="n">move</span> <span class="n">N</span> <span class="n">lines</span> <span class="n">one</span> <span class="n">shiftwidth</span> <span class="n">left</span>
</span><span class='line'><span class="o">&gt;</span>     <span class="n">N</span>  <span class="o">&gt;</span><span class="p">{</span><span class="n">motion</span><span class="p">}</span>    <span class="n">move</span> <span class="n">the</span> <span class="n">lines</span> <span class="n">that</span> <span class="n">are</span> <span class="n">moved</span> <span class="n">over</span> <span class="n">with</span> <span class="p">{</span><span class="n">motion</span><span class="p">}</span> <span class="n">one</span>
</span><span class='line'>             <span class="n">shiftwidth</span> <span class="n">right</span>
</span><span class='line'><span class="o">&gt;&gt;</span>     <span class="n">N</span>  <span class="o">&gt;&gt;</span>     <span class="n">move</span> <span class="n">N</span> <span class="n">lines</span> <span class="n">one</span> <span class="n">shiftwidth</span> <span class="n">right</span>
</span><span class='line'><span class="n">gq</span>   <span class="n">N</span>  <span class="n">gq</span><span class="p">{</span><span class="n">motion</span><span class="p">}</span>  <span class="n">format</span> <span class="n">the</span> <span class="n">lines</span> <span class="n">that</span> <span class="n">are</span> <span class="n">moved</span> <span class="n">over</span> <span class="n">with</span> <span class="p">{</span><span class="n">motion</span><span class="p">}</span> <span class="n">to</span>
</span><span class='line'>             <span class="err">&#39;</span><span class="n">textwidth</span><span class="err">&#39;</span> <span class="nl">length</span>
</span><span class='line'><span class="p">:</span><span class="nl">ce</span>      <span class="p">:[</span><span class="n">range</span><span class="p">]</span><span class="n">ce</span><span class="p">[</span><span class="n">nter</span><span class="p">]</span> <span class="p">[</span><span class="n">width</span><span class="p">]</span>
</span><span class='line'>          <span class="n">center</span> <span class="n">the</span> <span class="n">lines</span> <span class="n">in</span> <span class="p">[</span><span class="n">range</span><span class="p">]</span>
</span><span class='line'><span class="o">:</span><span class="nl">le</span>      <span class="p">:[</span><span class="n">range</span><span class="p">]</span><span class="n">le</span><span class="p">[</span><span class="n">ft</span><span class="p">]</span> <span class="p">[</span><span class="n">indent</span><span class="p">]</span>
</span><span class='line'>          <span class="n">left</span><span class="o">-</span><span class="n">align</span> <span class="n">the</span> <span class="n">lines</span> <span class="n">in</span> <span class="p">[</span><span class="n">range</span><span class="p">]</span> <span class="p">(</span><span class="n">with</span> <span class="p">[</span><span class="n">indent</span><span class="p">])</span>
</span><span class='line'><span class="o">:</span><span class="nl">ri</span>      <span class="p">:[</span><span class="n">range</span><span class="p">]</span><span class="n">ri</span><span class="p">[</span><span class="n">ght</span><span class="p">]</span> <span class="p">[</span><span class="n">width</span><span class="p">]</span>
</span><span class='line'>          <span class="n">right</span><span class="o">-</span><span class="n">align</span> <span class="n">the</span> <span class="n">lines</span> <span class="n">in</span> <span class="p">[</span><span class="n">range</span><span class="p">]</span>
</span><span class='line'><span class="o">------------------------------------------------------------------------------</span>
</span><span class='line'><span class="o">*</span><span class="n">Q_co</span><span class="o">*</span>       <span class="n">Complex</span> <span class="n">changes</span>
</span><span class='line'>
</span><span class='line'><span class="o">!</span>     <span class="n">N</span>  <span class="o">!</span><span class="p">{</span><span class="n">motion</span><span class="p">}{</span><span class="n">command</span><span class="p">}</span><span class="o">&lt;</span><span class="n">CR</span><span class="o">&gt;</span>
</span><span class='line'>          <span class="n">filter</span> <span class="n">the</span> <span class="n">lines</span> <span class="n">that</span> <span class="n">are</span> <span class="n">moved</span> <span class="n">over</span> <span class="n">through</span> <span class="p">{</span><span class="n">command</span><span class="p">}</span>
</span><span class='line'><span class="o">!!</span>    <span class="n">N</span>  <span class="o">!!</span><span class="p">{</span><span class="n">command</span><span class="p">}</span><span class="o">&lt;</span><span class="n">CR</span><span class="o">&gt;</span>
</span><span class='line'>          <span class="n">filter</span> <span class="n">N</span> <span class="n">lines</span> <span class="n">through</span> <span class="p">{</span><span class="n">command</span><span class="p">}</span>
</span><span class='line'><span class="n">v_</span><span class="o">!</span>       <span class="p">{</span><span class="n">visual</span><span class="p">}</span><span class="o">!</span><span class="p">{</span><span class="n">command</span><span class="p">}</span><span class="o">&lt;</span><span class="n">CR</span><span class="o">&gt;</span>
</span><span class='line'>          <span class="n">filter</span> <span class="n">the</span> <span class="n">highlighted</span> <span class="n">lines</span> <span class="n">through</span> <span class="p">{</span><span class="n">command</span><span class="p">}</span>
</span><span class='line'><span class="o">:</span><span class="n">range</span><span class="o">!</span>  <span class="o">:</span><span class="p">[</span><span class="n">range</span><span class="p">]</span><span class="o">!</span> <span class="p">{</span><span class="n">command</span><span class="p">}</span><span class="o">&lt;</span><span class="n">CR</span><span class="o">&gt;</span>
</span><span class='line'>          <span class="n">filter</span> <span class="p">[</span><span class="n">range</span><span class="p">]</span> <span class="n">lines</span> <span class="n">through</span> <span class="p">{</span><span class="n">command</span><span class="p">}</span>
</span><span class='line'><span class="o">=</span>     <span class="n">N</span>  <span class="o">=</span><span class="p">{</span><span class="n">motion</span><span class="p">}</span>
</span><span class='line'>          <span class="n">filter</span> <span class="n">the</span> <span class="n">lines</span> <span class="n">that</span> <span class="n">are</span> <span class="n">moved</span> <span class="n">over</span> <span class="n">through</span> <span class="err">&#39;</span><span class="n">equalprg</span><span class="err">&#39;</span>
</span><span class='line'><span class="o">==</span>    <span class="n">N</span>  <span class="o">==</span>  <span class="n">filter</span> <span class="n">N</span> <span class="n">lines</span> <span class="n">through</span> <span class="err">&#39;</span><span class="n">equalprg</span><span class="err">&#39;</span>
</span><span class='line'><span class="n">v_</span><span class="o">=</span>       <span class="p">{</span><span class="n">visual</span><span class="p">}</span><span class="o">=</span>
</span><span class='line'>          <span class="n">filter</span> <span class="n">the</span> <span class="n">highlighted</span> <span class="n">lines</span> <span class="n">through</span> <span class="err">&#39;</span><span class="n">equalprg</span><span class="err">&#39;</span>
</span><span class='line'><span class="o">:</span><span class="nl">s</span>    <span class="p">:[</span><span class="n">range</span><span class="p">]</span><span class="n">s</span><span class="p">[</span><span class="n">ubstitute</span><span class="p">]</span><span class="o">/</span><span class="p">{</span><span class="n">pattern</span><span class="p">}</span><span class="o">/</span><span class="p">{</span><span class="n">string</span><span class="p">}</span><span class="o">/</span><span class="p">[</span><span class="n">g</span><span class="p">][</span><span class="n">c</span><span class="p">]</span>
</span><span class='line'>          <span class="n">substitute</span> <span class="p">{</span><span class="n">pattern</span><span class="p">}</span> <span class="n">by</span> <span class="p">{</span><span class="n">string</span><span class="p">}</span> <span class="n">in</span> <span class="p">[</span><span class="n">range</span><span class="p">]</span> <span class="n">lines</span><span class="p">;</span>
</span><span class='line'>             <span class="n">with</span> <span class="p">[</span><span class="n">g</span><span class="p">],</span> <span class="n">replace</span> <span class="n">all</span> <span class="n">occurrences</span> <span class="n">of</span> <span class="p">{</span><span class="n">pattern</span><span class="p">};</span>
</span><span class='line'>             <span class="n">with</span> <span class="p">[</span><span class="n">c</span><span class="p">],</span> <span class="n">confirm</span> <span class="n">each</span> <span class="nl">replacement</span>
</span><span class='line'><span class="p">:</span><span class="nl">s</span>    <span class="p">:[</span><span class="n">range</span><span class="p">]</span><span class="n">s</span><span class="p">[</span><span class="n">ubstitute</span><span class="p">]</span> <span class="p">[</span><span class="n">g</span><span class="p">][</span><span class="n">c</span><span class="p">]</span>
</span><span class='line'>          <span class="n">repeat</span> <span class="n">previous</span> <span class="s">&quot;:s&quot;</span> <span class="n">with</span> <span class="k">new</span> <span class="n">range</span> <span class="n">and</span> <span class="n">options</span>
</span><span class='line'><span class="o">&amp;</span>        <span class="o">&amp;</span>      <span class="n">Repeat</span> <span class="n">previous</span> <span class="s">&quot;:s&quot;</span> <span class="n">on</span> <span class="n">current</span> <span class="n">line</span> <span class="n">without</span> <span class="nl">options</span>
</span><span class='line'><span class="p">:</span><span class="nl">ret</span>      <span class="p">:[</span><span class="n">range</span><span class="p">]</span><span class="n">ret</span><span class="p">[</span><span class="n">ab</span><span class="p">][</span><span class="o">!</span><span class="p">]</span> <span class="p">[</span><span class="n">tabstop</span><span class="p">]</span>
</span><span class='line'>          <span class="n">set</span> <span class="err">&#39;</span><span class="n">tabstop</span><span class="err">&#39;</span> <span class="n">to</span> <span class="k">new</span> <span class="n">value</span> <span class="n">and</span> <span class="n">adjust</span> <span class="n">white</span> <span class="n">space</span>
</span><span class='line'>             <span class="n">accordingly</span>
</span><span class='line'><span class="o">------------------------------------------------------------------------------</span>
</span><span class='line'><span class="o">*</span><span class="n">Q_vi</span><span class="o">*</span>       <span class="n">Visual</span> <span class="n">mode</span>
</span><span class='line'>
</span><span class='line'><span class="n">visual</span><span class="o">-</span><span class="n">index</span> <span class="n">list</span> <span class="n">of</span> <span class="n">Visual</span> <span class="n">mode</span> <span class="n">commands</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'><span class="n">v</span>        <span class="n">v</span>      <span class="n">start</span> <span class="n">highlighting</span> <span class="n">characters</span>  <span class="p">}</span>  <span class="n">move</span> <span class="n">cursor</span> <span class="n">and</span> <span class="n">use</span>
</span><span class='line'><span class="n">V</span>        <span class="n">V</span>      <span class="n">start</span> <span class="n">highlighting</span> <span class="n">linewise</span>    <span class="p">}</span>  <span class="k">operator</span> <span class="n">to</span> <span class="n">affect</span>
</span><span class='line'><span class="n">CTRL</span><span class="o">-</span><span class="n">V</span>   <span class="n">CTRL</span><span class="o">-</span><span class="n">V</span> <span class="n">start</span> <span class="n">highlighting</span> <span class="n">blockwise</span>   <span class="p">}</span>  <span class="n">highlighted</span> <span class="n">text</span>
</span><span class='line'><span class="n">v_o</span>      <span class="n">o</span>      <span class="n">exchange</span> <span class="n">cursor</span> <span class="n">position</span> <span class="n">with</span> <span class="n">start</span> <span class="n">of</span> <span class="n">highlighting</span>
</span><span class='line'><span class="n">gv</span>       <span class="n">gv</span>     <span class="n">start</span> <span class="n">highlighting</span> <span class="n">on</span> <span class="n">previous</span> <span class="n">visual</span> <span class="n">area</span>
</span><span class='line'><span class="n">v_v</span>      <span class="n">v</span>      <span class="n">highlight</span> <span class="n">characters</span> <span class="n">or</span> <span class="n">stop</span> <span class="n">highlighting</span>
</span><span class='line'><span class="n">v_V</span>      <span class="n">V</span>      <span class="n">highlight</span> <span class="n">linewise</span> <span class="n">or</span> <span class="n">stop</span> <span class="n">highlighting</span>
</span><span class='line'><span class="n">v_CTRL</span><span class="o">-</span><span class="n">V</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">V</span> <span class="n">highlight</span> <span class="n">blockwise</span> <span class="n">or</span> <span class="n">stop</span> <span class="n">highlighting</span>
</span><span class='line'><span class="o">------------------------------------------------------------------------------</span>
</span><span class='line'><span class="o">*</span><span class="n">Q_to</span><span class="o">*</span>       <span class="n">Text</span> <span class="n">objects</span> <span class="p">(</span><span class="n">only</span> <span class="n">in</span> <span class="n">Visual</span> <span class="n">mode</span> <span class="n">or</span> <span class="n">after</span> <span class="n">an</span> <span class="k">operator</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">v_aw</span>      <span class="n">N</span>  <span class="n">aw</span>  <span class="n">Select</span> <span class="s">&quot;a word&quot;</span>
</span><span class='line'><span class="n">v_iw</span>      <span class="n">N</span>  <span class="n">iw</span>  <span class="n">Select</span> <span class="s">&quot;inner word&quot;</span>
</span><span class='line'><span class="n">v_aW</span>      <span class="n">N</span>  <span class="n">aW</span>  <span class="n">Select</span> <span class="s">&quot;a WORD&quot;</span>
</span><span class='line'><span class="n">v_iW</span>      <span class="n">N</span>  <span class="n">iW</span>  <span class="n">Select</span> <span class="s">&quot;inner WORD&quot;</span>
</span><span class='line'><span class="n">v_as</span>      <span class="n">N</span>  <span class="n">as</span>  <span class="n">Select</span> <span class="s">&quot;a sentence&quot;</span>
</span><span class='line'><span class="n">v_is</span>      <span class="n">N</span>  <span class="n">is</span>  <span class="n">Select</span> <span class="s">&quot;inner sentence&quot;</span>
</span><span class='line'><span class="n">v_ap</span>      <span class="n">N</span>  <span class="n">ap</span>  <span class="n">Select</span> <span class="s">&quot;a paragraph&quot;</span>
</span><span class='line'><span class="n">v_ip</span>      <span class="n">N</span>  <span class="n">ip</span>  <span class="n">Select</span> <span class="s">&quot;inner paragraph&quot;</span>
</span><span class='line'><span class="n">v_ab</span>      <span class="n">N</span>  <span class="n">ab</span>  <span class="n">Select</span> <span class="s">&quot;a block&quot;</span> <span class="p">(</span><span class="n">from</span> <span class="s">&quot;[(&quot;</span> <span class="n">to</span> <span class="s">&quot;])&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">v_ib</span>      <span class="n">N</span>  <span class="n">ib</span>  <span class="n">Select</span> <span class="s">&quot;inner block&quot;</span> <span class="p">(</span><span class="n">from</span> <span class="s">&quot;[(&quot;</span> <span class="n">to</span> <span class="s">&quot;])&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">v_aB</span>      <span class="n">N</span>  <span class="n">aB</span>  <span class="n">Select</span> <span class="s">&quot;a Block&quot;</span> <span class="p">(</span><span class="n">from</span> <span class="s">&quot;[{&quot;</span> <span class="n">to</span> <span class="s">&quot;]}&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">v_iB</span>      <span class="n">N</span>  <span class="n">iB</span>  <span class="n">Select</span> <span class="s">&quot;inner Block&quot;</span> <span class="p">(</span><span class="n">from</span> <span class="s">&quot;[{&quot;</span> <span class="n">to</span> <span class="s">&quot;]}&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">v_a</span><span class="o">&gt;</span>    <span class="n">N</span>  <span class="n">a</span><span class="o">&gt;</span>    <span class="n">Select</span> <span class="s">&quot;a &lt;&gt; block&quot;</span>
</span><span class='line'><span class="n">v_i</span><span class="o">&gt;</span>    <span class="n">N</span>  <span class="n">i</span><span class="o">&gt;</span>    <span class="n">Select</span> <span class="s">&quot;inner &lt;&gt; block&quot;</span>
</span><span class='line'><span class="n">v_at</span>      <span class="n">N</span>  <span class="n">at</span>  <span class="n">Select</span> <span class="s">&quot;a tag block&quot;</span> <span class="p">(</span><span class="n">from</span> <span class="o">&lt;</span><span class="n">aaa</span><span class="o">&gt;</span> <span class="n">to</span> <span class="o">&lt;/</span><span class="n">aaa</span><span class="o">&gt;</span><span class="p">)</span>
</span><span class='line'><span class="n">v_it</span>      <span class="n">N</span>  <span class="n">it</span>  <span class="n">Select</span> <span class="s">&quot;inner tag block&quot;</span> <span class="p">(</span><span class="n">from</span> <span class="o">&lt;</span><span class="n">aaa</span><span class="o">&gt;</span> <span class="n">to</span> <span class="o">&lt;/</span><span class="n">aaa</span><span class="o">&gt;</span><span class="p">)</span>
</span><span class='line'><span class="n">v_a</span><span class="err">&#39;</span>     <span class="n">N</span>  <span class="n">a</span><span class="err">&#39;</span> <span class="n">Select</span> <span class="s">&quot;a single quoted string&quot;</span>
</span><span class='line'><span class="n">v_i</span><span class="err">&#39;</span>     <span class="n">N</span>  <span class="n">i</span><span class="err">&#39;</span> <span class="n">Select</span> <span class="s">&quot;inner single quoted string&quot;</span>
</span><span class='line'><span class="n">v_aquote</span> <span class="n">N</span>  <span class="n">a</span><span class="s">&quot;  Select &quot;</span><span class="n">a</span> <span class="kt">double</span> <span class="n">quoted</span> <span class="n">string</span><span class="s">&quot;</span>
</span><span class='line'><span class="n">v_iquote</span> <span class="n">N</span>  <span class="n">i</span><span class="s">&quot;  Select &quot;</span><span class="n">inner</span> <span class="kt">double</span> <span class="n">quoted</span> <span class="n">string</span><span class="s">&quot;</span>
</span><span class='line'><span class="n">v_a</span><span class="err">`</span>     <span class="n">N</span>  <span class="n">a</span><span class="err">`</span> <span class="n">Select</span> <span class="s">&quot;a backward quoted string&quot;</span>
</span><span class='line'><span class="n">v_i</span><span class="err">`</span>     <span class="n">N</span>  <span class="n">i</span><span class="err">`</span> <span class="n">Select</span> <span class="s">&quot;inner backward quoted string&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="o">------------------------------------------------------------------------------</span>
</span><span class='line'><span class="o">*</span><span class="n">Q_re</span><span class="o">*</span>       <span class="n">Repeating</span> <span class="n">commands</span>
</span><span class='line'>
</span><span class='line'><span class="p">.</span>     <span class="n">N</span>  <span class="p">.</span>       <span class="n">repeat</span> <span class="n">last</span> <span class="n">change</span> <span class="p">(</span><span class="n">with</span> <span class="n">count</span> <span class="n">replaced</span> <span class="n">with</span> <span class="n">N</span><span class="p">)</span>
</span><span class='line'><span class="n">q</span>        <span class="n">q</span><span class="p">{</span><span class="n">a</span><span class="o">-</span><span class="n">z</span><span class="p">}</span>  <span class="n">record</span> <span class="n">typed</span> <span class="n">characters</span> <span class="n">into</span> <span class="k">register</span> <span class="p">{</span><span class="n">a</span><span class="o">-</span><span class="n">z</span><span class="p">}</span>
</span><span class='line'><span class="n">q</span>        <span class="n">q</span><span class="p">{</span><span class="n">A</span><span class="o">-</span><span class="n">Z</span><span class="p">}</span>  <span class="n">record</span> <span class="n">typed</span> <span class="n">characters</span><span class="p">,</span> <span class="n">appended</span> <span class="n">to</span> <span class="k">register</span> <span class="p">{</span><span class="n">a</span><span class="o">-</span><span class="n">z</span><span class="p">}</span>
</span><span class='line'><span class="n">q</span>        <span class="n">q</span>      <span class="n">stop</span> <span class="n">recording</span>
</span><span class='line'><span class="err">@</span>       <span class="n">N</span>  <span class="err">@</span><span class="p">{</span><span class="n">a</span><span class="o">-</span><span class="n">z</span><span class="p">}</span> <span class="n">execute</span> <span class="n">the</span> <span class="n">contents</span> <span class="n">of</span> <span class="k">register</span> <span class="p">{</span><span class="n">a</span><span class="o">-</span><span class="n">z</span><span class="p">}</span> <span class="p">(</span><span class="n">N</span> <span class="n">times</span><span class="p">)</span>
</span><span class='line'><span class="err">@@</span>      <span class="n">N</span>  <span class="err">@@</span>       <span class="n">repeat</span> <span class="n">previous</span> <span class="err">@</span><span class="p">{</span><span class="n">a</span><span class="o">-</span><span class="n">z</span><span class="p">}</span> <span class="p">(</span><span class="n">N</span> <span class="n">times</span><span class="p">)</span>
</span><span class='line'><span class="o">:</span><span class="err">@</span>       <span class="o">:</span><span class="err">@</span><span class="p">{</span><span class="n">a</span><span class="o">-</span><span class="n">z</span><span class="p">}</span>   <span class="n">execute</span> <span class="n">the</span> <span class="n">contents</span> <span class="n">of</span> <span class="k">register</span> <span class="p">{</span><span class="n">a</span><span class="o">-</span><span class="n">z</span><span class="p">}</span> <span class="n">as</span> <span class="n">an</span> <span class="n">Ex</span>
</span><span class='line'>             <span class="nl">command</span>
</span><span class='line'><span class="p">:</span><span class="err">@@</span>      <span class="o">:</span><span class="err">@@</span>      <span class="n">repeat</span> <span class="nl">previous</span> <span class="p">:</span><span class="err">@</span><span class="p">{</span><span class="n">a</span><span class="o">-</span><span class="n">z</span><span class="p">}</span>
</span><span class='line'><span class="o">:</span><span class="nl">g</span>    <span class="p">:[</span><span class="n">range</span><span class="p">]</span><span class="n">g</span><span class="p">[</span><span class="n">lobal</span><span class="p">]</span><span class="o">/</span><span class="p">{</span><span class="n">pattern</span><span class="p">}</span><span class="o">/</span><span class="p">[</span><span class="n">cmd</span><span class="p">]</span>
</span><span class='line'>          <span class="n">execute</span> <span class="n">Ex</span> <span class="n">command</span> <span class="p">[</span><span class="n">cmd</span><span class="p">]</span> <span class="p">(</span><span class="k">default</span><span class="o">:</span> <span class="s">&quot;:p&quot;</span><span class="p">)</span> <span class="n">on</span> <span class="n">the</span> <span class="n">lines</span>
</span><span class='line'>             <span class="n">within</span> <span class="p">[</span><span class="n">range</span><span class="p">]</span> <span class="n">where</span> <span class="p">{</span><span class="n">pattern</span><span class="p">}</span> <span class="nl">matches</span>
</span><span class='line'><span class="p">:</span><span class="nl">g</span>    <span class="p">:[</span><span class="n">range</span><span class="p">]</span><span class="n">g</span><span class="p">[</span><span class="n">lobal</span><span class="p">]</span><span class="o">!/</span><span class="p">{</span><span class="n">pattern</span><span class="p">}</span><span class="o">/</span><span class="p">[</span><span class="n">cmd</span><span class="p">]</span>
</span><span class='line'>          <span class="n">execute</span> <span class="n">Ex</span> <span class="n">command</span> <span class="p">[</span><span class="n">cmd</span><span class="p">]</span> <span class="p">(</span><span class="k">default</span><span class="o">:</span> <span class="s">&quot;:p&quot;</span><span class="p">)</span> <span class="n">on</span> <span class="n">the</span> <span class="n">lines</span>
</span><span class='line'>             <span class="n">within</span> <span class="p">[</span><span class="n">range</span><span class="p">]</span> <span class="n">where</span> <span class="p">{</span><span class="n">pattern</span><span class="p">}</span> <span class="n">does</span> <span class="n">NOT</span> <span class="nl">match</span>
</span><span class='line'><span class="p">:</span><span class="nl">so</span>       <span class="p">:</span><span class="n">so</span><span class="p">[</span><span class="n">urce</span><span class="p">]</span> <span class="p">{</span><span class="n">file</span><span class="p">}</span>
</span><span class='line'>          <span class="n">read</span> <span class="n">Ex</span> <span class="n">commands</span> <span class="n">from</span> <span class="p">{</span><span class="n">file</span><span class="p">}</span>
</span><span class='line'><span class="o">:</span><span class="nl">so</span>       <span class="p">:</span><span class="n">so</span><span class="p">[</span><span class="n">urce</span><span class="p">]</span><span class="o">!</span> <span class="p">{</span><span class="n">file</span><span class="p">}</span>
</span><span class='line'>          <span class="n">read</span> <span class="n">Vim</span> <span class="n">commands</span> <span class="n">from</span> <span class="p">{</span><span class="n">file</span><span class="p">}</span>
</span><span class='line'><span class="o">:</span><span class="nl">sl</span>       <span class="p">:</span><span class="n">sl</span><span class="p">[</span><span class="n">eep</span><span class="p">]</span> <span class="p">[</span><span class="n">sec</span><span class="p">]</span>
</span><span class='line'>          <span class="n">don</span><span class="err">&#39;</span><span class="n">t</span> <span class="k">do</span> <span class="n">anything</span> <span class="k">for</span> <span class="p">[</span><span class="n">sec</span><span class="p">]</span> <span class="n">seconds</span>
</span><span class='line'><span class="n">gs</span>    <span class="n">N</span>  <span class="n">gs</span>  <span class="k">goto</span> <span class="n">Sleep</span> <span class="k">for</span> <span class="n">N</span> <span class="n">seconds</span>
</span><span class='line'><span class="o">------------------------------------------------------------------------------</span>
</span><span class='line'><span class="o">*</span><span class="n">Q_km</span><span class="o">*</span>       <span class="n">Key</span> <span class="nl">mapping</span>
</span><span class='line'>
</span><span class='line'><span class="p">:</span><span class="nl">map</span>       <span class="p">:</span><span class="n">ma</span><span class="p">[</span><span class="n">p</span><span class="p">]</span> <span class="p">{</span><span class="n">lhs</span><span class="p">}</span> <span class="p">{</span><span class="n">rhs</span><span class="p">}</span>   <span class="n">map</span> <span class="p">{</span><span class="n">lhs</span><span class="p">}</span> <span class="n">to</span> <span class="p">{</span><span class="n">rhs</span><span class="p">}</span> <span class="n">in</span> <span class="n">Normal</span> <span class="n">and</span> <span class="n">Visual</span> <span class="nl">mode</span>
</span><span class='line'><span class="p">:</span><span class="n">map</span><span class="o">!</span>      <span class="o">:</span><span class="n">ma</span><span class="p">[</span><span class="n">p</span><span class="p">]</span><span class="o">!</span> <span class="p">{</span><span class="n">lhs</span><span class="p">}</span> <span class="p">{</span><span class="n">rhs</span><span class="p">}</span>  <span class="n">map</span> <span class="p">{</span><span class="n">lhs</span><span class="p">}</span> <span class="n">to</span> <span class="p">{</span><span class="n">rhs</span><span class="p">}</span> <span class="n">in</span> <span class="n">Insert</span> <span class="n">and</span> <span class="n">Command</span><span class="o">-</span><span class="n">line</span>
</span><span class='line'>                   <span class="nl">mode</span>
</span><span class='line'><span class="p">:</span><span class="nl">noremap</span>   <span class="p">:</span><span class="n">no</span><span class="p">[</span><span class="n">remap</span><span class="p">][</span><span class="o">!</span><span class="p">]</span> <span class="p">{</span><span class="n">lhs</span><span class="p">}</span> <span class="p">{</span><span class="n">rhs</span><span class="p">}</span>
</span><span class='line'>                <span class="n">same</span> <span class="n">as</span> <span class="s">&quot;:map&quot;</span><span class="p">,</span> <span class="n">no</span> <span class="n">remapping</span> <span class="k">for</span> <span class="k">this</span> <span class="p">{</span><span class="n">rhs</span><span class="p">}</span>
</span><span class='line'><span class="o">:</span><span class="nl">unmap</span>     <span class="p">:</span><span class="n">unm</span><span class="p">[</span><span class="n">ap</span><span class="p">]</span> <span class="p">{</span><span class="n">lhs</span><span class="p">}</span>    <span class="n">remove</span> <span class="n">the</span> <span class="n">mapping</span> <span class="n">of</span> <span class="p">{</span><span class="n">lhs</span><span class="p">}</span> <span class="k">for</span> <span class="n">Normal</span> <span class="n">and</span>
</span><span class='line'>                   <span class="n">Visual</span> <span class="nl">mode</span>
</span><span class='line'><span class="p">:</span><span class="n">unmap</span><span class="o">!</span>    <span class="o">:</span><span class="n">unm</span><span class="p">[</span><span class="n">ap</span><span class="p">]</span><span class="o">!</span> <span class="p">{</span><span class="n">lhs</span><span class="p">}</span>      <span class="n">remove</span> <span class="n">the</span> <span class="n">mapping</span> <span class="n">of</span> <span class="p">{</span><span class="n">lhs</span><span class="p">}</span> <span class="k">for</span> <span class="n">Insert</span> <span class="n">and</span>
</span><span class='line'>                   <span class="n">Command</span><span class="o">-</span><span class="n">line</span> <span class="nl">mode</span>
</span><span class='line'><span class="p">:</span><span class="nl">map_l</span>     <span class="p">:</span><span class="n">ma</span><span class="p">[</span><span class="n">p</span><span class="p">]</span> <span class="p">[</span><span class="n">lhs</span><span class="p">]</span>      <span class="n">list</span> <span class="n">mappings</span> <span class="p">(</span><span class="n">starting</span> <span class="n">with</span> <span class="p">[</span><span class="n">lhs</span><span class="p">])</span> <span class="k">for</span>
</span><span class='line'>                   <span class="n">Normal</span> <span class="n">and</span> <span class="n">Visual</span> <span class="nl">mode</span>
</span><span class='line'><span class="p">:</span><span class="n">map_l</span><span class="o">!</span>    <span class="o">:</span><span class="n">ma</span><span class="p">[</span><span class="n">p</span><span class="p">]</span><span class="o">!</span> <span class="p">[</span><span class="n">lhs</span><span class="p">]</span>    <span class="n">list</span> <span class="n">mappings</span> <span class="p">(</span><span class="n">starting</span> <span class="n">with</span> <span class="p">[</span><span class="n">lhs</span><span class="p">])</span> <span class="k">for</span>
</span><span class='line'>                   <span class="n">Insert</span> <span class="n">and</span> <span class="n">Command</span><span class="o">-</span><span class="n">line</span> <span class="nl">mode</span>
</span><span class='line'><span class="p">:</span><span class="nl">cmap</span>      <span class="p">:</span><span class="n">cmap</span><span class="o">/:</span><span class="n">cunmap</span><span class="o">/:</span><span class="n">cnoremap</span>
</span><span class='line'>                <span class="n">like</span> <span class="s">&quot;:map!&quot;</span><span class="o">/</span><span class="s">&quot;:unmap!&quot;</span><span class="o">/</span><span class="s">&quot;:noremap!&quot;</span> <span class="n">but</span> <span class="k">for</span>
</span><span class='line'>                   <span class="n">Command</span><span class="o">-</span><span class="n">line</span> <span class="n">mode</span> <span class="nl">only</span>
</span><span class='line'><span class="p">:</span><span class="nl">imap</span>      <span class="p">:</span><span class="n">imap</span><span class="o">/:</span><span class="n">iunmap</span><span class="o">/:</span><span class="n">inoremap</span>
</span><span class='line'>                <span class="n">like</span> <span class="s">&quot;:map!&quot;</span><span class="o">/</span><span class="s">&quot;:unmap!&quot;</span><span class="o">/</span><span class="s">&quot;:noremap!&quot;</span> <span class="n">but</span> <span class="k">for</span>
</span><span class='line'>                   <span class="n">Insert</span> <span class="n">mode</span> <span class="nl">only</span>
</span><span class='line'><span class="p">:</span><span class="nl">nmap</span>      <span class="p">:</span><span class="n">nmap</span><span class="o">/:</span><span class="n">nunmap</span><span class="o">/:</span><span class="n">nnoremap</span>
</span><span class='line'>                <span class="n">like</span> <span class="s">&quot;:map&quot;</span><span class="o">/</span><span class="s">&quot;:unmap&quot;</span><span class="o">/</span><span class="s">&quot;:noremap&quot;</span> <span class="n">but</span> <span class="k">for</span>
</span><span class='line'>                   <span class="n">Normal</span> <span class="n">mode</span> <span class="nl">only</span>
</span><span class='line'><span class="p">:</span><span class="nl">vmap</span>      <span class="p">:</span><span class="n">vmap</span><span class="o">/:</span><span class="n">vunmap</span><span class="o">/:</span><span class="n">vnoremap</span>
</span><span class='line'>                <span class="n">like</span> <span class="s">&quot;:map&quot;</span><span class="o">/</span><span class="s">&quot;:unmap&quot;</span><span class="o">/</span><span class="s">&quot;:noremap&quot;</span> <span class="n">but</span> <span class="k">for</span>
</span><span class='line'>                   <span class="n">Visual</span> <span class="n">mode</span> <span class="nl">only</span>
</span><span class='line'><span class="p">:</span><span class="nl">omap</span>      <span class="p">:</span><span class="n">omap</span><span class="o">/:</span><span class="n">ounmap</span><span class="o">/:</span><span class="n">onoremap</span>
</span><span class='line'>                <span class="n">like</span> <span class="s">&quot;:map&quot;</span><span class="o">/</span><span class="s">&quot;:unmap&quot;</span><span class="o">/</span><span class="s">&quot;:noremap&quot;</span> <span class="n">but</span> <span class="n">only</span> <span class="k">for</span>
</span><span class='line'>                   <span class="n">when</span> <span class="n">an</span> <span class="k">operator</span> <span class="n">is</span> <span class="nl">pending</span>
</span><span class='line'><span class="p">:</span><span class="nl">mapc</span>      <span class="p">:</span><span class="n">mapc</span><span class="p">[</span><span class="n">lear</span><span class="p">]</span>    <span class="n">remove</span> <span class="n">mappings</span> <span class="k">for</span> <span class="n">Normal</span> <span class="n">and</span> <span class="n">Visual</span> <span class="nl">mode</span>
</span><span class='line'><span class="p">:</span><span class="nl">mapc</span>      <span class="p">:</span><span class="n">mapc</span><span class="p">[</span><span class="n">lear</span><span class="p">]</span><span class="o">!</span>    <span class="n">remove</span> <span class="n">mappings</span> <span class="k">for</span> <span class="n">Insert</span> <span class="n">and</span> <span class="n">Cmdline</span> <span class="nl">mode</span>
</span><span class='line'><span class="p">:</span><span class="nl">imapc</span>     <span class="p">:</span><span class="n">imapc</span><span class="p">[</span><span class="n">lear</span><span class="p">]</span>   <span class="n">remove</span> <span class="n">mappings</span> <span class="k">for</span> <span class="n">Insert</span> <span class="nl">mode</span>
</span><span class='line'><span class="p">:</span><span class="nl">vmapc</span>     <span class="p">:</span><span class="n">vmapc</span><span class="p">[</span><span class="n">lear</span><span class="p">]</span>   <span class="n">remove</span> <span class="n">mappings</span> <span class="k">for</span> <span class="n">Visual</span> <span class="nl">mode</span>
</span><span class='line'><span class="p">:</span><span class="nl">omapc</span>     <span class="p">:</span><span class="n">omapc</span><span class="p">[</span><span class="n">lear</span><span class="p">]</span>   <span class="n">remove</span> <span class="n">mappings</span> <span class="k">for</span> <span class="n">Operator</span><span class="o">-</span><span class="n">pending</span> <span class="nl">mode</span>
</span><span class='line'><span class="p">:</span><span class="nl">nmapc</span>     <span class="p">:</span><span class="n">nmapc</span><span class="p">[</span><span class="n">lear</span><span class="p">]</span>   <span class="n">remove</span> <span class="n">mappings</span> <span class="k">for</span> <span class="n">Normal</span> <span class="nl">mode</span>
</span><span class='line'><span class="p">:</span><span class="nl">cmapc</span>     <span class="p">:</span><span class="n">cmapc</span><span class="p">[</span><span class="n">lear</span><span class="p">]</span>   <span class="n">remove</span> <span class="n">mappings</span> <span class="k">for</span> <span class="n">Cmdline</span> <span class="nl">mode</span>
</span><span class='line'><span class="p">:</span><span class="nl">mkexrc</span>    <span class="p">:</span><span class="n">mk</span><span class="p">[</span><span class="n">exrc</span><span class="p">][</span><span class="o">!</span><span class="p">]</span> <span class="p">[</span><span class="n">file</span><span class="p">]</span>  <span class="n">write</span> <span class="n">current</span> <span class="n">mappings</span><span class="p">,</span> <span class="n">abbreviations</span><span class="p">,</span> <span class="n">and</span>
</span><span class='line'>                   <span class="n">settings</span> <span class="n">to</span> <span class="p">[</span><span class="n">file</span><span class="p">]</span> <span class="p">(</span><span class="k">default</span><span class="o">:</span> <span class="s">&quot;.exrc&quot;</span><span class="p">;</span>
</span><span class='line'>                   <span class="n">use</span> <span class="o">!</span> <span class="n">to</span> <span class="n">overwrite</span><span class="p">)</span>
</span><span class='line'><span class="o">:</span><span class="nl">mkvimrc</span>   <span class="p">:</span><span class="n">mkv</span><span class="p">[</span><span class="n">imrc</span><span class="p">][</span><span class="o">!</span><span class="p">]</span> <span class="p">[</span><span class="n">file</span><span class="p">]</span>
</span><span class='line'>                <span class="n">same</span> <span class="n">as</span> <span class="s">&quot;:mkexrc&quot;</span><span class="p">,</span> <span class="n">but</span> <span class="n">with</span> <span class="k">default</span> <span class="s">&quot;.vimrc&quot;</span>
</span><span class='line'><span class="o">:</span><span class="nl">mksession</span> <span class="p">:</span><span class="n">mks</span><span class="p">[</span><span class="n">ession</span><span class="p">][</span><span class="o">!</span><span class="p">]</span> <span class="p">[</span><span class="n">file</span><span class="p">]</span>
</span><span class='line'>                <span class="n">like</span> <span class="s">&quot;:mkvimrc&quot;</span><span class="p">,</span> <span class="n">but</span> <span class="n">store</span> <span class="n">current</span> <span class="n">files</span><span class="p">,</span>
</span><span class='line'>                   <span class="n">windows</span><span class="p">,</span> <span class="n">etc</span><span class="p">.</span> <span class="n">too</span><span class="p">,</span> <span class="n">to</span> <span class="n">be</span> <span class="n">able</span> <span class="n">to</span> <span class="k">continue</span>
</span><span class='line'>                   <span class="k">this</span> <span class="n">session</span> <span class="n">later</span>
</span><span class='line'><span class="o">------------------------------------------------------------------------------</span>
</span><span class='line'><span class="o">*</span><span class="n">Q_ab</span><span class="o">*</span>       <span class="nl">Abbreviations</span>
</span><span class='line'>
</span><span class='line'><span class="p">:</span><span class="nl">abbreviate</span>    <span class="p">:</span><span class="n">ab</span><span class="p">[</span><span class="n">breviate</span><span class="p">]</span> <span class="p">{</span><span class="n">lhs</span><span class="p">}</span> <span class="p">{</span><span class="n">rhs</span><span class="p">}</span>  <span class="n">add</span> <span class="n">abbreviation</span> <span class="k">for</span> <span class="p">{</span><span class="n">lhs</span><span class="p">}</span> <span class="n">to</span> <span class="p">{</span><span class="n">rhs</span><span class="p">}</span>
</span><span class='line'><span class="o">:</span><span class="nl">abbreviate</span>    <span class="p">:</span><span class="n">ab</span><span class="p">[</span><span class="n">breviate</span><span class="p">]</span> <span class="p">{</span><span class="n">lhs</span><span class="p">}</span>    <span class="n">show</span> <span class="n">abbr</span><span class="err">&#39;</span><span class="n">s</span> <span class="n">that</span> <span class="n">start</span> <span class="n">with</span> <span class="p">{</span><span class="n">lhs</span><span class="p">}</span>
</span><span class='line'><span class="o">:</span><span class="nl">abbreviate</span>    <span class="p">:</span><span class="n">ab</span><span class="p">[</span><span class="n">breviate</span><span class="p">]</span>           <span class="n">show</span> <span class="n">all</span> <span class="nl">abbreviations</span>
</span><span class='line'><span class="p">:</span><span class="nl">unabbreviate</span>  <span class="p">:</span><span class="n">una</span><span class="p">[</span><span class="n">bbreviate</span><span class="p">]</span> <span class="p">{</span><span class="n">lhs</span><span class="p">}</span>      <span class="n">remove</span> <span class="n">abbreviation</span> <span class="k">for</span> <span class="p">{</span><span class="n">lhs</span><span class="p">}</span>
</span><span class='line'><span class="o">:</span><span class="nl">noreabbrev</span>    <span class="p">:</span><span class="n">norea</span><span class="p">[</span><span class="n">bbrev</span><span class="p">]</span> <span class="p">[</span><span class="n">lhs</span><span class="p">]</span> <span class="p">[</span><span class="n">rhs</span><span class="p">]</span>  <span class="n">like</span> <span class="s">&quot;:ab&quot;</span><span class="p">,</span> <span class="n">but</span> <span class="n">don</span><span class="err">&#39;</span><span class="n">t</span> <span class="n">remap</span> <span class="p">[</span><span class="n">rhs</span><span class="p">]</span>
</span><span class='line'><span class="o">:</span><span class="nl">iabbrev</span>   <span class="p">:</span><span class="n">iab</span><span class="o">/:</span><span class="n">iunab</span><span class="o">/:</span><span class="n">inoreab</span>     <span class="n">like</span> <span class="s">&quot;:ab&quot;</span><span class="p">,</span> <span class="n">but</span> <span class="n">only</span> <span class="k">for</span> <span class="n">Insert</span> <span class="nl">mode</span>
</span><span class='line'><span class="p">:</span><span class="nl">cabbrev</span>   <span class="p">:</span><span class="n">cab</span><span class="o">/:</span><span class="n">cunab</span><span class="o">/:</span><span class="n">cnoreab</span>     <span class="n">like</span> <span class="s">&quot;:ab&quot;</span><span class="p">,</span> <span class="n">but</span> <span class="n">only</span> <span class="k">for</span>
</span><span class='line'>                      <span class="n">Command</span><span class="o">-</span><span class="n">line</span> <span class="nl">mode</span>
</span><span class='line'><span class="p">:</span><span class="nl">abclear</span>   <span class="p">:</span><span class="n">abc</span><span class="p">[</span><span class="n">lear</span><span class="p">]</span>          <span class="n">remove</span> <span class="n">all</span> <span class="nl">abbreviations</span>
</span><span class='line'><span class="p">:</span><span class="nl">cabclear</span>  <span class="p">:</span><span class="n">cabc</span><span class="p">[</span><span class="n">lear</span><span class="p">]</span>         <span class="n">remove</span> <span class="n">all</span> <span class="n">abbr</span><span class="err">&#39;</span><span class="n">s</span> <span class="k">for</span> <span class="n">Cmdline</span> <span class="nl">mode</span>
</span><span class='line'><span class="p">:</span><span class="nl">iabclear</span>  <span class="p">:</span><span class="n">iabc</span><span class="p">[</span><span class="n">lear</span><span class="p">]</span>         <span class="n">remove</span> <span class="n">all</span> <span class="n">abbr</span><span class="err">&#39;</span><span class="n">s</span> <span class="k">for</span> <span class="n">Insert</span> <span class="n">mode</span>
</span><span class='line'><span class="o">------------------------------------------------------------------------------</span>
</span><span class='line'><span class="o">*</span><span class="n">Q_op</span><span class="o">*</span>       <span class="nl">Options</span>
</span><span class='line'>
</span><span class='line'><span class="p">:</span><span class="nl">set</span>       <span class="p">:</span><span class="n">se</span><span class="p">[</span><span class="n">t</span><span class="p">]</span>             <span class="n">show</span> <span class="n">all</span> <span class="n">modified</span> <span class="nl">options</span>
</span><span class='line'><span class="p">:</span><span class="nl">set</span>       <span class="p">:</span><span class="n">se</span><span class="p">[</span><span class="n">t</span><span class="p">]</span> <span class="n">all</span>          <span class="n">show</span> <span class="n">all</span> <span class="n">non</span><span class="o">-</span><span class="n">termcap</span> <span class="nl">options</span>
</span><span class='line'><span class="p">:</span><span class="nl">set</span>       <span class="p">:</span><span class="n">se</span><span class="p">[</span><span class="n">t</span><span class="p">]</span> <span class="n">termcap</span>          <span class="n">show</span> <span class="n">all</span> <span class="n">termcap</span> <span class="nl">options</span>
</span><span class='line'><span class="p">:</span><span class="nl">set</span>       <span class="p">:</span><span class="n">se</span><span class="p">[</span><span class="n">t</span><span class="p">]</span> <span class="p">{</span><span class="n">option</span><span class="p">}</span>       <span class="n">set</span> <span class="n">boolean</span> <span class="n">option</span> <span class="p">(</span><span class="k">switch</span> <span class="n">it</span> <span class="n">on</span><span class="p">),</span>
</span><span class='line'>                    <span class="n">show</span> <span class="n">string</span> <span class="n">or</span> <span class="n">number</span> <span class="nl">option</span>
</span><span class='line'><span class="p">:</span><span class="nl">set</span>       <span class="p">:</span><span class="n">se</span><span class="p">[</span><span class="n">t</span><span class="p">]</span> <span class="n">no</span><span class="p">{</span><span class="n">option</span><span class="p">}</span>      <span class="n">reset</span> <span class="n">boolean</span> <span class="n">option</span> <span class="p">(</span><span class="k">switch</span> <span class="n">it</span> <span class="n">off</span><span class="p">)</span>
</span><span class='line'><span class="o">:</span><span class="nl">set</span>       <span class="p">:</span><span class="n">se</span><span class="p">[</span><span class="n">t</span><span class="p">]</span> <span class="n">inv</span><span class="p">{</span><span class="n">option</span><span class="p">}</span>     <span class="n">invert</span> <span class="n">boolean</span> <span class="nl">option</span>
</span><span class='line'><span class="p">:</span><span class="nl">set</span>       <span class="p">:</span><span class="n">se</span><span class="p">[</span><span class="n">t</span><span class="p">]</span> <span class="p">{</span><span class="n">option</span><span class="p">}</span><span class="o">=</span><span class="p">{</span><span class="n">value</span><span class="p">}</span>   <span class="n">set</span> <span class="n">string</span><span class="o">/</span><span class="n">number</span> <span class="n">option</span> <span class="n">to</span> <span class="p">{</span><span class="n">value</span><span class="p">}</span>
</span><span class='line'><span class="o">:</span><span class="nl">set</span>       <span class="p">:</span><span class="n">se</span><span class="p">[</span><span class="n">t</span><span class="p">]</span> <span class="p">{</span><span class="n">option</span><span class="p">}</span><span class="o">+=</span><span class="p">{</span><span class="n">value</span><span class="p">}</span>  <span class="n">append</span> <span class="p">{</span><span class="n">value</span><span class="p">}</span> <span class="n">to</span> <span class="n">string</span> <span class="n">option</span><span class="p">,</span> <span class="n">add</span>
</span><span class='line'>                    <span class="p">{</span><span class="n">value</span><span class="p">}</span> <span class="n">to</span> <span class="n">number</span> <span class="nl">option</span>
</span><span class='line'><span class="p">:</span><span class="nl">set</span>       <span class="p">:</span><span class="n">se</span><span class="p">[</span><span class="n">t</span><span class="p">]</span> <span class="p">{</span><span class="n">option</span><span class="p">}</span><span class="o">-=</span><span class="p">{</span><span class="n">value</span><span class="p">}</span>  <span class="n">remove</span> <span class="p">{</span><span class="n">value</span><span class="p">}</span> <span class="n">to</span> <span class="n">string</span> <span class="n">option</span><span class="p">,</span>
</span><span class='line'>                    <span class="n">subtract</span> <span class="p">{</span><span class="n">value</span><span class="p">}</span> <span class="n">from</span> <span class="n">number</span> <span class="nl">option</span>
</span><span class='line'><span class="p">:</span><span class="nl">set</span>       <span class="p">:</span><span class="n">se</span><span class="p">[</span><span class="n">t</span><span class="p">]</span> <span class="p">{</span><span class="n">option</span><span class="p">}</span><span class="o">?</span>   <span class="n">show</span> <span class="n">value</span> <span class="n">of</span> <span class="p">{</span><span class="n">option</span><span class="p">}</span>
</span><span class='line'><span class="o">:</span><span class="nl">set</span>       <span class="p">:</span><span class="n">se</span><span class="p">[</span><span class="n">t</span><span class="p">]</span> <span class="p">{</span><span class="n">option</span><span class="p">}</span><span class="o">&amp;</span>   <span class="n">reset</span> <span class="p">{</span><span class="n">option</span><span class="p">}</span> <span class="n">to</span> <span class="n">its</span> <span class="k">default</span> <span class="nl">value</span>
</span><span class='line'>
</span><span class='line'><span class="p">:</span><span class="nl">setlocal</span>  <span class="p">:</span><span class="n">setl</span><span class="p">[</span><span class="n">ocal</span><span class="p">]</span>        <span class="n">like</span> <span class="s">&quot;:set&quot;</span> <span class="n">but</span> <span class="n">set</span> <span class="n">the</span> <span class="n">local</span> <span class="n">value</span>
</span><span class='line'>                    <span class="k">for</span> <span class="n">options</span> <span class="n">that</span> <span class="n">have</span> <span class="nl">one</span>
</span><span class='line'><span class="p">:</span><span class="nl">setglobal</span> <span class="p">:</span><span class="n">setg</span><span class="p">[</span><span class="n">lobal</span><span class="p">]</span>       <span class="n">like</span> <span class="s">&quot;:set&quot;</span> <span class="n">but</span> <span class="n">set</span> <span class="n">the</span> <span class="n">global</span> <span class="n">value</span>
</span><span class='line'>                    <span class="n">of</span> <span class="n">a</span> <span class="n">local</span> <span class="nl">option</span>
</span><span class='line'>
</span><span class='line'><span class="p">:</span><span class="nl">fix</span>       <span class="p">:</span><span class="n">fix</span><span class="p">[</span><span class="n">del</span><span class="p">]</span>          <span class="n">set</span> <span class="n">value</span> <span class="n">of</span> <span class="err">&#39;</span><span class="n">t_kD</span><span class="err">&#39;</span> <span class="n">according</span> <span class="n">to</span>
</span><span class='line'>                    <span class="n">value</span> <span class="n">of</span> <span class="err">&#39;</span><span class="n">t_kb</span><span class="err">&#39;</span>
</span><span class='line'><span class="o">:</span><span class="nl">options</span>   <span class="p">:</span><span class="n">opt</span><span class="p">[</span><span class="n">ions</span><span class="p">]</span>         <span class="n">open</span> <span class="n">a</span> <span class="k">new</span> <span class="n">window</span> <span class="n">to</span> <span class="n">view</span> <span class="n">and</span> <span class="n">set</span>
</span><span class='line'>                    <span class="n">options</span><span class="p">,</span> <span class="n">grouped</span> <span class="n">by</span> <span class="n">functionality</span><span class="p">,</span>
</span><span class='line'>                    <span class="n">a</span> <span class="n">one</span> <span class="n">line</span> <span class="n">explanation</span> <span class="n">and</span> <span class="n">links</span> <span class="n">to</span>
</span><span class='line'>                    <span class="n">the</span> <span class="n">help</span>
</span><span class='line'>
</span><span class='line'><span class="n">Short</span> <span class="n">explanation</span> <span class="n">of</span> <span class="n">each</span> <span class="nl">option</span><span class="p">:</span>      <span class="o">*</span><span class="n">option</span><span class="o">-</span><span class="n">list</span><span class="o">*</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">aleph</span><span class="err">&#39;</span>        <span class="err">&#39;</span><span class="n">al</span><span class="err">&#39;</span>     <span class="n">ASCII</span> <span class="n">code</span> <span class="n">of</span> <span class="n">the</span> <span class="n">letter</span> <span class="n">Aleph</span> <span class="p">(</span><span class="n">Hebrew</span><span class="p">)</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">allowrevins</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">ari</span><span class="err">&#39;</span>     <span class="n">allow</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">_</span> <span class="n">in</span> <span class="n">Insert</span> <span class="n">and</span> <span class="n">Command</span><span class="o">-</span><span class="n">line</span> <span class="n">mode</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">altkeymap</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">akm</span><span class="err">&#39;</span>     <span class="k">for</span> <span class="k">default</span> <span class="n">second</span> <span class="n">language</span> <span class="p">(</span><span class="n">Farsi</span><span class="o">/</span><span class="n">Hebrew</span><span class="p">)</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">ambiwidth</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">ambw</span><span class="err">&#39;</span>    <span class="n">what</span> <span class="n">to</span> <span class="k">do</span> <span class="n">with</span> <span class="n">Unicode</span> <span class="n">chars</span> <span class="n">of</span> <span class="n">ambiguous</span> <span class="n">width</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">antialias</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">anti</span><span class="err">&#39;</span>    <span class="n">Mac</span> <span class="n">OS</span> <span class="nl">X</span><span class="p">:</span> <span class="n">use</span> <span class="n">smooth</span><span class="p">,</span> <span class="n">antialiased</span> <span class="n">fonts</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">autochdir</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">acd</span><span class="err">&#39;</span>     <span class="n">change</span> <span class="n">directory</span> <span class="n">to</span> <span class="n">the</span> <span class="n">file</span> <span class="n">in</span> <span class="n">the</span> <span class="n">current</span> <span class="n">window</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">arabic</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">arab</span><span class="err">&#39;</span>    <span class="k">for</span> <span class="n">Arabic</span> <span class="n">as</span> <span class="n">a</span> <span class="k">default</span> <span class="n">second</span> <span class="n">language</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">arabicshape</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">arshape</span><span class="err">&#39;</span> <span class="k">do</span> <span class="n">shaping</span> <span class="k">for</span> <span class="n">Arabic</span> <span class="n">characters</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">autoindent</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">ai</span><span class="err">&#39;</span>     <span class="n">take</span> <span class="n">indent</span> <span class="k">for</span> <span class="k">new</span> <span class="n">line</span> <span class="n">from</span> <span class="n">previous</span> <span class="n">line</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">autoread</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">ar</span><span class="err">&#39;</span>     <span class="n">autom</span><span class="p">.</span> <span class="n">read</span> <span class="n">file</span> <span class="n">when</span> <span class="n">changed</span> <span class="n">outside</span> <span class="n">of</span> <span class="n">Vim</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">autowrite</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">aw</span><span class="err">&#39;</span>     <span class="n">automatically</span> <span class="n">write</span> <span class="n">file</span> <span class="k">if</span> <span class="n">changed</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">autowriteall</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">awa</span><span class="err">&#39;</span>     <span class="n">as</span> <span class="err">&#39;</span><span class="n">autowrite</span><span class="err">&#39;</span><span class="p">,</span> <span class="n">but</span> <span class="n">works</span> <span class="n">with</span> <span class="n">more</span> <span class="n">commands</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">background</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">bg</span><span class="err">&#39;</span>     <span class="s">&quot;dark&quot;</span> <span class="n">or</span> <span class="s">&quot;light&quot;</span><span class="p">,</span> <span class="n">used</span> <span class="k">for</span> <span class="n">highlight</span> <span class="n">colors</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">backspace</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">bs</span><span class="err">&#39;</span>     <span class="n">how</span> <span class="n">backspace</span> <span class="n">works</span> <span class="n">at</span> <span class="n">start</span> <span class="n">of</span> <span class="n">line</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">backup</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">bk</span><span class="err">&#39;</span>     <span class="n">keep</span> <span class="n">backup</span> <span class="n">file</span> <span class="n">after</span> <span class="n">overwriting</span> <span class="n">a</span> <span class="n">file</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">backupcopy</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">bkc</span><span class="err">&#39;</span>     <span class="n">make</span> <span class="n">backup</span> <span class="n">as</span> <span class="n">a</span> <span class="n">copy</span><span class="p">,</span> <span class="n">don</span><span class="err">&#39;</span><span class="n">t</span> <span class="n">rename</span> <span class="n">the</span> <span class="n">file</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">backupdir</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">bdir</span><span class="err">&#39;</span>    <span class="n">list</span> <span class="n">of</span> <span class="n">directories</span> <span class="k">for</span> <span class="n">the</span> <span class="n">backup</span> <span class="n">file</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">backupext</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">bex</span><span class="err">&#39;</span>     <span class="n">extension</span> <span class="n">used</span> <span class="k">for</span> <span class="n">the</span> <span class="n">backup</span> <span class="n">file</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">backupskip</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">bsk</span><span class="err">&#39;</span>     <span class="n">no</span> <span class="n">backup</span> <span class="k">for</span> <span class="n">files</span> <span class="n">that</span> <span class="n">match</span> <span class="n">these</span> <span class="n">patterns</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">balloondelay</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">bdlay</span><span class="err">&#39;</span>   <span class="n">delay</span> <span class="n">in</span> <span class="n">mS</span> <span class="n">before</span> <span class="n">a</span> <span class="n">balloon</span> <span class="n">may</span> <span class="n">pop</span> <span class="n">up</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">ballooneval</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">beval</span><span class="err">&#39;</span>   <span class="k">switch</span> <span class="n">on</span> <span class="n">balloon</span> <span class="n">evaluation</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">balloonexpr</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">bexpr</span><span class="err">&#39;</span>   <span class="n">expression</span> <span class="n">to</span> <span class="n">show</span> <span class="n">in</span> <span class="n">balloon</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">binary</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">bin</span><span class="err">&#39;</span>     <span class="n">read</span><span class="o">/</span><span class="n">write</span><span class="o">/</span><span class="n">edit</span> <span class="n">file</span> <span class="n">in</span> <span class="n">binary</span> <span class="n">mode</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">bioskey</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">biosk</span><span class="err">&#39;</span>   <span class="n">MS</span><span class="o">-</span><span class="nl">DOS</span><span class="p">:</span> <span class="n">use</span> <span class="n">bios</span> <span class="n">calls</span> <span class="k">for</span> <span class="n">input</span> <span class="n">characters</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">bomb</span><span class="err">&#39;</span>               <span class="n">prepend</span> <span class="n">a</span> <span class="n">Byte</span> <span class="n">Order</span> <span class="n">Mark</span> <span class="n">to</span> <span class="n">the</span> <span class="n">file</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">breakat</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">brk</span><span class="err">&#39;</span>     <span class="n">characters</span> <span class="n">that</span> <span class="n">may</span> <span class="n">cause</span> <span class="n">a</span> <span class="n">line</span> <span class="k">break</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">browsedir</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">bsdir</span><span class="err">&#39;</span>   <span class="n">which</span> <span class="n">directory</span> <span class="n">to</span> <span class="n">start</span> <span class="n">browsing</span> <span class="n">in</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">bufhidden</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">bh</span><span class="err">&#39;</span>     <span class="n">what</span> <span class="n">to</span> <span class="k">do</span> <span class="n">when</span> <span class="n">buffer</span> <span class="n">is</span> <span class="n">no</span> <span class="n">longer</span> <span class="n">in</span> <span class="n">window</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">buflisted</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">bl</span><span class="err">&#39;</span>     <span class="n">whether</span> <span class="n">the</span> <span class="n">buffer</span> <span class="n">shows</span> <span class="n">up</span> <span class="n">in</span> <span class="n">the</span> <span class="n">buffer</span> <span class="n">list</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">buftype</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">bt</span><span class="err">&#39;</span>     <span class="n">special</span> <span class="n">type</span> <span class="n">of</span> <span class="n">buffer</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">casemap</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">cmp</span><span class="err">&#39;</span>     <span class="n">specifies</span> <span class="n">how</span> <span class="k">case</span> <span class="n">of</span> <span class="n">letters</span> <span class="n">is</span> <span class="n">changed</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">cdpath</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">cd</span><span class="err">&#39;</span>     <span class="n">list</span> <span class="n">of</span> <span class="n">directories</span> <span class="n">searched</span> <span class="n">with</span> <span class="s">&quot;:cd&quot;</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">cedit</span><span class="err">&#39;</span>              <span class="n">key</span> <span class="n">used</span> <span class="n">to</span> <span class="n">open</span> <span class="n">the</span> <span class="n">command</span><span class="o">-</span><span class="n">line</span> <span class="n">window</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">charconvert</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">ccv</span><span class="err">&#39;</span>     <span class="n">expression</span> <span class="k">for</span> <span class="n">character</span> <span class="n">encoding</span> <span class="n">conversion</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">cindent</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">cin</span><span class="err">&#39;</span>     <span class="k">do</span> <span class="n">C</span> <span class="n">program</span> <span class="n">indenting</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">cinkeys</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">cink</span><span class="err">&#39;</span>    <span class="n">keys</span> <span class="n">that</span> <span class="n">trigger</span> <span class="n">indent</span> <span class="n">when</span> <span class="err">&#39;</span><span class="n">cindent</span><span class="err">&#39;</span> <span class="n">is</span> <span class="n">set</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">cinoptions</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">cino</span><span class="err">&#39;</span>    <span class="n">how</span> <span class="n">to</span> <span class="k">do</span> <span class="n">indenting</span> <span class="n">when</span> <span class="err">&#39;</span><span class="n">cindent</span><span class="err">&#39;</span> <span class="n">is</span> <span class="n">set</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">cinwords</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">cinw</span><span class="err">&#39;</span>    <span class="n">words</span> <span class="n">where</span> <span class="err">&#39;</span><span class="n">si</span><span class="err">&#39;</span> <span class="n">and</span> <span class="err">&#39;</span><span class="n">cin</span><span class="err">&#39;</span> <span class="n">add</span> <span class="n">an</span> <span class="n">indent</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">clipboard</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">cb</span><span class="err">&#39;</span>     <span class="n">use</span> <span class="n">the</span> <span class="n">clipboard</span> <span class="n">as</span> <span class="n">the</span> <span class="n">unnamed</span> <span class="k">register</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">cmdheight</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">ch</span><span class="err">&#39;</span>     <span class="n">number</span> <span class="n">of</span> <span class="n">lines</span> <span class="n">to</span> <span class="n">use</span> <span class="k">for</span> <span class="n">the</span> <span class="n">command</span><span class="o">-</span><span class="n">line</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">cmdwinheight</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">cwh</span><span class="err">&#39;</span>     <span class="n">height</span> <span class="n">of</span> <span class="n">the</span> <span class="n">command</span><span class="o">-</span><span class="n">line</span> <span class="n">window</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">colorcolumn</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">cc</span><span class="err">&#39;</span>     <span class="n">columns</span> <span class="n">to</span> <span class="n">highlight</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">columns</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">co</span><span class="err">&#39;</span>     <span class="n">number</span> <span class="n">of</span> <span class="n">columns</span> <span class="n">in</span> <span class="n">the</span> <span class="n">display</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">comments</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">com</span><span class="err">&#39;</span>     <span class="n">patterns</span> <span class="n">that</span> <span class="n">can</span> <span class="n">start</span> <span class="n">a</span> <span class="n">comment</span> <span class="n">line</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">commentstring</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">cms</span><span class="err">&#39;</span>     <span class="k">template</span> <span class="k">for</span> <span class="n">comments</span><span class="p">;</span> <span class="n">used</span> <span class="k">for</span> <span class="n">fold</span> <span class="n">marker</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">compatible</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">cp</span><span class="err">&#39;</span>     <span class="n">behave</span> <span class="n">Vi</span><span class="o">-</span><span class="n">compatible</span> <span class="n">as</span> <span class="n">much</span> <span class="n">as</span> <span class="n">possible</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">complete</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">cpt</span><span class="err">&#39;</span>     <span class="n">specify</span> <span class="n">how</span> <span class="n">Insert</span> <span class="n">mode</span> <span class="n">completion</span> <span class="n">works</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">completefunc</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">cfu</span><span class="err">&#39;</span>     <span class="n">function</span> <span class="n">to</span> <span class="n">be</span> <span class="n">used</span> <span class="k">for</span> <span class="n">Insert</span> <span class="n">mode</span> <span class="n">completion</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">completeopt</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">cot</span><span class="err">&#39;</span>     <span class="n">options</span> <span class="k">for</span> <span class="n">Insert</span> <span class="n">mode</span> <span class="n">completion</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">concealcursor</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">cocu</span><span class="err">&#39;</span>    <span class="n">whether</span> <span class="n">concealable</span> <span class="n">text</span> <span class="n">is</span> <span class="n">hidden</span> <span class="n">in</span> <span class="n">cursor</span> <span class="n">line</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">conceallevel</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">cole</span><span class="err">&#39;</span>    <span class="n">whether</span> <span class="n">concealable</span> <span class="n">text</span> <span class="n">is</span> <span class="n">shown</span> <span class="n">or</span> <span class="n">hidden</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">confirm</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">cf</span><span class="err">&#39;</span>     <span class="n">ask</span> <span class="n">what</span> <span class="n">to</span> <span class="k">do</span> <span class="n">about</span> <span class="n">unsaved</span><span class="o">/</span><span class="n">read</span><span class="o">-</span><span class="n">only</span> <span class="n">files</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">conskey</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">consk</span><span class="err">&#39;</span>   <span class="n">get</span> <span class="n">keys</span> <span class="n">directly</span> <span class="n">from</span> <span class="n">console</span> <span class="p">(</span><span class="n">MS</span><span class="o">-</span><span class="n">DOS</span> <span class="n">only</span><span class="p">)</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">copyindent</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">ci</span><span class="err">&#39;</span>     <span class="n">make</span> <span class="err">&#39;</span><span class="n">autoindent</span><span class="err">&#39;</span> <span class="n">use</span> <span class="n">existing</span> <span class="n">indent</span> <span class="n">structure</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">cpoptions</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">cpo</span><span class="err">&#39;</span>     <span class="n">flags</span> <span class="k">for</span> <span class="n">Vi</span><span class="o">-</span><span class="n">compatible</span> <span class="n">behavior</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">cryptmethod</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">cm</span><span class="err">&#39;</span>     <span class="n">type</span> <span class="n">of</span> <span class="n">encryption</span> <span class="n">to</span> <span class="n">use</span> <span class="k">for</span> <span class="n">file</span> <span class="n">writing</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">cscopepathcomp</span><span class="err">&#39;</span>  <span class="err">&#39;</span><span class="n">cspc</span><span class="err">&#39;</span>    <span class="n">how</span> <span class="n">many</span> <span class="n">components</span> <span class="n">of</span> <span class="n">the</span> <span class="n">path</span> <span class="n">to</span> <span class="n">show</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">cscopeprg</span><span class="err">&#39;</span>       <span class="err">&#39;</span><span class="n">csprg</span><span class="err">&#39;</span>   <span class="n">command</span> <span class="n">to</span> <span class="n">execute</span> <span class="n">cscope</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">cscopequickfix</span><span class="err">&#39;</span>  <span class="err">&#39;</span><span class="n">csqf</span><span class="err">&#39;</span>    <span class="n">use</span> <span class="n">quickfix</span> <span class="n">window</span> <span class="k">for</span> <span class="n">cscope</span> <span class="n">results</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">cscoperelative</span><span class="err">&#39;</span>  <span class="err">&#39;</span><span class="n">csre</span><span class="err">&#39;</span>    <span class="n">Use</span> <span class="n">cscope</span><span class="p">.</span><span class="n">out</span> <span class="n">path</span> <span class="n">basename</span> <span class="n">as</span> <span class="n">prefix</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">cscopetag</span><span class="err">&#39;</span>       <span class="err">&#39;</span><span class="n">cst</span><span class="err">&#39;</span>     <span class="n">use</span> <span class="n">cscope</span> <span class="k">for</span> <span class="n">tag</span> <span class="n">commands</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">cscopetagorder</span><span class="err">&#39;</span>  <span class="err">&#39;</span><span class="n">csto</span><span class="err">&#39;</span>    <span class="n">determines</span> <span class="s">&quot;:cstag&quot;</span> <span class="n">search</span> <span class="n">order</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">cscopeverbose</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">csverb</span><span class="err">&#39;</span>  <span class="n">give</span> <span class="n">messages</span> <span class="n">when</span> <span class="n">adding</span> <span class="n">a</span> <span class="n">cscope</span> <span class="n">database</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">cursorbind</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">crb</span><span class="err">&#39;</span>     <span class="n">move</span> <span class="n">cursor</span> <span class="n">in</span> <span class="n">window</span> <span class="n">as</span> <span class="n">it</span> <span class="n">moves</span> <span class="n">in</span> <span class="n">other</span> <span class="n">windows</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">cursorcolumn</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">cuc</span><span class="err">&#39;</span>        <span class="n">highlight</span> <span class="n">the</span> <span class="n">screen</span> <span class="n">column</span> <span class="n">of</span> <span class="n">the</span> <span class="n">cursor</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">cursorline</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">cul</span><span class="err">&#39;</span>        <span class="n">highlight</span> <span class="n">the</span> <span class="n">screen</span> <span class="n">line</span> <span class="n">of</span> <span class="n">the</span> <span class="n">cursor</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">debug</span><span class="err">&#39;</span>              <span class="n">set</span> <span class="n">to</span> <span class="s">&quot;msg&quot;</span> <span class="n">to</span> <span class="n">see</span> <span class="n">all</span> <span class="n">error</span> <span class="n">messages</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">define</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">def</span><span class="err">&#39;</span>     <span class="n">pattern</span> <span class="n">to</span> <span class="n">be</span> <span class="n">used</span> <span class="n">to</span> <span class="n">find</span> <span class="n">a</span> <span class="n">macro</span> <span class="n">definition</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">delcombine</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">deco</span><span class="err">&#39;</span>    <span class="k">delete</span> <span class="n">combining</span> <span class="n">characters</span> <span class="n">on</span> <span class="n">their</span> <span class="n">own</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">dictionary</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">dict</span><span class="err">&#39;</span>    <span class="n">list</span> <span class="n">of</span> <span class="n">file</span> <span class="n">names</span> <span class="n">used</span> <span class="k">for</span> <span class="n">keyword</span> <span class="n">completion</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">diff</span><span class="err">&#39;</span>               <span class="n">use</span> <span class="n">diff</span> <span class="n">mode</span> <span class="k">for</span> <span class="n">the</span> <span class="n">current</span> <span class="n">window</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">diffexpr</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">dex</span><span class="err">&#39;</span>     <span class="n">expression</span> <span class="n">used</span> <span class="n">to</span> <span class="n">obtain</span> <span class="n">a</span> <span class="n">diff</span> <span class="n">file</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">diffopt</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">dip</span><span class="err">&#39;</span>     <span class="n">options</span> <span class="k">for</span> <span class="k">using</span> <span class="n">diff</span> <span class="n">mode</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">digraph</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">dg</span><span class="err">&#39;</span>     <span class="n">enable</span> <span class="n">the</span> <span class="n">entering</span> <span class="n">of</span> <span class="n">digraphs</span> <span class="n">in</span> <span class="n">Insert</span> <span class="n">mode</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">directory</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">dir</span><span class="err">&#39;</span>     <span class="n">list</span> <span class="n">of</span> <span class="n">directory</span> <span class="n">names</span> <span class="k">for</span> <span class="n">the</span> <span class="n">swap</span> <span class="n">file</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">display</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">dy</span><span class="err">&#39;</span>     <span class="n">list</span> <span class="n">of</span> <span class="n">flags</span> <span class="k">for</span> <span class="n">how</span> <span class="n">to</span> <span class="n">display</span> <span class="n">text</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">eadirection</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">ead</span><span class="err">&#39;</span>     <span class="n">in</span> <span class="n">which</span> <span class="n">direction</span> <span class="err">&#39;</span><span class="n">equalalways</span><span class="err">&#39;</span> <span class="n">works</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">edcompatible</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">ed</span><span class="err">&#39;</span>     <span class="n">toggle</span> <span class="n">flags</span> <span class="n">of</span> <span class="s">&quot;:substitute&quot;</span> <span class="n">command</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">encoding</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">enc</span><span class="err">&#39;</span>     <span class="n">encoding</span> <span class="n">used</span> <span class="n">internally</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">endofline</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">eol</span><span class="err">&#39;</span>     <span class="n">write</span> <span class="o">&lt;</span><span class="n">EOL</span><span class="o">&gt;</span> <span class="k">for</span> <span class="n">last</span> <span class="n">line</span> <span class="n">in</span> <span class="n">file</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">equalalways</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">ea</span><span class="err">&#39;</span>     <span class="n">windows</span> <span class="n">are</span> <span class="n">automatically</span> <span class="n">made</span> <span class="n">the</span> <span class="n">same</span> <span class="n">size</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">equalprg</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">ep</span><span class="err">&#39;</span>     <span class="n">external</span> <span class="n">program</span> <span class="n">to</span> <span class="n">use</span> <span class="k">for</span> <span class="s">&quot;=&quot;</span> <span class="n">command</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">errorbells</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">eb</span><span class="err">&#39;</span>     <span class="n">ring</span> <span class="n">the</span> <span class="n">bell</span> <span class="k">for</span> <span class="n">error</span> <span class="n">messages</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">errorfile</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">ef</span><span class="err">&#39;</span>     <span class="n">name</span> <span class="n">of</span> <span class="n">the</span> <span class="n">errorfile</span> <span class="k">for</span> <span class="n">the</span> <span class="n">QuickFix</span> <span class="n">mode</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">errorformat</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">efm</span><span class="err">&#39;</span>     <span class="n">description</span> <span class="n">of</span> <span class="n">the</span> <span class="n">lines</span> <span class="n">in</span> <span class="n">the</span> <span class="n">error</span> <span class="n">file</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">esckeys</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">ek</span><span class="err">&#39;</span>     <span class="n">recognize</span> <span class="n">function</span> <span class="n">keys</span> <span class="n">in</span> <span class="n">Insert</span> <span class="n">mode</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">eventignore</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">ei</span><span class="err">&#39;</span>     <span class="n">autocommand</span> <span class="n">events</span> <span class="n">that</span> <span class="n">are</span> <span class="n">ignored</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">expandtab</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">et</span><span class="err">&#39;</span>     <span class="n">use</span> <span class="n">spaces</span> <span class="n">when</span> <span class="o">&lt;</span><span class="n">Tab</span><span class="o">&gt;</span> <span class="n">is</span> <span class="n">inserted</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">exrc</span><span class="err">&#39;</span>         <span class="err">&#39;</span><span class="n">ex</span><span class="err">&#39;</span>     <span class="n">read</span> <span class="p">.</span><span class="n">vimrc</span> <span class="n">and</span> <span class="p">.</span><span class="n">exrc</span> <span class="n">in</span> <span class="n">the</span> <span class="n">current</span> <span class="n">directory</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">fileencoding</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">fenc</span><span class="err">&#39;</span>    <span class="n">file</span> <span class="n">encoding</span> <span class="k">for</span> <span class="n">multi</span><span class="o">-</span><span class="n">byte</span> <span class="n">text</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">fileencodings</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">fencs</span><span class="err">&#39;</span>   <span class="n">automatically</span> <span class="n">detected</span> <span class="n">character</span> <span class="n">encodings</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">fileformat</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">ff</span><span class="err">&#39;</span>     <span class="n">file</span> <span class="n">format</span> <span class="n">used</span> <span class="k">for</span> <span class="n">file</span> <span class="n">I</span><span class="o">/</span><span class="n">O</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">fileformats</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">ffs</span><span class="err">&#39;</span>     <span class="n">automatically</span> <span class="n">detected</span> <span class="n">values</span> <span class="k">for</span> <span class="err">&#39;</span><span class="n">fileformat</span><span class="err">&#39;</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">fileignorecase</span><span class="err">&#39;</span>  <span class="err">&#39;</span><span class="n">fic</span><span class="err">&#39;</span>     <span class="n">ignore</span> <span class="k">case</span> <span class="n">when</span> <span class="k">using</span> <span class="n">file</span> <span class="n">names</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">filetype</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">ft</span><span class="err">&#39;</span>     <span class="n">type</span> <span class="n">of</span> <span class="n">file</span><span class="p">,</span> <span class="n">used</span> <span class="k">for</span> <span class="n">autocommands</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">fillchars</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">fcs</span><span class="err">&#39;</span>     <span class="n">characters</span> <span class="n">to</span> <span class="n">use</span> <span class="k">for</span> <span class="n">displaying</span> <span class="n">special</span> <span class="n">items</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">fkmap</span><span class="err">&#39;</span>        <span class="err">&#39;</span><span class="n">fk</span><span class="err">&#39;</span>     <span class="n">Farsi</span> <span class="n">keyboard</span> <span class="n">mapping</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">foldclose</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">fcl</span><span class="err">&#39;</span>     <span class="n">close</span> <span class="n">a</span> <span class="n">fold</span> <span class="n">when</span> <span class="n">the</span> <span class="n">cursor</span> <span class="n">leaves</span> <span class="n">it</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">foldcolumn</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">fdc</span><span class="err">&#39;</span>     <span class="n">width</span> <span class="n">of</span> <span class="n">the</span> <span class="n">column</span> <span class="n">used</span> <span class="n">to</span> <span class="n">indicate</span> <span class="n">folds</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">foldenable</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">fen</span><span class="err">&#39;</span>     <span class="n">set</span> <span class="n">to</span> <span class="n">display</span> <span class="n">all</span> <span class="n">folds</span> <span class="n">open</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">foldexpr</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">fde</span><span class="err">&#39;</span>     <span class="n">expression</span> <span class="n">used</span> <span class="n">when</span> <span class="err">&#39;</span><span class="n">foldmethod</span><span class="err">&#39;</span> <span class="n">is</span> <span class="s">&quot;expr&quot;</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">foldignore</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">fdi</span><span class="err">&#39;</span>     <span class="n">ignore</span> <span class="n">lines</span> <span class="n">when</span> <span class="err">&#39;</span><span class="n">foldmethod</span><span class="err">&#39;</span> <span class="n">is</span> <span class="s">&quot;indent&quot;</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">foldlevel</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">fdl</span><span class="err">&#39;</span>     <span class="n">close</span> <span class="n">folds</span> <span class="n">with</span> <span class="n">a</span> <span class="n">level</span> <span class="n">higher</span> <span class="n">than</span> <span class="k">this</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">foldlevelstart</span><span class="err">&#39;</span>  <span class="err">&#39;</span><span class="n">fdls</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">foldlevel</span><span class="err">&#39;</span> <span class="n">when</span> <span class="n">starting</span> <span class="n">to</span> <span class="n">edit</span> <span class="n">a</span> <span class="n">file</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">foldmarker</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">fmr</span><span class="err">&#39;</span>     <span class="n">markers</span> <span class="n">used</span> <span class="n">when</span> <span class="err">&#39;</span><span class="n">foldmethod</span><span class="err">&#39;</span> <span class="n">is</span> <span class="s">&quot;marker&quot;</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">foldmethod</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">fdm</span><span class="err">&#39;</span>     <span class="n">folding</span> <span class="n">type</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">foldminlines</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">fml</span><span class="err">&#39;</span>     <span class="n">minimum</span> <span class="n">number</span> <span class="n">of</span> <span class="n">lines</span> <span class="k">for</span> <span class="n">a</span> <span class="n">fold</span> <span class="n">to</span> <span class="n">be</span> <span class="n">closed</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">foldnestmax</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">fdn</span><span class="err">&#39;</span>     <span class="n">maximum</span> <span class="n">fold</span> <span class="n">depth</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">foldopen</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">fdo</span><span class="err">&#39;</span>     <span class="k">for</span> <span class="n">which</span> <span class="n">commands</span> <span class="n">a</span> <span class="n">fold</span> <span class="n">will</span> <span class="n">be</span> <span class="n">opened</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">foldtext</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">fdt</span><span class="err">&#39;</span>     <span class="n">expression</span> <span class="n">used</span> <span class="n">to</span> <span class="n">display</span> <span class="k">for</span> <span class="n">a</span> <span class="n">closed</span> <span class="n">fold</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">formatlistpat</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">flp</span><span class="err">&#39;</span>     <span class="n">pattern</span> <span class="n">used</span> <span class="n">to</span> <span class="n">recognize</span> <span class="n">a</span> <span class="n">list</span> <span class="n">header</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">formatoptions</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">fo</span><span class="err">&#39;</span>      <span class="n">how</span> <span class="n">automatic</span> <span class="n">formatting</span> <span class="n">is</span> <span class="n">to</span> <span class="n">be</span> <span class="n">done</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">formatprg</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">fp</span><span class="err">&#39;</span>     <span class="n">name</span> <span class="n">of</span> <span class="n">external</span> <span class="n">program</span> <span class="n">used</span> <span class="n">with</span> <span class="s">&quot;gq&quot;</span> <span class="n">command</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">formatexpr</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">fex</span><span class="err">&#39;</span>     <span class="n">expression</span> <span class="n">used</span> <span class="n">with</span> <span class="s">&quot;gq&quot;</span> <span class="n">command</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">fsync</span><span class="err">&#39;</span>        <span class="err">&#39;</span><span class="n">fs</span><span class="err">&#39;</span>     <span class="n">whether</span> <span class="n">to</span> <span class="n">invoke</span> <span class="n">fsync</span><span class="p">()</span> <span class="n">after</span> <span class="n">file</span> <span class="n">write</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">gdefault</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">gd</span><span class="err">&#39;</span>     <span class="n">the</span> <span class="s">&quot;:substitute&quot;</span> <span class="n">flag</span> <span class="sc">&#39;g&#39;</span> <span class="n">is</span> <span class="k">default</span> <span class="n">on</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">grepformat</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">gfm</span><span class="err">&#39;</span>     <span class="n">format</span> <span class="n">of</span> <span class="err">&#39;</span><span class="n">grepprg</span><span class="err">&#39;</span> <span class="n">output</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">grepprg</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">gp</span><span class="err">&#39;</span>     <span class="n">program</span> <span class="n">to</span> <span class="n">use</span> <span class="k">for</span> <span class="s">&quot;:grep&quot;</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">guicursor</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">gcr</span><span class="err">&#39;</span>     <span class="nl">GUI</span><span class="p">:</span> <span class="n">settings</span> <span class="k">for</span> <span class="n">cursor</span> <span class="n">shape</span> <span class="n">and</span> <span class="n">blinking</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">guifont</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">gfn</span><span class="err">&#39;</span>     <span class="nl">GUI</span><span class="p">:</span> <span class="n">Name</span><span class="p">(</span><span class="n">s</span><span class="p">)</span> <span class="n">of</span> <span class="n">font</span><span class="p">(</span><span class="n">s</span><span class="p">)</span> <span class="n">to</span> <span class="n">be</span> <span class="n">used</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">guifontset</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">gfs</span><span class="err">&#39;</span>     <span class="nl">GUI</span><span class="p">:</span> <span class="n">Names</span> <span class="n">of</span> <span class="n">multi</span><span class="o">-</span><span class="n">byte</span> <span class="n">fonts</span> <span class="n">to</span> <span class="n">be</span> <span class="n">used</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">guifontwide</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">gfw</span><span class="err">&#39;</span>     <span class="n">list</span> <span class="n">of</span> <span class="n">font</span> <span class="n">names</span> <span class="k">for</span> <span class="kt">double</span><span class="o">-</span><span class="n">wide</span> <span class="n">characters</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">guiheadroom</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">ghr</span><span class="err">&#39;</span>     <span class="nl">GUI</span><span class="p">:</span> <span class="n">pixels</span> <span class="n">room</span> <span class="k">for</span> <span class="n">window</span> <span class="n">decorations</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">guioptions</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">go</span><span class="err">&#39;</span>     <span class="nl">GUI</span><span class="p">:</span> <span class="n">Which</span> <span class="n">components</span> <span class="n">and</span> <span class="n">options</span> <span class="n">are</span> <span class="n">used</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">guipty</span><span class="err">&#39;</span>         <span class="nl">GUI</span><span class="p">:</span> <span class="n">try</span> <span class="n">to</span> <span class="n">use</span> <span class="n">a</span> <span class="n">pseudo</span><span class="o">-</span><span class="n">tty</span> <span class="k">for</span> <span class="s">&quot;:!&quot;</span> <span class="n">commands</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">guitablabel</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">gtl</span><span class="err">&#39;</span>     <span class="nl">GUI</span><span class="p">:</span> <span class="n">custom</span> <span class="n">label</span> <span class="k">for</span> <span class="n">a</span> <span class="n">tab</span> <span class="n">page</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">guitabtooltip</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">gtt</span><span class="err">&#39;</span>     <span class="nl">GUI</span><span class="p">:</span> <span class="n">custom</span> <span class="n">tooltip</span> <span class="k">for</span> <span class="n">a</span> <span class="n">tab</span> <span class="n">page</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">helpfile</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">hf</span><span class="err">&#39;</span>     <span class="n">full</span> <span class="n">path</span> <span class="n">name</span> <span class="n">of</span> <span class="n">the</span> <span class="n">main</span> <span class="n">help</span> <span class="n">file</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">helpheight</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">hh</span><span class="err">&#39;</span>     <span class="n">minimum</span> <span class="n">height</span> <span class="n">of</span> <span class="n">a</span> <span class="k">new</span> <span class="n">help</span> <span class="n">window</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">helplang</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">hlg</span><span class="err">&#39;</span>     <span class="n">preferred</span> <span class="n">help</span> <span class="n">languages</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">hidden</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">hid</span><span class="err">&#39;</span>     <span class="n">don</span><span class="err">&#39;</span><span class="n">t</span> <span class="n">unload</span> <span class="n">buffer</span> <span class="n">when</span> <span class="n">it</span> <span class="n">is</span> <span class="n">abandoned</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">highlight</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">hl</span><span class="err">&#39;</span>     <span class="n">sets</span> <span class="n">highlighting</span> <span class="n">mode</span> <span class="k">for</span> <span class="n">various</span> <span class="n">occasions</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">hlsearch</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">hls</span><span class="err">&#39;</span>     <span class="n">highlight</span> <span class="n">matches</span> <span class="n">with</span> <span class="n">last</span> <span class="n">search</span> <span class="n">pattern</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">history</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">hi</span><span class="err">&#39;</span>     <span class="n">number</span> <span class="n">of</span> <span class="n">command</span><span class="o">-</span><span class="n">lines</span> <span class="n">that</span> <span class="n">are</span> <span class="n">remembered</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">hkmap</span><span class="err">&#39;</span>        <span class="err">&#39;</span><span class="n">hk</span><span class="err">&#39;</span>     <span class="n">Hebrew</span> <span class="n">keyboard</span> <span class="n">mapping</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">hkmapp</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">hkp</span><span class="err">&#39;</span>     <span class="n">phonetic</span> <span class="n">Hebrew</span> <span class="n">keyboard</span> <span class="n">mapping</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">icon</span><span class="err">&#39;</span>               <span class="n">let</span> <span class="n">Vim</span> <span class="n">set</span> <span class="n">the</span> <span class="n">text</span> <span class="n">of</span> <span class="n">the</span> <span class="n">window</span> <span class="n">icon</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">iconstring</span><span class="err">&#39;</span>         <span class="n">string</span> <span class="n">to</span> <span class="n">use</span> <span class="k">for</span> <span class="n">the</span> <span class="n">Vim</span> <span class="n">icon</span> <span class="n">text</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">ignorecase</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">ic</span><span class="err">&#39;</span>     <span class="n">ignore</span> <span class="k">case</span> <span class="n">in</span> <span class="n">search</span> <span class="n">patterns</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">imactivatekey</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">imak</span><span class="err">&#39;</span>    <span class="n">key</span> <span class="n">that</span> <span class="n">activates</span> <span class="n">the</span> <span class="n">X</span> <span class="n">input</span> <span class="n">method</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">imactivatefunc</span><span class="err">&#39;</span>  <span class="err">&#39;</span><span class="n">imaf</span><span class="err">&#39;</span>    <span class="n">function</span> <span class="n">to</span> <span class="n">enable</span><span class="o">/</span><span class="n">disable</span> <span class="n">the</span> <span class="n">X</span> <span class="n">input</span> <span class="n">method</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">imcmdline</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">imc</span><span class="err">&#39;</span>     <span class="n">use</span> <span class="n">IM</span> <span class="n">when</span> <span class="n">starting</span> <span class="n">to</span> <span class="n">edit</span> <span class="n">a</span> <span class="n">command</span> <span class="n">line</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">imdisable</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">imd</span><span class="err">&#39;</span>     <span class="k">do</span> <span class="n">not</span> <span class="n">use</span> <span class="n">the</span> <span class="n">IM</span> <span class="n">in</span> <span class="n">any</span> <span class="n">mode</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">iminsert</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">imi</span><span class="err">&#39;</span>     <span class="nl">use</span> <span class="p">:</span><span class="n">lmap</span> <span class="n">or</span> <span class="n">IM</span> <span class="n">in</span> <span class="n">Insert</span> <span class="n">mode</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">imsearch</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">ims</span><span class="err">&#39;</span>     <span class="nl">use</span> <span class="p">:</span><span class="n">lmap</span> <span class="n">or</span> <span class="n">IM</span> <span class="n">when</span> <span class="n">typing</span> <span class="n">a</span> <span class="n">search</span> <span class="n">pattern</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">imstatusfunc</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">imsf</span><span class="err">&#39;</span>    <span class="n">function</span> <span class="n">to</span> <span class="n">obtain</span> <span class="n">X</span> <span class="n">input</span> <span class="n">method</span> <span class="n">status</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">include</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">inc</span><span class="err">&#39;</span>     <span class="n">pattern</span> <span class="n">to</span> <span class="n">be</span> <span class="n">used</span> <span class="n">to</span> <span class="n">find</span> <span class="n">an</span> <span class="n">include</span> <span class="n">file</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">includeexpr</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">inex</span><span class="err">&#39;</span>    <span class="n">expression</span> <span class="n">used</span> <span class="n">to</span> <span class="n">process</span> <span class="n">an</span> <span class="n">include</span> <span class="n">line</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">incsearch</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">is</span><span class="err">&#39;</span>     <span class="n">highlight</span> <span class="n">match</span> <span class="k">while</span> <span class="n">typing</span> <span class="n">search</span> <span class="n">pattern</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">indentexpr</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">inde</span><span class="err">&#39;</span>    <span class="n">expression</span> <span class="n">used</span> <span class="n">to</span> <span class="n">obtain</span> <span class="n">the</span> <span class="n">indent</span> <span class="n">of</span> <span class="n">a</span> <span class="n">line</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">indentkeys</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">indk</span><span class="err">&#39;</span>    <span class="n">keys</span> <span class="n">that</span> <span class="n">trigger</span> <span class="n">indenting</span> <span class="n">with</span> <span class="err">&#39;</span><span class="n">indentexpr</span><span class="err">&#39;</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">infercase</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">inf</span><span class="err">&#39;</span>     <span class="n">adjust</span> <span class="k">case</span> <span class="n">of</span> <span class="n">match</span> <span class="k">for</span> <span class="n">keyword</span> <span class="n">completion</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">insertmode</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">im</span><span class="err">&#39;</span>     <span class="n">start</span> <span class="n">the</span> <span class="n">edit</span> <span class="n">of</span> <span class="n">a</span> <span class="n">file</span> <span class="n">in</span> <span class="n">Insert</span> <span class="n">mode</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">isfname</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">isf</span><span class="err">&#39;</span>     <span class="n">characters</span> <span class="n">included</span> <span class="n">in</span> <span class="n">file</span> <span class="n">names</span> <span class="n">and</span> <span class="n">pathnames</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">isident</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">isi</span><span class="err">&#39;</span>     <span class="n">characters</span> <span class="n">included</span> <span class="n">in</span> <span class="n">identifiers</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">iskeyword</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">isk</span><span class="err">&#39;</span>     <span class="n">characters</span> <span class="n">included</span> <span class="n">in</span> <span class="n">keywords</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">isprint</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">isp</span><span class="err">&#39;</span>     <span class="n">printable</span> <span class="n">characters</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">joinspaces</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">js</span><span class="err">&#39;</span>     <span class="n">two</span> <span class="n">spaces</span> <span class="n">after</span> <span class="n">a</span> <span class="n">period</span> <span class="n">with</span> <span class="n">a</span> <span class="n">join</span> <span class="n">command</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">key</span><span class="err">&#39;</span>                <span class="n">encryption</span> <span class="n">key</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">keymap</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">kmp</span><span class="err">&#39;</span>     <span class="n">name</span> <span class="n">of</span> <span class="n">a</span> <span class="n">keyboard</span> <span class="n">mapping</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">keymodel</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">km</span><span class="err">&#39;</span>     <span class="n">enable</span> <span class="n">starting</span><span class="o">/</span><span class="n">stopping</span> <span class="n">selection</span> <span class="n">with</span> <span class="n">keys</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">keywordprg</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">kp</span><span class="err">&#39;</span>     <span class="n">program</span> <span class="n">to</span> <span class="n">use</span> <span class="k">for</span> <span class="n">the</span> <span class="s">&quot;K&quot;</span> <span class="n">command</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">langmap</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">lmap</span><span class="err">&#39;</span>    <span class="n">alphabetic</span> <span class="n">characters</span> <span class="k">for</span> <span class="n">other</span> <span class="n">language</span> <span class="n">mode</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">langmenu</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">lm</span><span class="err">&#39;</span>     <span class="n">language</span> <span class="n">to</span> <span class="n">be</span> <span class="n">used</span> <span class="k">for</span> <span class="n">the</span> <span class="n">menus</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">laststatus</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">ls</span><span class="err">&#39;</span>     <span class="n">tells</span> <span class="n">when</span> <span class="n">last</span> <span class="n">window</span> <span class="n">has</span> <span class="n">status</span> <span class="n">lines</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">lazyredraw</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">lz</span><span class="err">&#39;</span>     <span class="n">don</span><span class="err">&#39;</span><span class="n">t</span> <span class="n">redraw</span> <span class="k">while</span> <span class="n">executing</span> <span class="n">macros</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">linebreak</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">lbr</span><span class="err">&#39;</span>     <span class="n">wrap</span> <span class="kt">long</span> <span class="n">lines</span> <span class="n">at</span> <span class="n">a</span> <span class="n">blank</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">lines</span><span class="err">&#39;</span>              <span class="n">number</span> <span class="n">of</span> <span class="n">lines</span> <span class="n">in</span> <span class="n">the</span> <span class="n">display</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">linespace</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">lsp</span><span class="err">&#39;</span>     <span class="n">number</span> <span class="n">of</span> <span class="n">pixel</span> <span class="n">lines</span> <span class="n">to</span> <span class="n">use</span> <span class="n">between</span> <span class="n">characters</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">lisp</span><span class="err">&#39;</span>               <span class="n">automatic</span> <span class="n">indenting</span> <span class="k">for</span> <span class="n">Lisp</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">lispwords</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">lw</span><span class="err">&#39;</span>     <span class="n">words</span> <span class="n">that</span> <span class="n">change</span> <span class="n">how</span> <span class="n">lisp</span> <span class="n">indenting</span> <span class="n">works</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">list</span><span class="err">&#39;</span>               <span class="n">show</span> <span class="o">&lt;</span><span class="n">Tab</span><span class="o">&gt;</span> <span class="n">and</span> <span class="o">&lt;</span><span class="n">EOL</span><span class="o">&gt;</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">listchars</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">lcs</span><span class="err">&#39;</span>     <span class="n">characters</span> <span class="k">for</span> <span class="n">displaying</span> <span class="n">in</span> <span class="n">list</span> <span class="n">mode</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">loadplugins</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">lpl</span><span class="err">&#39;</span>     <span class="n">load</span> <span class="n">plugin</span> <span class="n">scripts</span> <span class="n">when</span> <span class="n">starting</span> <span class="n">up</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">macatsui</span><span class="err">&#39;</span>           <span class="n">Mac</span> <span class="nl">GUI</span><span class="p">:</span> <span class="n">use</span> <span class="n">ATSUI</span> <span class="n">text</span> <span class="n">drawing</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">magic</span><span class="err">&#39;</span>              <span class="n">changes</span> <span class="n">special</span> <span class="n">characters</span> <span class="n">in</span> <span class="n">search</span> <span class="n">patterns</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">makeef</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">mef</span><span class="err">&#39;</span>     <span class="n">name</span> <span class="n">of</span> <span class="n">the</span> <span class="n">errorfile</span> <span class="k">for</span> <span class="s">&quot;:make&quot;</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">makeprg</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">mp</span><span class="err">&#39;</span>     <span class="n">program</span> <span class="n">to</span> <span class="n">use</span> <span class="k">for</span> <span class="n">the</span> <span class="s">&quot;:make&quot;</span> <span class="n">command</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">matchpairs</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">mps</span><span class="err">&#39;</span>     <span class="n">pairs</span> <span class="n">of</span> <span class="n">characters</span> <span class="n">that</span> <span class="s">&quot;%&quot;</span> <span class="n">can</span> <span class="n">match</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">matchtime</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">mat</span><span class="err">&#39;</span>     <span class="n">tenths</span> <span class="n">of</span> <span class="n">a</span> <span class="n">second</span> <span class="n">to</span> <span class="n">show</span> <span class="n">matching</span> <span class="n">paren</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">maxcombine</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">mco</span><span class="err">&#39;</span>     <span class="n">maximum</span> <span class="n">nr</span> <span class="n">of</span> <span class="n">combining</span> <span class="n">characters</span> <span class="n">displayed</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">maxfuncdepth</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">mfd</span><span class="err">&#39;</span>     <span class="n">maximum</span> <span class="n">recursive</span> <span class="n">depth</span> <span class="k">for</span> <span class="n">user</span> <span class="n">functions</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">maxmapdepth</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">mmd</span><span class="err">&#39;</span>     <span class="n">maximum</span> <span class="n">recursive</span> <span class="n">depth</span> <span class="k">for</span> <span class="n">mapping</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">maxmem</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">mm</span><span class="err">&#39;</span>     <span class="n">maximum</span> <span class="n">memory</span> <span class="p">(</span><span class="n">in</span> <span class="n">Kbyte</span><span class="p">)</span> <span class="n">used</span> <span class="k">for</span> <span class="n">one</span> <span class="n">buffer</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">maxmempattern</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">mmp</span><span class="err">&#39;</span>     <span class="n">maximum</span> <span class="n">memory</span> <span class="p">(</span><span class="n">in</span> <span class="n">Kbyte</span><span class="p">)</span> <span class="n">used</span> <span class="k">for</span> <span class="n">pattern</span> <span class="n">search</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">maxmemtot</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">mmt</span><span class="err">&#39;</span>     <span class="n">maximum</span> <span class="n">memory</span> <span class="p">(</span><span class="n">in</span> <span class="n">Kbyte</span><span class="p">)</span> <span class="n">used</span> <span class="k">for</span> <span class="n">all</span> <span class="n">buffers</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">menuitems</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">mis</span><span class="err">&#39;</span>     <span class="n">maximum</span> <span class="n">number</span> <span class="n">of</span> <span class="n">items</span> <span class="n">in</span> <span class="n">a</span> <span class="n">menu</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">mkspellmem</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">msm</span><span class="err">&#39;</span>     <span class="n">memory</span> <span class="n">used</span> <span class="nl">before</span> <span class="p">:</span><span class="n">mkspell</span> <span class="n">compresses</span> <span class="n">the</span> <span class="n">tree</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">modeline</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">ml</span><span class="err">&#39;</span>     <span class="n">recognize</span> <span class="n">modelines</span> <span class="n">at</span> <span class="n">start</span> <span class="n">or</span> <span class="n">end</span> <span class="n">of</span> <span class="n">file</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">modelines</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">mls</span><span class="err">&#39;</span>     <span class="n">number</span> <span class="n">of</span> <span class="n">lines</span> <span class="n">checked</span> <span class="k">for</span> <span class="n">modelines</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">modifiable</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">ma</span><span class="err">&#39;</span>     <span class="n">changes</span> <span class="n">to</span> <span class="n">the</span> <span class="n">text</span> <span class="n">are</span> <span class="n">not</span> <span class="n">possible</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">modified</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">mod</span><span class="err">&#39;</span>     <span class="n">buffer</span> <span class="n">has</span> <span class="n">been</span> <span class="n">modified</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">more</span><span class="err">&#39;</span>               <span class="n">pause</span> <span class="n">listings</span> <span class="n">when</span> <span class="n">the</span> <span class="n">whole</span> <span class="n">screen</span> <span class="n">is</span> <span class="n">filled</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">mouse</span><span class="err">&#39;</span>              <span class="n">enable</span> <span class="n">the</span> <span class="n">use</span> <span class="n">of</span> <span class="n">mouse</span> <span class="n">clicks</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">mousefocus</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">mousef</span><span class="err">&#39;</span>  <span class="n">keyboard</span> <span class="n">focus</span> <span class="n">follows</span> <span class="n">the</span> <span class="n">mouse</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">mousehide</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">mh</span><span class="err">&#39;</span>     <span class="n">hide</span> <span class="n">mouse</span> <span class="n">pointer</span> <span class="k">while</span> <span class="n">typing</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">mousemodel</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">mousem</span><span class="err">&#39;</span>  <span class="n">changes</span> <span class="n">meaning</span> <span class="n">of</span> <span class="n">mouse</span> <span class="n">buttons</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">mouseshape</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">mouses</span><span class="err">&#39;</span>  <span class="n">shape</span> <span class="n">of</span> <span class="n">the</span> <span class="n">mouse</span> <span class="n">pointer</span> <span class="n">in</span> <span class="n">different</span> <span class="n">modes</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">mousetime</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">mouset</span><span class="err">&#39;</span>  <span class="n">max</span> <span class="n">time</span> <span class="n">between</span> <span class="n">mouse</span> <span class="kt">double</span><span class="o">-</span><span class="n">click</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">mzquantum</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">mzq</span><span class="err">&#39;</span>     <span class="n">the</span> <span class="n">interval</span> <span class="n">between</span> <span class="n">polls</span> <span class="k">for</span> <span class="n">MzScheme</span> <span class="n">threads</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">nrformats</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">nf</span><span class="err">&#39;</span>     <span class="n">number</span> <span class="n">formats</span> <span class="n">recognized</span> <span class="k">for</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">A</span> <span class="n">command</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">number</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">nu</span><span class="err">&#39;</span>     <span class="n">print</span> <span class="n">the</span> <span class="n">line</span> <span class="n">number</span> <span class="n">in</span> <span class="n">front</span> <span class="n">of</span> <span class="n">each</span> <span class="n">line</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">numberwidth</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">nuw</span><span class="err">&#39;</span>     <span class="n">number</span> <span class="n">of</span> <span class="n">columns</span> <span class="n">used</span> <span class="k">for</span> <span class="n">the</span> <span class="n">line</span> <span class="n">number</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">omnifunc</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">ofu</span><span class="err">&#39;</span>     <span class="n">function</span> <span class="k">for</span> <span class="n">filetype</span><span class="o">-</span><span class="n">specific</span> <span class="n">completion</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">opendevice</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">odev</span><span class="err">&#39;</span>    <span class="n">allow</span> <span class="n">reading</span><span class="o">/</span><span class="n">writing</span> <span class="n">devices</span> <span class="n">on</span> <span class="n">MS</span><span class="o">-</span><span class="n">Windows</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">operatorfunc</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">opfunc</span><span class="err">&#39;</span>  <span class="n">function</span> <span class="n">to</span> <span class="n">be</span> <span class="n">called</span> <span class="k">for</span> <span class="n">g</span><span class="err">@</span> <span class="k">operator</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">osfiletype</span><span class="err">&#39;</span>       <span class="err">&#39;</span><span class="n">oft</span><span class="err">&#39;</span>     <span class="n">no</span> <span class="n">longer</span> <span class="n">supported</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">paragraphs</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">para</span><span class="err">&#39;</span>    <span class="n">nroff</span> <span class="n">macros</span> <span class="n">that</span> <span class="n">separate</span> <span class="n">paragraphs</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">paste</span><span class="err">&#39;</span>              <span class="n">allow</span> <span class="n">pasting</span> <span class="n">text</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">pastetoggle</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">pt</span><span class="err">&#39;</span>     <span class="n">key</span> <span class="n">code</span> <span class="n">that</span> <span class="n">causes</span> <span class="err">&#39;</span><span class="n">paste</span><span class="err">&#39;</span> <span class="n">to</span> <span class="n">toggle</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">patchexpr</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">pex</span><span class="err">&#39;</span>     <span class="n">expression</span> <span class="n">used</span> <span class="n">to</span> <span class="n">patch</span> <span class="n">a</span> <span class="n">file</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">patchmode</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">pm</span><span class="err">&#39;</span>     <span class="n">keep</span> <span class="n">the</span> <span class="n">oldest</span> <span class="n">version</span> <span class="n">of</span> <span class="n">a</span> <span class="n">file</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">path</span><span class="err">&#39;</span>         <span class="err">&#39;</span><span class="n">pa</span><span class="err">&#39;</span>     <span class="n">list</span> <span class="n">of</span> <span class="n">directories</span> <span class="n">searched</span> <span class="n">with</span> <span class="s">&quot;gf&quot;</span> <span class="n">et</span><span class="p">.</span><span class="n">al</span><span class="p">.</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">preserveindent</span><span class="err">&#39;</span>  <span class="err">&#39;</span><span class="n">pi</span><span class="err">&#39;</span>      <span class="n">preserve</span> <span class="n">the</span> <span class="n">indent</span> <span class="n">structure</span> <span class="n">when</span> <span class="n">reindenting</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">previewheight</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">pvh</span><span class="err">&#39;</span>     <span class="n">height</span> <span class="n">of</span> <span class="n">the</span> <span class="n">preview</span> <span class="n">window</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">previewwindow</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">pvw</span><span class="err">&#39;</span>     <span class="n">identifies</span> <span class="n">the</span> <span class="n">preview</span> <span class="n">window</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">printdevice</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">pdev</span><span class="err">&#39;</span>    <span class="n">name</span> <span class="n">of</span> <span class="n">the</span> <span class="n">printer</span> <span class="n">to</span> <span class="n">be</span> <span class="n">used</span> <span class="k">for</span> <span class="o">:</span><span class="n">hardcopy</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">printencoding</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">penc</span><span class="err">&#39;</span>    <span class="n">encoding</span> <span class="n">to</span> <span class="n">be</span> <span class="n">used</span> <span class="k">for</span> <span class="n">printing</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">printexpr</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">pexpr</span><span class="err">&#39;</span>   <span class="n">expression</span> <span class="n">used</span> <span class="n">to</span> <span class="n">print</span> <span class="n">PostScript</span> <span class="k">for</span> <span class="o">:</span><span class="n">hardcopy</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">printfont</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">pfn</span><span class="err">&#39;</span>     <span class="n">name</span> <span class="n">of</span> <span class="n">the</span> <span class="n">font</span> <span class="n">to</span> <span class="n">be</span> <span class="n">used</span> <span class="k">for</span> <span class="o">:</span><span class="n">hardcopy</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">printheader</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">pheader</span><span class="err">&#39;</span> <span class="n">format</span> <span class="n">of</span> <span class="n">the</span> <span class="n">header</span> <span class="n">used</span> <span class="k">for</span> <span class="o">:</span><span class="n">hardcopy</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">printmbcharset</span><span class="err">&#39;</span>  <span class="err">&#39;</span><span class="n">pmbcs</span><span class="err">&#39;</span>   <span class="n">CJK</span> <span class="n">character</span> <span class="n">set</span> <span class="n">to</span> <span class="n">be</span> <span class="n">used</span> <span class="k">for</span> <span class="o">:</span><span class="n">hardcopy</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">printmbfont</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">pmbfn</span><span class="err">&#39;</span>   <span class="n">font</span> <span class="n">names</span> <span class="n">to</span> <span class="n">be</span> <span class="n">used</span> <span class="k">for</span> <span class="n">CJK</span> <span class="n">output</span> <span class="nl">of</span> <span class="p">:</span><span class="n">hardcopy</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">printoptions</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">popt</span><span class="err">&#39;</span>    <span class="n">controls</span> <span class="n">the</span> <span class="n">format</span> <span class="nl">of</span> <span class="p">:</span><span class="n">hardcopy</span> <span class="n">output</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">pumheight</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">ph</span><span class="err">&#39;</span>     <span class="n">maximum</span> <span class="n">height</span> <span class="n">of</span> <span class="n">the</span> <span class="n">popup</span> <span class="n">menu</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">quoteescape</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">qe</span><span class="err">&#39;</span>     <span class="n">escape</span> <span class="n">characters</span> <span class="n">used</span> <span class="n">in</span> <span class="n">a</span> <span class="n">string</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">readonly</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">ro</span><span class="err">&#39;</span>     <span class="n">disallow</span> <span class="n">writing</span> <span class="n">the</span> <span class="n">buffer</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">redrawtime</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">rdt</span><span class="err">&#39;</span>     <span class="n">timeout</span> <span class="k">for</span> <span class="err">&#39;</span><span class="n">hlsearch</span><span class="err">&#39;</span> <span class="nl">and</span> <span class="p">:</span><span class="n">match</span> <span class="n">highlighting</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">regexpengine</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">re</span><span class="err">&#39;</span>     <span class="k">default</span> <span class="n">regexp</span> <span class="n">engine</span> <span class="n">to</span> <span class="n">use</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">relativenumber</span><span class="err">&#39;</span>  <span class="err">&#39;</span><span class="n">rnu</span><span class="err">&#39;</span>     <span class="n">show</span> <span class="n">relative</span> <span class="n">line</span> <span class="n">number</span> <span class="n">in</span> <span class="n">front</span> <span class="n">of</span> <span class="n">each</span> <span class="n">line</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">remap</span><span class="err">&#39;</span>              <span class="n">allow</span> <span class="n">mappings</span> <span class="n">to</span> <span class="n">work</span> <span class="n">recursively</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">report</span><span class="err">&#39;</span>         <span class="n">threshold</span> <span class="k">for</span> <span class="n">reporting</span> <span class="n">nr</span><span class="p">.</span> <span class="n">of</span> <span class="n">lines</span> <span class="n">changed</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">restorescreen</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">rs</span><span class="err">&#39;</span>      <span class="nl">Win32</span><span class="p">:</span> <span class="n">restore</span> <span class="n">screen</span> <span class="n">when</span> <span class="n">exiting</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">revins</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">ri</span><span class="err">&#39;</span>     <span class="n">inserting</span> <span class="n">characters</span> <span class="n">will</span> <span class="n">work</span> <span class="n">backwards</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">rightleft</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">rl</span><span class="err">&#39;</span>     <span class="n">window</span> <span class="n">is</span> <span class="n">right</span><span class="o">-</span><span class="n">to</span><span class="o">-</span><span class="n">left</span> <span class="n">oriented</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">rightleftcmd</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">rlc</span><span class="err">&#39;</span>     <span class="n">commands</span> <span class="k">for</span> <span class="n">which</span> <span class="n">editing</span> <span class="n">works</span> <span class="n">right</span><span class="o">-</span><span class="n">to</span><span class="o">-</span><span class="n">left</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">ruler</span><span class="err">&#39;</span>        <span class="err">&#39;</span><span class="n">ru</span><span class="err">&#39;</span>     <span class="n">show</span> <span class="n">cursor</span> <span class="n">line</span> <span class="n">and</span> <span class="n">column</span> <span class="n">in</span> <span class="n">the</span> <span class="n">status</span> <span class="n">line</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">rulerformat</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">ruf</span><span class="err">&#39;</span>     <span class="n">custom</span> <span class="n">format</span> <span class="k">for</span> <span class="n">the</span> <span class="n">ruler</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">runtimepath</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">rtp</span><span class="err">&#39;</span>     <span class="n">list</span> <span class="n">of</span> <span class="n">directories</span> <span class="n">used</span> <span class="k">for</span> <span class="n">runtime</span> <span class="n">files</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">scroll</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">scr</span><span class="err">&#39;</span>     <span class="n">lines</span> <span class="n">to</span> <span class="n">scroll</span> <span class="n">with</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">U</span> <span class="n">and</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">D</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">scrollbind</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">scb</span><span class="err">&#39;</span>     <span class="n">scroll</span> <span class="n">in</span> <span class="n">window</span> <span class="n">as</span> <span class="n">other</span> <span class="n">windows</span> <span class="n">scroll</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">scrolljump</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">sj</span><span class="err">&#39;</span>     <span class="n">minimum</span> <span class="n">number</span> <span class="n">of</span> <span class="n">lines</span> <span class="n">to</span> <span class="n">scroll</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">scrolloff</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">so</span><span class="err">&#39;</span>     <span class="n">minimum</span> <span class="n">nr</span><span class="p">.</span> <span class="n">of</span> <span class="n">lines</span> <span class="n">above</span> <span class="n">and</span> <span class="n">below</span> <span class="n">cursor</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">scrollopt</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">sbo</span><span class="err">&#39;</span>     <span class="n">how</span> <span class="err">&#39;</span><span class="n">scrollbind</span><span class="err">&#39;</span> <span class="n">should</span> <span class="n">behave</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">sections</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">sect</span><span class="err">&#39;</span>    <span class="n">nroff</span> <span class="n">macros</span> <span class="n">that</span> <span class="n">separate</span> <span class="n">sections</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">secure</span><span class="err">&#39;</span>         <span class="n">secure</span> <span class="n">mode</span> <span class="k">for</span> <span class="n">reading</span> <span class="p">.</span><span class="n">vimrc</span> <span class="n">in</span> <span class="n">current</span> <span class="n">dir</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">selection</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">sel</span><span class="err">&#39;</span>     <span class="n">what</span> <span class="n">type</span> <span class="n">of</span> <span class="n">selection</span> <span class="n">to</span> <span class="n">use</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">selectmode</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">slm</span><span class="err">&#39;</span>     <span class="n">when</span> <span class="n">to</span> <span class="n">use</span> <span class="n">Select</span> <span class="n">mode</span> <span class="n">instead</span> <span class="n">of</span> <span class="n">Visual</span> <span class="n">mode</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">sessionoptions</span><span class="err">&#39;</span>  <span class="err">&#39;</span><span class="n">ssop</span><span class="err">&#39;</span>    <span class="n">options</span> <span class="k">for</span> <span class="o">:</span><span class="n">mksession</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">shell</span><span class="err">&#39;</span>        <span class="err">&#39;</span><span class="n">sh</span><span class="err">&#39;</span>     <span class="n">name</span> <span class="n">of</span> <span class="n">shell</span> <span class="n">to</span> <span class="n">use</span> <span class="k">for</span> <span class="n">external</span> <span class="n">commands</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">shellcmdflag</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">shcf</span><span class="err">&#39;</span>    <span class="n">flag</span> <span class="n">to</span> <span class="n">shell</span> <span class="n">to</span> <span class="n">execute</span> <span class="n">one</span> <span class="n">command</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">shellpipe</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">sp</span><span class="err">&#39;</span>     <span class="n">string</span> <span class="n">to</span> <span class="n">put</span> <span class="n">output</span> <span class="n">of</span> <span class="s">&quot;:make&quot;</span> <span class="n">in</span> <span class="n">error</span> <span class="n">file</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">shellquote</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">shq</span><span class="err">&#39;</span>     <span class="n">quote</span> <span class="n">character</span><span class="p">(</span><span class="n">s</span><span class="p">)</span> <span class="k">for</span> <span class="n">around</span> <span class="n">shell</span> <span class="n">command</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">shellredir</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">srr</span><span class="err">&#39;</span>     <span class="n">string</span> <span class="n">to</span> <span class="n">put</span> <span class="n">output</span> <span class="n">of</span> <span class="n">filter</span> <span class="n">in</span> <span class="n">a</span> <span class="n">temp</span> <span class="n">file</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">shellslash</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">ssl</span><span class="err">&#39;</span>     <span class="n">use</span> <span class="n">forward</span> <span class="n">slash</span> <span class="k">for</span> <span class="n">shell</span> <span class="n">file</span> <span class="n">names</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">shelltemp</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">stmp</span><span class="err">&#39;</span>    <span class="n">whether</span> <span class="n">to</span> <span class="n">use</span> <span class="n">a</span> <span class="n">temp</span> <span class="n">file</span> <span class="k">for</span> <span class="n">shell</span> <span class="n">commands</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">shelltype</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">st</span><span class="err">&#39;</span>     <span class="nl">Amiga</span><span class="p">:</span> <span class="n">influences</span> <span class="n">how</span> <span class="n">to</span> <span class="n">use</span> <span class="n">a</span> <span class="n">shell</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">shellxescape</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">sxe</span><span class="err">&#39;</span>     <span class="n">characters</span> <span class="n">to</span> <span class="n">escape</span> <span class="n">when</span> <span class="err">&#39;</span><span class="n">shellxquote</span><span class="err">&#39;</span> <span class="n">is</span> <span class="p">(</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">shellxquote</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">sxq</span><span class="err">&#39;</span>     <span class="n">like</span> <span class="err">&#39;</span><span class="n">shellquote</span><span class="err">&#39;</span><span class="p">,</span> <span class="n">but</span> <span class="n">include</span> <span class="n">redirection</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">shiftround</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">sr</span><span class="err">&#39;</span>     <span class="n">round</span> <span class="n">indent</span> <span class="n">to</span> <span class="n">multiple</span> <span class="n">of</span> <span class="n">shiftwidth</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">shiftwidth</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">sw</span><span class="err">&#39;</span>     <span class="n">number</span> <span class="n">of</span> <span class="n">spaces</span> <span class="n">to</span> <span class="n">use</span> <span class="k">for</span> <span class="p">(</span><span class="k">auto</span><span class="p">)</span><span class="n">indent</span> <span class="n">step</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">shortmess</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">shm</span><span class="err">&#39;</span>     <span class="n">list</span> <span class="n">of</span> <span class="n">flags</span><span class="p">,</span> <span class="n">reduce</span> <span class="n">length</span> <span class="n">of</span> <span class="n">messages</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">shortname</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">sn</span><span class="err">&#39;</span>     <span class="n">non</span><span class="o">-</span><span class="n">MS</span><span class="o">-</span><span class="nl">DOS</span><span class="p">:</span> <span class="n">Filenames</span> <span class="n">assumed</span> <span class="n">to</span> <span class="n">be</span> <span class="mf">8.3</span> <span class="n">chars</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">showbreak</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">sbr</span><span class="err">&#39;</span>     <span class="n">string</span> <span class="n">to</span> <span class="n">use</span> <span class="n">at</span> <span class="n">the</span> <span class="n">start</span> <span class="n">of</span> <span class="n">wrapped</span> <span class="n">lines</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">showcmd</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">sc</span><span class="err">&#39;</span>     <span class="n">show</span> <span class="p">(</span><span class="n">partial</span><span class="p">)</span> <span class="n">command</span> <span class="n">in</span> <span class="n">status</span> <span class="n">line</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">showfulltag</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">sft</span><span class="err">&#39;</span>     <span class="n">show</span> <span class="n">full</span> <span class="n">tag</span> <span class="n">pattern</span> <span class="n">when</span> <span class="n">completing</span> <span class="n">tag</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">showmatch</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">sm</span><span class="err">&#39;</span>     <span class="n">briefly</span> <span class="n">jump</span> <span class="n">to</span> <span class="n">matching</span> <span class="n">bracket</span> <span class="k">if</span> <span class="n">insert</span> <span class="n">one</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">showmode</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">smd</span><span class="err">&#39;</span>     <span class="n">message</span> <span class="n">on</span> <span class="n">status</span> <span class="n">line</span> <span class="n">to</span> <span class="n">show</span> <span class="n">current</span> <span class="n">mode</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">showtabline</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">stal</span><span class="err">&#39;</span>    <span class="n">tells</span> <span class="n">when</span> <span class="n">the</span> <span class="n">tab</span> <span class="n">pages</span> <span class="n">line</span> <span class="n">is</span> <span class="n">displayed</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">sidescroll</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">ss</span><span class="err">&#39;</span>     <span class="n">minimum</span> <span class="n">number</span> <span class="n">of</span> <span class="n">columns</span> <span class="n">to</span> <span class="n">scroll</span> <span class="n">horizontal</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">sidescrolloff</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">siso</span><span class="err">&#39;</span>    <span class="n">min</span><span class="p">.</span> <span class="n">nr</span><span class="p">.</span> <span class="n">of</span> <span class="n">columns</span> <span class="n">to</span> <span class="n">left</span> <span class="n">and</span> <span class="n">right</span> <span class="n">of</span> <span class="n">cursor</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">smartcase</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">scs</span><span class="err">&#39;</span>     <span class="n">no</span> <span class="n">ignore</span> <span class="k">case</span> <span class="n">when</span> <span class="n">pattern</span> <span class="n">has</span> <span class="n">uppercase</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">smartindent</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">si</span><span class="err">&#39;</span>     <span class="n">smart</span> <span class="n">autoindenting</span> <span class="k">for</span> <span class="n">C</span> <span class="n">programs</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">smarttab</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">sta</span><span class="err">&#39;</span>     <span class="n">use</span> <span class="err">&#39;</span><span class="n">shiftwidth</span><span class="err">&#39;</span> <span class="n">when</span> <span class="n">inserting</span> <span class="o">&lt;</span><span class="n">Tab</span><span class="o">&gt;</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">softtabstop</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">sts</span><span class="err">&#39;</span>     <span class="n">number</span> <span class="n">of</span> <span class="n">spaces</span> <span class="n">that</span> <span class="o">&lt;</span><span class="n">Tab</span><span class="o">&gt;</span> <span class="n">uses</span> <span class="k">while</span> <span class="n">editing</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">spell</span><span class="err">&#39;</span>              <span class="n">enable</span> <span class="n">spell</span> <span class="n">checking</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">spellcapcheck</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">spc</span><span class="err">&#39;</span>     <span class="n">pattern</span> <span class="n">to</span> <span class="n">locate</span> <span class="n">end</span> <span class="n">of</span> <span class="n">a</span> <span class="n">sentence</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">spellfile</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">spf</span><span class="err">&#39;</span>     <span class="n">files</span> <span class="n">where</span> <span class="n">zg</span> <span class="n">and</span> <span class="n">zw</span> <span class="n">store</span> <span class="n">words</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">spelllang</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">spl</span><span class="err">&#39;</span>     <span class="n">language</span><span class="p">(</span><span class="n">s</span><span class="p">)</span> <span class="n">to</span> <span class="k">do</span> <span class="n">spell</span> <span class="n">checking</span> <span class="k">for</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">spellsuggest</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">sps</span><span class="err">&#39;</span>     <span class="n">method</span><span class="p">(</span><span class="n">s</span><span class="p">)</span> <span class="n">used</span> <span class="n">to</span> <span class="n">suggest</span> <span class="n">spelling</span> <span class="n">corrections</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">splitbelow</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">sb</span><span class="err">&#39;</span>     <span class="k">new</span> <span class="n">window</span> <span class="n">from</span> <span class="n">split</span> <span class="n">is</span> <span class="n">below</span> <span class="n">the</span> <span class="n">current</span> <span class="n">one</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">splitright</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">spr</span><span class="err">&#39;</span>     <span class="k">new</span> <span class="n">window</span> <span class="n">is</span> <span class="n">put</span> <span class="n">right</span> <span class="n">of</span> <span class="n">the</span> <span class="n">current</span> <span class="n">one</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">startofline</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">sol</span><span class="err">&#39;</span>     <span class="n">commands</span> <span class="n">move</span> <span class="n">cursor</span> <span class="n">to</span> <span class="n">first</span> <span class="n">non</span><span class="o">-</span><span class="n">blank</span> <span class="n">in</span> <span class="n">line</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">statusline</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">stl</span><span class="err">&#39;</span>     <span class="n">custom</span> <span class="n">format</span> <span class="k">for</span> <span class="n">the</span> <span class="n">status</span> <span class="n">line</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">suffixes</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">su</span><span class="err">&#39;</span>     <span class="n">suffixes</span> <span class="n">that</span> <span class="n">are</span> <span class="n">ignored</span> <span class="n">with</span> <span class="n">multiple</span> <span class="n">match</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">suffixesadd</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">sua</span><span class="err">&#39;</span>     <span class="n">suffixes</span> <span class="n">added</span> <span class="n">when</span> <span class="n">searching</span> <span class="k">for</span> <span class="n">a</span> <span class="n">file</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">swapfile</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">swf</span><span class="err">&#39;</span>     <span class="n">whether</span> <span class="n">to</span> <span class="n">use</span> <span class="n">a</span> <span class="n">swapfile</span> <span class="k">for</span> <span class="n">a</span> <span class="n">buffer</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">swapsync</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">sws</span><span class="err">&#39;</span>     <span class="n">how</span> <span class="n">to</span> <span class="n">sync</span> <span class="n">the</span> <span class="n">swap</span> <span class="n">file</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">switchbuf</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">swb</span><span class="err">&#39;</span>     <span class="n">sets</span> <span class="n">behavior</span> <span class="n">when</span> <span class="n">switching</span> <span class="n">to</span> <span class="n">another</span> <span class="n">buffer</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">synmaxcol</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">smc</span><span class="err">&#39;</span>     <span class="n">maximum</span> <span class="n">column</span> <span class="n">to</span> <span class="n">find</span> <span class="n">syntax</span> <span class="n">items</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">syntax</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">syn</span><span class="err">&#39;</span>     <span class="n">syntax</span> <span class="n">to</span> <span class="n">be</span> <span class="n">loaded</span> <span class="k">for</span> <span class="n">current</span> <span class="n">buffer</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">tabstop</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">ts</span><span class="err">&#39;</span>     <span class="n">number</span> <span class="n">of</span> <span class="n">spaces</span> <span class="n">that</span> <span class="o">&lt;</span><span class="n">Tab</span><span class="o">&gt;</span> <span class="n">in</span> <span class="n">file</span> <span class="n">uses</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">tabline</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">tal</span><span class="err">&#39;</span>     <span class="n">custom</span> <span class="n">format</span> <span class="k">for</span> <span class="n">the</span> <span class="n">console</span> <span class="n">tab</span> <span class="n">pages</span> <span class="n">line</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">tabpagemax</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">tpm</span><span class="err">&#39;</span>     <span class="n">maximum</span> <span class="n">number</span> <span class="n">of</span> <span class="n">tab</span> <span class="n">pages</span> <span class="k">for</span> <span class="o">-</span><span class="n">p</span> <span class="n">and</span> <span class="s">&quot;tab all&quot;</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">tagbsearch</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">tbs</span><span class="err">&#39;</span>     <span class="n">use</span> <span class="n">binary</span> <span class="n">searching</span> <span class="n">in</span> <span class="n">tags</span> <span class="n">files</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">taglength</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">tl</span><span class="err">&#39;</span>     <span class="n">number</span> <span class="n">of</span> <span class="n">significant</span> <span class="n">characters</span> <span class="k">for</span> <span class="n">a</span> <span class="n">tag</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">tagrelative</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">tr</span><span class="err">&#39;</span>     <span class="n">file</span> <span class="n">names</span> <span class="n">in</span> <span class="n">tag</span> <span class="n">file</span> <span class="n">are</span> <span class="n">relative</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">tags</span><span class="err">&#39;</span>         <span class="err">&#39;</span><span class="n">tag</span><span class="err">&#39;</span>     <span class="n">list</span> <span class="n">of</span> <span class="n">file</span> <span class="n">names</span> <span class="n">used</span> <span class="n">by</span> <span class="n">the</span> <span class="n">tag</span> <span class="n">command</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">tagstack</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">tgst</span><span class="err">&#39;</span>    <span class="n">push</span> <span class="n">tags</span> <span class="n">onto</span> <span class="n">the</span> <span class="n">tag</span> <span class="n">stack</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">term</span><span class="err">&#39;</span>               <span class="n">name</span> <span class="n">of</span> <span class="n">the</span> <span class="n">terminal</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">termbidi</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">tbidi</span><span class="err">&#39;</span>   <span class="n">terminal</span> <span class="n">takes</span> <span class="n">care</span> <span class="n">of</span> <span class="n">bi</span><span class="o">-</span><span class="n">directionality</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">termencoding</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">tenc</span><span class="err">&#39;</span>    <span class="n">character</span> <span class="n">encoding</span> <span class="n">used</span> <span class="n">by</span> <span class="n">the</span> <span class="n">terminal</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">terse</span><span class="err">&#39;</span>              <span class="n">shorten</span> <span class="n">some</span> <span class="n">messages</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">textauto</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">ta</span><span class="err">&#39;</span>     <span class="n">obsolete</span><span class="p">,</span> <span class="n">use</span> <span class="err">&#39;</span><span class="n">fileformats</span><span class="err">&#39;</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">textmode</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">tx</span><span class="err">&#39;</span>     <span class="n">obsolete</span><span class="p">,</span> <span class="n">use</span> <span class="err">&#39;</span><span class="n">fileformat</span><span class="err">&#39;</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">textwidth</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">tw</span><span class="err">&#39;</span>     <span class="n">maximum</span> <span class="n">width</span> <span class="n">of</span> <span class="n">text</span> <span class="n">that</span> <span class="n">is</span> <span class="n">being</span> <span class="n">inserted</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">thesaurus</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">tsr</span><span class="err">&#39;</span>     <span class="n">list</span> <span class="n">of</span> <span class="n">thesaurus</span> <span class="n">files</span> <span class="k">for</span> <span class="n">keyword</span> <span class="n">completion</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">tildeop</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">top</span><span class="err">&#39;</span>     <span class="n">tilde</span> <span class="n">command</span> <span class="s">&quot;~&quot;</span> <span class="n">behaves</span> <span class="n">like</span> <span class="n">an</span> <span class="k">operator</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">timeout</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">to</span><span class="err">&#39;</span>     <span class="n">time</span> <span class="n">out</span> <span class="n">on</span> <span class="n">mappings</span> <span class="n">and</span> <span class="n">key</span> <span class="n">codes</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">timeoutlen</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">tm</span><span class="err">&#39;</span>     <span class="n">time</span> <span class="n">out</span> <span class="n">time</span> <span class="n">in</span> <span class="n">milliseconds</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">title</span><span class="err">&#39;</span>              <span class="n">let</span> <span class="n">Vim</span> <span class="n">set</span> <span class="n">the</span> <span class="n">title</span> <span class="n">of</span> <span class="n">the</span> <span class="n">window</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">titlelen</span><span class="err">&#39;</span>           <span class="n">percentage</span> <span class="n">of</span> <span class="err">&#39;</span><span class="n">columns</span><span class="err">&#39;</span> <span class="n">used</span> <span class="k">for</span> <span class="n">window</span> <span class="n">title</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">titleold</span><span class="err">&#39;</span>           <span class="n">old</span> <span class="n">title</span><span class="p">,</span> <span class="n">restored</span> <span class="n">when</span> <span class="n">exiting</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">titlestring</span><span class="err">&#39;</span>            <span class="n">string</span> <span class="n">to</span> <span class="n">use</span> <span class="k">for</span> <span class="n">the</span> <span class="n">Vim</span> <span class="n">window</span> <span class="n">title</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">toolbar</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">tb</span><span class="err">&#39;</span>     <span class="nl">GUI</span><span class="p">:</span> <span class="n">which</span> <span class="n">items</span> <span class="n">to</span> <span class="n">show</span> <span class="n">in</span> <span class="n">the</span> <span class="n">toolbar</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">toolbariconsize</span><span class="sc">&#39; &#39;</span><span class="n">tbis</span><span class="err">&#39;</span>    <span class="n">size</span> <span class="n">of</span> <span class="n">the</span> <span class="n">toolbar</span> <span class="n">icons</span> <span class="p">(</span><span class="k">for</span> <span class="n">GTK</span> <span class="mi">2</span> <span class="n">only</span><span class="p">)</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">ttimeout</span><span class="err">&#39;</span>           <span class="n">time</span> <span class="n">out</span> <span class="n">on</span> <span class="n">mappings</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">ttimeoutlen</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">ttm</span><span class="err">&#39;</span>     <span class="n">time</span> <span class="n">out</span> <span class="n">time</span> <span class="k">for</span> <span class="n">key</span> <span class="n">codes</span> <span class="n">in</span> <span class="n">milliseconds</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">ttybuiltin</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">tbi</span><span class="err">&#39;</span>     <span class="n">use</span> <span class="n">built</span><span class="o">-</span><span class="n">in</span> <span class="n">termcap</span> <span class="n">before</span> <span class="n">external</span> <span class="n">termcap</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">ttyfast</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">tf</span><span class="err">&#39;</span>     <span class="n">indicates</span> <span class="n">a</span> <span class="n">fast</span> <span class="n">terminal</span> <span class="n">connection</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">ttymouse</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">ttym</span><span class="err">&#39;</span>    <span class="n">type</span> <span class="n">of</span> <span class="n">mouse</span> <span class="n">codes</span> <span class="n">generated</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">ttyscroll</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">tsl</span><span class="err">&#39;</span>     <span class="n">maximum</span> <span class="n">number</span> <span class="n">of</span> <span class="n">lines</span> <span class="k">for</span> <span class="n">a</span> <span class="n">scroll</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">ttytype</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">tty</span><span class="err">&#39;</span>     <span class="n">alias</span> <span class="k">for</span> <span class="err">&#39;</span><span class="n">term</span><span class="err">&#39;</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">undodir</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">udir</span><span class="err">&#39;</span>    <span class="n">where</span> <span class="n">to</span> <span class="n">store</span> <span class="n">undo</span> <span class="n">files</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">undofile</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">udf</span><span class="err">&#39;</span>        <span class="n">save</span> <span class="n">undo</span> <span class="n">information</span> <span class="n">in</span> <span class="n">a</span> <span class="n">file</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">undolevels</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">ul</span><span class="err">&#39;</span>     <span class="n">maximum</span> <span class="n">number</span> <span class="n">of</span> <span class="n">changes</span> <span class="n">that</span> <span class="n">can</span> <span class="n">be</span> <span class="n">undone</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">undoreload</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">ur</span><span class="err">&#39;</span>     <span class="n">max</span> <span class="n">nr</span> <span class="n">of</span> <span class="n">lines</span> <span class="n">to</span> <span class="n">save</span> <span class="k">for</span> <span class="n">undo</span> <span class="n">on</span> <span class="n">a</span> <span class="n">buffer</span> <span class="n">reload</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">updatecount</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">uc</span><span class="err">&#39;</span>     <span class="n">after</span> <span class="k">this</span> <span class="n">many</span> <span class="n">characters</span> <span class="n">flush</span> <span class="n">swap</span> <span class="n">file</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">updatetime</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">ut</span><span class="err">&#39;</span>     <span class="n">after</span> <span class="k">this</span> <span class="n">many</span> <span class="n">milliseconds</span> <span class="n">flush</span> <span class="n">swap</span> <span class="n">file</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">verbose</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">vbs</span><span class="err">&#39;</span>     <span class="n">give</span> <span class="n">informative</span> <span class="n">messages</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">verbosefile</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">vfile</span><span class="err">&#39;</span>   <span class="n">file</span> <span class="n">to</span> <span class="n">write</span> <span class="n">messages</span> <span class="n">in</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">viewdir</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">vdir</span><span class="err">&#39;</span>    <span class="n">directory</span> <span class="n">where</span> <span class="n">to</span> <span class="n">store</span> <span class="n">files</span> <span class="nl">with</span> <span class="p">:</span><span class="n">mkview</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">viewoptions</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">vop</span><span class="err">&#39;</span>     <span class="n">specifies</span> <span class="n">what</span> <span class="n">to</span> <span class="n">save</span> <span class="k">for</span> <span class="o">:</span><span class="n">mkview</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">viminfo</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">vi</span><span class="err">&#39;</span>     <span class="n">use</span> <span class="p">.</span><span class="n">viminfo</span> <span class="n">file</span> <span class="n">upon</span> <span class="n">startup</span> <span class="n">and</span> <span class="n">exiting</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">virtualedit</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">ve</span><span class="err">&#39;</span>     <span class="n">when</span> <span class="n">to</span> <span class="n">use</span> <span class="k">virtual</span> <span class="n">editing</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">visualbell</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">vb</span><span class="err">&#39;</span>     <span class="n">use</span> <span class="n">visual</span> <span class="n">bell</span> <span class="n">instead</span> <span class="n">of</span> <span class="n">beeping</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">warn</span><span class="err">&#39;</span>               <span class="n">warn</span> <span class="k">for</span> <span class="n">shell</span> <span class="n">command</span> <span class="n">when</span> <span class="n">buffer</span> <span class="n">was</span> <span class="n">changed</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">weirdinvert</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">wiv</span><span class="err">&#39;</span>        <span class="k">for</span> <span class="n">terminals</span> <span class="n">that</span> <span class="n">have</span> <span class="n">weird</span> <span class="n">inversion</span> <span class="n">method</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">whichwrap</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">ww</span><span class="err">&#39;</span>     <span class="n">allow</span> <span class="n">specified</span> <span class="n">keys</span> <span class="n">to</span> <span class="n">cross</span> <span class="n">line</span> <span class="n">boundaries</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">wildchar</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">wc</span><span class="err">&#39;</span>     <span class="n">command</span><span class="o">-</span><span class="n">line</span> <span class="n">character</span> <span class="k">for</span> <span class="n">wildcard</span> <span class="n">expansion</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">wildcharm</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">wcm</span><span class="err">&#39;</span>     <span class="n">like</span> <span class="err">&#39;</span><span class="n">wildchar</span><span class="err">&#39;</span> <span class="n">but</span> <span class="n">also</span> <span class="n">works</span> <span class="n">when</span> <span class="n">mapped</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">wildignore</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">wig</span><span class="err">&#39;</span>     <span class="n">files</span> <span class="n">matching</span> <span class="n">these</span> <span class="n">patterns</span> <span class="n">are</span> <span class="n">not</span> <span class="n">completed</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">wildignorecase</span><span class="err">&#39;</span>  <span class="err">&#39;</span><span class="n">wic</span><span class="err">&#39;</span>     <span class="n">ignore</span> <span class="k">case</span> <span class="n">when</span> <span class="n">completing</span> <span class="n">file</span> <span class="n">names</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">wildmenu</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">wmnu</span><span class="err">&#39;</span>    <span class="n">use</span> <span class="n">menu</span> <span class="k">for</span> <span class="n">command</span> <span class="n">line</span> <span class="n">completion</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">wildmode</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">wim</span><span class="err">&#39;</span>     <span class="n">mode</span> <span class="k">for</span> <span class="err">&#39;</span><span class="n">wildchar</span><span class="err">&#39;</span> <span class="n">command</span><span class="o">-</span><span class="n">line</span> <span class="n">expansion</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">wildoptions</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">wop</span><span class="err">&#39;</span>     <span class="n">specifies</span> <span class="n">how</span> <span class="n">command</span> <span class="n">line</span> <span class="n">completion</span> <span class="n">is</span> <span class="n">done</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">winaltkeys</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">wak</span><span class="err">&#39;</span>     <span class="n">when</span> <span class="n">the</span> <span class="n">windows</span> <span class="n">system</span> <span class="n">handles</span> <span class="n">ALT</span> <span class="n">keys</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">window</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">wi</span><span class="err">&#39;</span>     <span class="n">nr</span> <span class="n">of</span> <span class="n">lines</span> <span class="n">to</span> <span class="n">scroll</span> <span class="k">for</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">F</span> <span class="n">and</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">B</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">winheight</span><span class="err">&#39;</span>    <span class="err">&#39;</span><span class="n">wh</span><span class="err">&#39;</span>     <span class="n">minimum</span> <span class="n">number</span> <span class="n">of</span> <span class="n">lines</span> <span class="k">for</span> <span class="n">the</span> <span class="n">current</span> <span class="n">window</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">winfixheight</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">wfh</span><span class="err">&#39;</span>     <span class="n">keep</span> <span class="n">window</span> <span class="n">height</span> <span class="n">when</span> <span class="n">opening</span><span class="o">/</span><span class="n">closing</span> <span class="n">windows</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">winfixwidth</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">wfw</span><span class="err">&#39;</span>     <span class="n">keep</span> <span class="n">window</span> <span class="n">width</span> <span class="n">when</span> <span class="n">opening</span><span class="o">/</span><span class="n">closing</span> <span class="n">windows</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">winminheight</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">wmh</span><span class="err">&#39;</span>     <span class="n">minimum</span> <span class="n">number</span> <span class="n">of</span> <span class="n">lines</span> <span class="k">for</span> <span class="n">any</span> <span class="n">window</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">winminwidth</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">wmw</span><span class="err">&#39;</span>     <span class="n">minimal</span> <span class="n">number</span> <span class="n">of</span> <span class="n">columns</span> <span class="k">for</span> <span class="n">any</span> <span class="n">window</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">winwidth</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">wiw</span><span class="err">&#39;</span>     <span class="n">minimal</span> <span class="n">number</span> <span class="n">of</span> <span class="n">columns</span> <span class="k">for</span> <span class="n">current</span> <span class="n">window</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">wrap</span><span class="err">&#39;</span>               <span class="kt">long</span> <span class="n">lines</span> <span class="n">wrap</span> <span class="n">and</span> <span class="k">continue</span> <span class="n">on</span> <span class="n">the</span> <span class="n">next</span> <span class="n">line</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">wrapmargin</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">wm</span><span class="err">&#39;</span>     <span class="n">chars</span> <span class="n">from</span> <span class="n">the</span> <span class="n">right</span> <span class="n">where</span> <span class="n">wrapping</span> <span class="n">starts</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">wrapscan</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">ws</span><span class="err">&#39;</span>     <span class="n">searches</span> <span class="n">wrap</span> <span class="n">around</span> <span class="n">the</span> <span class="n">end</span> <span class="n">of</span> <span class="n">the</span> <span class="n">file</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">write</span><span class="err">&#39;</span>              <span class="n">writing</span> <span class="n">to</span> <span class="n">a</span> <span class="n">file</span> <span class="n">is</span> <span class="n">allowed</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">writeany</span><span class="err">&#39;</span>     <span class="err">&#39;</span><span class="n">wa</span><span class="err">&#39;</span>     <span class="n">write</span> <span class="n">to</span> <span class="n">file</span> <span class="n">with</span> <span class="n">no</span> <span class="n">need</span> <span class="k">for</span> <span class="s">&quot;!&quot;</span> <span class="k">override</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">writebackup</span><span class="err">&#39;</span>      <span class="err">&#39;</span><span class="n">wb</span><span class="err">&#39;</span>     <span class="n">make</span> <span class="n">a</span> <span class="n">backup</span> <span class="n">before</span> <span class="n">overwriting</span> <span class="n">a</span> <span class="n">file</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">writedelay</span><span class="err">&#39;</span>   <span class="err">&#39;</span><span class="n">wd</span><span class="err">&#39;</span>     <span class="n">delay</span> <span class="k">this</span> <span class="n">many</span> <span class="n">msec</span> <span class="k">for</span> <span class="n">each</span> <span class="kt">char</span> <span class="p">(</span><span class="k">for</span> <span class="n">debug</span><span class="p">)</span>
</span><span class='line'><span class="o">------------------------------------------------------------------------------</span>
</span><span class='line'><span class="o">*</span><span class="n">Q_ur</span><span class="o">*</span>       <span class="n">Undo</span><span class="o">/</span><span class="n">Redo</span> <span class="n">commands</span>
</span><span class='line'>
</span><span class='line'><span class="n">u</span>       <span class="n">N</span>  <span class="n">u</span>     <span class="n">undo</span> <span class="n">last</span> <span class="n">N</span> <span class="n">changes</span>
</span><span class='line'><span class="n">CTRL</span><span class="o">-</span><span class="n">R</span>  <span class="n">N</span>  <span class="n">CTRL</span><span class="o">-</span><span class="n">R</span>    <span class="n">redo</span> <span class="n">last</span> <span class="n">N</span> <span class="n">undone</span> <span class="n">changes</span>
</span><span class='line'><span class="n">U</span>          <span class="n">U</span>        <span class="n">restore</span> <span class="n">last</span> <span class="n">changed</span> <span class="n">line</span>
</span><span class='line'><span class="o">------------------------------------------------------------------------------</span>
</span><span class='line'><span class="o">*</span><span class="n">Q_et</span><span class="o">*</span>       <span class="n">External</span> <span class="nl">commands</span>
</span><span class='line'>
</span><span class='line'><span class="p">:</span><span class="nl">shell</span> <span class="p">:</span><span class="n">sh</span><span class="p">[</span><span class="n">ell</span><span class="p">]</span> <span class="n">start</span> <span class="n">a</span> <span class="nl">shell</span>
</span><span class='line'><span class="p">:</span><span class="o">!</span>      <span class="o">:!</span><span class="p">{</span><span class="n">command</span><span class="p">}</span> <span class="n">execute</span> <span class="p">{</span><span class="n">command</span><span class="p">}</span> <span class="n">with</span> <span class="n">a</span> <span class="n">shell</span>
</span><span class='line'><span class="n">K</span>         <span class="n">K</span>     <span class="n">lookup</span> <span class="n">keyword</span> <span class="n">under</span> <span class="n">the</span> <span class="n">cursor</span> <span class="n">with</span>
</span><span class='line'>                 <span class="err">&#39;</span><span class="n">keywordprg</span><span class="err">&#39;</span> <span class="n">program</span> <span class="p">(</span><span class="k">default</span><span class="o">:</span> <span class="s">&quot;man&quot;</span><span class="p">)</span>
</span><span class='line'><span class="o">------------------------------------------------------------------------------</span>
</span><span class='line'><span class="o">*</span><span class="n">Q_qf</span><span class="o">*</span>       <span class="n">Quickfix</span> <span class="nl">commands</span>
</span><span class='line'>
</span><span class='line'><span class="p">:</span><span class="nl">cc</span>        <span class="p">:</span><span class="n">cc</span> <span class="p">[</span><span class="n">nr</span><span class="p">]</span> <span class="n">display</span> <span class="n">error</span> <span class="p">[</span><span class="n">nr</span><span class="p">]</span> <span class="p">(</span><span class="k">default</span> <span class="n">is</span> <span class="n">the</span> <span class="n">same</span> <span class="n">again</span><span class="p">)</span>
</span><span class='line'><span class="o">:</span><span class="nl">cnext</span> <span class="p">:</span><span class="n">cn</span>       <span class="n">display</span> <span class="n">the</span> <span class="n">next</span> <span class="nl">error</span>
</span><span class='line'><span class="p">:</span><span class="nl">cprevious</span> <span class="p">:</span><span class="n">cp</span>       <span class="n">display</span> <span class="n">the</span> <span class="n">previous</span> <span class="nl">error</span>
</span><span class='line'><span class="p">:</span><span class="nl">clist</span> <span class="p">:</span><span class="n">cl</span>       <span class="n">list</span> <span class="n">all</span> <span class="nl">errors</span>
</span><span class='line'><span class="p">:</span><span class="nl">cfile</span> <span class="p">:</span><span class="n">cf</span>       <span class="n">read</span> <span class="n">errors</span> <span class="n">from</span> <span class="n">the</span> <span class="n">file</span> <span class="err">&#39;</span><span class="n">errorfile</span><span class="err">&#39;</span>
</span><span class='line'><span class="o">:</span><span class="nl">cgetbuffer</span>    <span class="p">:</span><span class="n">cgetb</span>        <span class="nl">like</span> <span class="p">:</span><span class="n">cbuffer</span> <span class="n">but</span> <span class="n">don</span><span class="err">&#39;</span><span class="n">t</span> <span class="n">jump</span> <span class="n">to</span> <span class="n">the</span> <span class="n">first</span> <span class="nl">error</span>
</span><span class='line'><span class="p">:</span><span class="nl">cgetfile</span>  <span class="p">:</span><span class="n">cg</span>       <span class="nl">like</span> <span class="p">:</span><span class="n">cfile</span> <span class="n">but</span> <span class="n">don</span><span class="err">&#39;</span><span class="n">t</span> <span class="n">jump</span> <span class="n">to</span> <span class="n">the</span> <span class="n">first</span> <span class="nl">error</span>
</span><span class='line'><span class="p">:</span><span class="nl">cgetexpr</span>  <span class="p">:</span><span class="n">cgete</span>        <span class="nl">like</span> <span class="p">:</span><span class="n">cexpr</span> <span class="n">but</span> <span class="n">don</span><span class="err">&#39;</span><span class="n">t</span> <span class="n">jump</span> <span class="n">to</span> <span class="n">the</span> <span class="n">first</span> <span class="nl">error</span>
</span><span class='line'><span class="p">:</span><span class="nl">caddfile</span>  <span class="p">:</span><span class="n">caddf</span>        <span class="n">add</span> <span class="n">errors</span> <span class="n">from</span> <span class="n">the</span> <span class="n">error</span> <span class="n">file</span> <span class="n">to</span> <span class="n">the</span> <span class="n">current</span>
</span><span class='line'>                 <span class="n">quickfix</span> <span class="nl">list</span>
</span><span class='line'><span class="p">:</span><span class="nl">caddexpr</span>  <span class="p">:</span><span class="n">cad</span>      <span class="n">add</span> <span class="n">errors</span> <span class="n">from</span> <span class="n">an</span> <span class="n">expression</span> <span class="n">to</span> <span class="n">the</span> <span class="n">current</span>
</span><span class='line'>                 <span class="n">quickfix</span> <span class="nl">list</span>
</span><span class='line'><span class="p">:</span><span class="nl">cbuffer</span>   <span class="p">:</span><span class="n">cb</span>       <span class="n">read</span> <span class="n">errors</span> <span class="n">from</span> <span class="n">text</span> <span class="n">in</span> <span class="n">a</span> <span class="nl">buffer</span>
</span><span class='line'><span class="p">:</span><span class="nl">cexpr</span> <span class="p">:</span><span class="n">cex</span>      <span class="n">read</span> <span class="n">errors</span> <span class="n">from</span> <span class="n">an</span> <span class="nl">expression</span>
</span><span class='line'><span class="p">:</span><span class="nl">cquit</span> <span class="p">:</span><span class="n">cq</span>       <span class="n">quit</span> <span class="n">without</span> <span class="n">writing</span> <span class="n">and</span> <span class="k">return</span> <span class="n">error</span> <span class="n">code</span> <span class="p">(</span><span class="n">to</span>
</span><span class='line'>                 <span class="n">the</span> <span class="n">compiler</span><span class="p">)</span>
</span><span class='line'><span class="o">:</span><span class="nl">make</span>      <span class="p">:</span><span class="n">make</span> <span class="p">[</span><span class="n">args</span><span class="p">]</span> <span class="n">start</span> <span class="n">make</span><span class="p">,</span> <span class="n">read</span> <span class="n">errors</span><span class="p">,</span> <span class="n">and</span> <span class="n">jump</span> <span class="n">to</span> <span class="n">first</span>
</span><span class='line'>                 <span class="nl">error</span>
</span><span class='line'><span class="p">:</span><span class="nl">grep</span>      <span class="p">:</span><span class="n">gr</span><span class="p">[</span><span class="n">ep</span><span class="p">]</span> <span class="p">[</span><span class="n">args</span><span class="p">]</span>  <span class="n">execute</span> <span class="err">&#39;</span><span class="n">grepprg</span><span class="err">&#39;</span> <span class="n">to</span> <span class="n">find</span> <span class="n">matches</span> <span class="n">and</span> <span class="n">jump</span> <span class="n">to</span>
</span><span class='line'>                 <span class="n">the</span> <span class="n">first</span> <span class="n">one</span>
</span><span class='line'><span class="o">------------------------------------------------------------------------------</span>
</span><span class='line'><span class="o">*</span><span class="n">Q_vc</span><span class="o">*</span>       <span class="n">Various</span> <span class="n">commands</span>
</span><span class='line'>
</span><span class='line'><span class="n">CTRL</span><span class="o">-</span><span class="n">L</span>      <span class="n">CTRL</span><span class="o">-</span><span class="n">L</span>  <span class="n">clear</span> <span class="n">and</span> <span class="n">redraw</span> <span class="n">the</span> <span class="n">screen</span>
</span><span class='line'><span class="n">CTRL</span><span class="o">-</span><span class="n">G</span>      <span class="n">CTRL</span><span class="o">-</span><span class="n">G</span>  <span class="n">show</span> <span class="n">current</span> <span class="n">file</span> <span class="n">name</span> <span class="p">(</span><span class="n">with</span> <span class="n">path</span><span class="p">)</span> <span class="n">and</span> <span class="n">cursor</span>
</span><span class='line'>                 <span class="n">position</span>
</span><span class='line'><span class="n">ga</span>        <span class="n">ga</span>        <span class="n">show</span> <span class="n">ascii</span> <span class="n">value</span> <span class="n">of</span> <span class="n">character</span> <span class="n">under</span> <span class="n">cursor</span> <span class="n">in</span>
</span><span class='line'>                 <span class="n">decimal</span><span class="p">,</span> <span class="n">hex</span><span class="p">,</span> <span class="n">and</span> <span class="n">octal</span>
</span><span class='line'><span class="n">g8</span>        <span class="n">g8</span>        <span class="k">for</span> <span class="n">utf</span><span class="o">-</span><span class="mi">8</span> <span class="nl">encoding</span><span class="p">:</span> <span class="n">show</span> <span class="n">byte</span> <span class="n">sequence</span> <span class="k">for</span>
</span><span class='line'>                 <span class="n">character</span> <span class="n">under</span> <span class="n">cursor</span> <span class="n">in</span> <span class="n">hex</span>
</span><span class='line'><span class="n">g_CTRL</span><span class="o">-</span><span class="n">G</span>    <span class="n">g</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">G</span> <span class="n">show</span> <span class="n">cursor</span> <span class="n">column</span><span class="p">,</span> <span class="n">line</span><span class="p">,</span> <span class="n">and</span> <span class="n">character</span>
</span><span class='line'>                 <span class="n">position</span>
</span><span class='line'><span class="n">CTRL</span><span class="o">-</span><span class="n">C</span>      <span class="n">CTRL</span><span class="o">-</span><span class="n">C</span>  <span class="n">during</span> <span class="nl">searches</span><span class="p">:</span> <span class="n">Interrupt</span> <span class="n">the</span> <span class="n">search</span>
</span><span class='line'><span class="n">dos</span><span class="o">-</span><span class="n">CTRL</span><span class="o">-</span><span class="n">Break</span>   <span class="n">CTRL</span><span class="o">-</span><span class="n">Break</span>   <span class="n">MS</span><span class="o">-</span><span class="nl">DOS</span><span class="p">:</span> <span class="n">during</span> <span class="nl">searches</span><span class="p">:</span> <span class="n">Interrupt</span> <span class="n">the</span> <span class="n">search</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">Del</span><span class="o">&gt;</span>         <span class="o">&lt;</span><span class="n">Del</span><span class="o">&gt;</span> <span class="k">while</span> <span class="n">entering</span> <span class="n">a</span> <span class="nl">count</span><span class="p">:</span> <span class="k">delete</span> <span class="n">last</span> <span class="nl">character</span>
</span><span class='line'><span class="p">:</span><span class="nl">version</span>   <span class="p">:</span><span class="n">ve</span><span class="p">[</span><span class="n">rsion</span><span class="p">]</span>   <span class="n">show</span> <span class="n">version</span> <span class="nl">information</span>
</span><span class='line'><span class="p">:</span><span class="nl">mode</span>      <span class="p">:</span><span class="n">mode</span> <span class="n">N</span>        <span class="n">MS</span><span class="o">-</span><span class="nl">DOS</span><span class="p">:</span> <span class="n">set</span> <span class="n">screen</span> <span class="n">mode</span> <span class="n">to</span> <span class="n">N</span> <span class="p">(</span><span class="n">number</span><span class="p">,</span> <span class="n">C80</span><span class="p">,</span>
</span><span class='line'>                 <span class="n">C4350</span><span class="p">,</span> <span class="n">etc</span><span class="p">.)</span>
</span><span class='line'><span class="o">:</span><span class="nl">normal</span>    <span class="p">:</span><span class="n">norm</span><span class="p">[</span><span class="n">al</span><span class="p">][</span><span class="o">!</span><span class="p">]</span> <span class="p">{</span><span class="n">commands</span><span class="p">}</span>
</span><span class='line'>              <span class="n">execute</span> <span class="n">Normal</span> <span class="n">mode</span> <span class="n">commands</span>
</span><span class='line'><span class="n">Q</span>         <span class="n">Q</span>     <span class="k">switch</span> <span class="n">to</span> <span class="s">&quot;Ex&quot;</span> <span class="nl">mode</span>
</span><span class='line'>
</span><span class='line'><span class="p">:</span><span class="nl">redir</span> <span class="p">:</span><span class="n">redir</span> <span class="o">&gt;</span><span class="p">{</span><span class="n">file</span><span class="p">}</span>     <span class="n">redirect</span> <span class="n">messages</span> <span class="n">to</span> <span class="p">{</span><span class="n">file</span><span class="p">}</span>
</span><span class='line'><span class="o">:</span><span class="nl">silent</span>    <span class="p">:</span><span class="n">silent</span><span class="p">[</span><span class="o">!</span><span class="p">]</span> <span class="p">{</span><span class="n">command</span><span class="p">}</span>    <span class="n">execute</span> <span class="p">{</span><span class="n">command</span><span class="p">}</span> <span class="nl">silently</span>
</span><span class='line'><span class="p">:</span><span class="nl">confirm</span>   <span class="p">:</span><span class="n">confirm</span> <span class="p">{</span><span class="n">command</span><span class="p">}</span>   <span class="n">quit</span><span class="p">,</span> <span class="n">write</span><span class="p">,</span> <span class="n">etc</span><span class="p">.,</span> <span class="n">asking</span> <span class="n">about</span>
</span><span class='line'>                  <span class="n">unsaved</span> <span class="n">changes</span> <span class="n">or</span> <span class="n">read</span><span class="o">-</span><span class="n">only</span> <span class="nl">files</span>
</span><span class='line'><span class="p">:</span><span class="nl">browse</span>    <span class="p">:</span><span class="n">browse</span> <span class="p">{</span><span class="n">command</span><span class="p">}</span>    <span class="n">open</span><span class="o">/</span><span class="n">read</span><span class="o">/</span><span class="n">write</span> <span class="n">file</span><span class="p">,</span> <span class="k">using</span> <span class="n">a</span>
</span><span class='line'>                  <span class="n">file</span> <span class="n">selection</span> <span class="n">dialog</span>
</span><span class='line'><span class="o">------------------------------------------------------------------------------</span>
</span><span class='line'><span class="o">*</span><span class="n">Q_ce</span><span class="o">*</span>       <span class="n">Command</span><span class="o">-</span><span class="n">line</span> <span class="n">editing</span>
</span><span class='line'>
</span><span class='line'><span class="n">c_</span><span class="o">&lt;</span><span class="n">Esc</span><span class="o">&gt;</span> <span class="o">&lt;</span><span class="n">Esc</span><span class="o">&gt;</span>           <span class="n">abandon</span> <span class="n">command</span><span class="o">-</span><span class="n">line</span> <span class="p">(</span><span class="k">if</span> <span class="err">&#39;</span><span class="n">wildchar</span><span class="err">&#39;</span> <span class="n">is</span>
</span><span class='line'>                    <span class="o">&lt;</span><span class="n">Esc</span><span class="o">&gt;</span><span class="p">,</span> <span class="n">type</span> <span class="n">it</span> <span class="n">twice</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">c_CTRL</span><span class="o">-</span><span class="n">V</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">V</span> <span class="p">{</span><span class="kt">char</span><span class="p">}</span>       <span class="n">insert</span> <span class="p">{</span><span class="kt">char</span><span class="p">}</span> <span class="n">literally</span>
</span><span class='line'><span class="n">c_CTRL</span><span class="o">-</span><span class="n">V</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">V</span> <span class="p">{</span><span class="n">number</span><span class="p">}</span>    <span class="n">enter</span> <span class="n">decimal</span> <span class="n">value</span> <span class="n">of</span> <span class="n">character</span> <span class="p">(</span><span class="n">up</span> <span class="n">to</span>
</span><span class='line'>                    <span class="n">three</span> <span class="n">digits</span><span class="p">)</span>
</span><span class='line'><span class="n">c_CTRL</span><span class="o">-</span><span class="n">K</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">K</span> <span class="p">{</span><span class="n">char1</span><span class="p">}</span> <span class="p">{</span><span class="n">char2</span><span class="p">}</span>
</span><span class='line'>                 <span class="n">enter</span> <span class="n">digraph</span> <span class="p">(</span><span class="n">See</span> <span class="n">Q_di</span><span class="p">)</span>
</span><span class='line'><span class="n">c_CTRL</span><span class="o">-</span><span class="n">R</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">R</span> <span class="p">{</span><span class="mi">0</span><span class="o">-</span><span class="mi">9</span><span class="n">a</span><span class="o">-</span><span class="n">z</span><span class="s">&quot;%#:-=}</span>
</span><span class='line'>                 <span class="n">insert</span> <span class="n">the</span> <span class="n">contents</span> <span class="n">of</span> <span class="n">a</span> <span class="k">register</span>
</span><span class='line'>
</span><span class='line'><span class="n">c_</span><span class="o">&lt;</span><span class="n">Left</span><span class="o">&gt;</span>    <span class="o">&lt;</span><span class="n">Left</span><span class="o">&gt;/&lt;</span><span class="n">Right</span><span class="o">&gt;</span>      <span class="n">cursor</span> <span class="n">left</span><span class="o">/</span><span class="n">right</span>
</span><span class='line'><span class="n">c_</span><span class="o">&lt;</span><span class="n">S</span><span class="o">-</span><span class="n">Left</span><span class="o">&gt;</span>    <span class="o">&lt;</span><span class="n">S</span><span class="o">-</span><span class="n">Left</span><span class="o">&gt;/&lt;</span><span class="n">S</span><span class="o">-</span><span class="n">Right</span><span class="o">&gt;</span> <span class="n">cursor</span> <span class="n">one</span> <span class="n">word</span> <span class="n">left</span><span class="o">/</span><span class="n">right</span>
</span><span class='line'><span class="n">c_CTRL</span><span class="o">-</span><span class="n">B</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">B</span><span class="o">/</span><span class="n">CTRL</span><span class="o">-</span><span class="n">E</span>     <span class="n">cursor</span> <span class="n">to</span> <span class="n">beginning</span><span class="o">/</span><span class="n">end</span> <span class="n">of</span> <span class="n">command</span><span class="o">-</span><span class="n">line</span>
</span><span class='line'>
</span><span class='line'><span class="n">c_</span><span class="o">&lt;</span><span class="n">BS</span><span class="o">&gt;</span>  <span class="o">&lt;</span><span class="n">BS</span><span class="o">&gt;</span>        <span class="k">delete</span> <span class="n">the</span> <span class="n">character</span> <span class="n">in</span> <span class="n">front</span> <span class="n">of</span> <span class="n">the</span> <span class="n">cursor</span>
</span><span class='line'><span class="n">c_</span><span class="o">&lt;</span><span class="n">Del</span><span class="o">&gt;</span> <span class="o">&lt;</span><span class="n">Del</span><span class="o">&gt;</span>           <span class="k">delete</span> <span class="n">the</span> <span class="n">character</span> <span class="n">under</span> <span class="n">the</span> <span class="n">cursor</span>
</span><span class='line'><span class="n">c_CTRL</span><span class="o">-</span><span class="n">W</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">W</span>        <span class="k">delete</span> <span class="n">the</span> <span class="n">word</span> <span class="n">in</span> <span class="n">front</span> <span class="n">of</span> <span class="n">the</span> <span class="n">cursor</span>
</span><span class='line'><span class="n">c_CTRL</span><span class="o">-</span><span class="n">U</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">U</span>        <span class="n">remove</span> <span class="n">all</span> <span class="n">characters</span>
</span><span class='line'>
</span><span class='line'><span class="n">c_</span><span class="o">&lt;</span><span class="n">Up</span><span class="o">&gt;</span>  <span class="o">&lt;</span><span class="n">Up</span><span class="o">&gt;/&lt;</span><span class="n">Down</span><span class="o">&gt;</span>     <span class="n">recall</span> <span class="n">older</span><span class="o">/</span><span class="n">newer</span> <span class="n">command</span><span class="o">-</span><span class="n">line</span> <span class="n">that</span> <span class="n">starts</span>
</span><span class='line'>                    <span class="n">with</span> <span class="n">current</span> <span class="n">command</span>
</span><span class='line'><span class="n">c_</span><span class="o">&lt;</span><span class="n">S</span><span class="o">-</span><span class="n">Up</span><span class="o">&gt;</span>  <span class="o">&lt;</span><span class="n">S</span><span class="o">-</span><span class="n">Up</span><span class="o">&gt;/&lt;</span><span class="n">S</span><span class="o">-</span><span class="n">Down</span><span class="o">&gt;</span>     <span class="n">recall</span> <span class="n">older</span><span class="o">/</span><span class="n">newer</span> <span class="n">command</span><span class="o">-</span><span class="n">line</span> <span class="n">from</span> <span class="nl">history</span>
</span><span class='line'><span class="p">:</span><span class="nl">history</span>   <span class="p">:</span><span class="n">his</span><span class="p">[</span><span class="n">tory</span><span class="p">]</span>      <span class="n">show</span> <span class="n">older</span> <span class="n">command</span><span class="o">-</span><span class="n">lines</span>
</span><span class='line'>
</span><span class='line'><span class="n">Context</span><span class="o">-</span><span class="n">sensitive</span> <span class="n">completion</span> <span class="n">on</span> <span class="n">the</span> <span class="n">command</span><span class="o">-</span><span class="nl">line</span><span class="p">:</span>
</span><span class='line'>
</span><span class='line'><span class="n">c_wildchar</span> <span class="err">&#39;</span><span class="n">wildchar</span><span class="err">&#39;</span>  <span class="p">(</span><span class="k">default</span><span class="o">:</span> <span class="o">&lt;</span><span class="n">Tab</span><span class="o">&gt;</span><span class="p">)</span>
</span><span class='line'>              <span class="k">do</span> <span class="n">completion</span> <span class="n">on</span> <span class="n">the</span> <span class="n">pattern</span> <span class="n">in</span> <span class="n">front</span> <span class="n">of</span> <span class="n">the</span>
</span><span class='line'>                 <span class="n">cursor</span><span class="p">;</span> <span class="k">if</span> <span class="n">there</span> <span class="n">are</span> <span class="n">multiple</span> <span class="n">matches</span><span class="p">,</span>
</span><span class='line'>                 <span class="n">beep</span> <span class="n">and</span> <span class="n">show</span> <span class="n">the</span> <span class="n">first</span> <span class="n">one</span><span class="p">;</span> <span class="n">further</span>
</span><span class='line'>                 <span class="err">&#39;</span><span class="n">wildchar</span><span class="err">&#39;</span> <span class="n">will</span> <span class="n">show</span> <span class="n">the</span> <span class="n">next</span> <span class="n">ones</span>
</span><span class='line'><span class="n">c_CTRL</span><span class="o">-</span><span class="n">D</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">D</span>     <span class="n">list</span> <span class="n">all</span> <span class="n">names</span> <span class="n">that</span> <span class="n">match</span> <span class="n">the</span> <span class="n">pattern</span> <span class="n">in</span>
</span><span class='line'>                 <span class="n">front</span> <span class="n">of</span> <span class="n">the</span> <span class="n">cursor</span>
</span><span class='line'><span class="n">c_CTRL</span><span class="o">-</span><span class="n">A</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">A</span>     <span class="n">insert</span> <span class="n">all</span> <span class="n">names</span> <span class="n">that</span> <span class="n">match</span> <span class="n">pattern</span> <span class="n">in</span> <span class="n">front</span>
</span><span class='line'>                 <span class="n">of</span> <span class="n">cursor</span>
</span><span class='line'><span class="n">c_CTRL</span><span class="o">-</span><span class="n">L</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">L</span>     <span class="n">insert</span> <span class="n">longest</span> <span class="n">common</span> <span class="n">part</span> <span class="n">of</span> <span class="n">names</span> <span class="n">that</span>
</span><span class='line'>                 <span class="n">match</span> <span class="n">pattern</span>
</span><span class='line'><span class="n">c_CTRL</span><span class="o">-</span><span class="n">N</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">N</span>     <span class="n">after</span> <span class="err">&#39;</span><span class="n">wildchar</span><span class="err">&#39;</span> <span class="n">with</span> <span class="n">multiple</span> <span class="nl">matches</span><span class="p">:</span> <span class="n">go</span>
</span><span class='line'>                 <span class="n">to</span> <span class="n">next</span> <span class="n">match</span>
</span><span class='line'><span class="n">c_CTRL</span><span class="o">-</span><span class="n">P</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">P</span>     <span class="n">after</span> <span class="err">&#39;</span><span class="n">wildchar</span><span class="err">&#39;</span> <span class="n">with</span> <span class="n">multiple</span> <span class="nl">matches</span><span class="p">:</span> <span class="n">go</span>
</span><span class='line'>                 <span class="n">to</span> <span class="n">previous</span> <span class="n">match</span>
</span><span class='line'><span class="o">------------------------------------------------------------------------------</span>
</span><span class='line'><span class="o">*</span><span class="n">Q_ra</span><span class="o">*</span>       <span class="n">Ex</span> <span class="nl">ranges</span>
</span><span class='line'>
</span><span class='line'><span class="p">:</span><span class="n">range</span>  <span class="p">,</span>        <span class="n">separates</span> <span class="n">two</span> <span class="n">line</span> <span class="nl">numbers</span>
</span><span class='line'><span class="p">:</span><span class="n">range</span>  <span class="p">;</span>        <span class="n">idem</span><span class="p">,</span> <span class="n">set</span> <span class="n">cursor</span> <span class="n">to</span> <span class="n">the</span> <span class="n">first</span> <span class="n">line</span> <span class="n">number</span>
</span><span class='line'>              <span class="n">before</span> <span class="n">interpreting</span> <span class="n">the</span> <span class="n">second</span> <span class="nl">one</span>
</span><span class='line'>
</span><span class='line'><span class="p">:</span><span class="n">range</span>  <span class="p">{</span><span class="n">number</span><span class="p">}</span>   <span class="n">an</span> <span class="n">absolute</span> <span class="n">line</span> <span class="nl">number</span>
</span><span class='line'><span class="p">:</span><span class="n">range</span>  <span class="p">.</span>        <span class="n">the</span> <span class="n">current</span> <span class="nl">line</span>
</span><span class='line'><span class="p">:</span><span class="n">range</span>  <span class="err">$</span>      <span class="n">the</span> <span class="n">last</span> <span class="n">line</span> <span class="n">in</span> <span class="n">the</span> <span class="nl">file</span>
</span><span class='line'><span class="p">:</span><span class="n">range</span>  <span class="o">%</span>        <span class="n">equal</span> <span class="n">to</span> <span class="mi">1</span><span class="p">,</span><span class="err">$</span> <span class="p">(</span><span class="n">the</span> <span class="n">entire</span> <span class="n">file</span><span class="p">)</span>
</span><span class='line'><span class="o">:</span><span class="n">range</span>  <span class="o">*</span>        <span class="n">equal</span> <span class="n">to</span> <span class="err">&#39;</span><span class="o">&lt;</span><span class="p">,</span><span class="err">&#39;</span><span class="o">&gt;</span> <span class="p">(</span><span class="n">visual</span> <span class="n">area</span><span class="p">)</span>
</span><span class='line'><span class="o">:</span><span class="n">range</span>  <span class="err">&#39;</span><span class="n">t</span>      <span class="n">position</span> <span class="n">of</span> <span class="n">mark</span> <span class="nl">t</span>
</span><span class='line'><span class="p">:</span><span class="n">range</span>  <span class="o">/</span><span class="p">{</span><span class="n">pattern</span><span class="p">}[</span><span class="o">/</span><span class="p">]</span> <span class="n">the</span> <span class="n">next</span> <span class="n">line</span> <span class="n">where</span> <span class="p">{</span><span class="n">pattern</span><span class="p">}</span> <span class="nl">matches</span>
</span><span class='line'><span class="p">:</span><span class="n">range</span>  <span class="o">?</span><span class="p">{</span><span class="n">pattern</span><span class="p">}[</span><span class="o">?</span><span class="p">]</span> <span class="n">the</span> <span class="n">previous</span> <span class="n">line</span> <span class="n">where</span> <span class="p">{</span><span class="n">pattern</span><span class="p">}</span> <span class="nl">matches</span>
</span><span class='line'>
</span><span class='line'><span class="p">:</span><span class="n">range</span>  <span class="o">+</span><span class="p">[</span><span class="n">num</span><span class="p">]</span>      <span class="n">add</span> <span class="p">[</span><span class="n">num</span><span class="p">]</span> <span class="n">to</span> <span class="n">the</span> <span class="n">preceding</span> <span class="n">line</span> <span class="n">number</span>
</span><span class='line'>                 <span class="p">(</span><span class="k">default</span><span class="o">:</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="o">:</span><span class="n">range</span>  <span class="o">-</span><span class="p">[</span><span class="n">num</span><span class="p">]</span>      <span class="n">subtract</span> <span class="p">[</span><span class="n">num</span><span class="p">]</span> <span class="n">from</span> <span class="n">the</span> <span class="n">preceding</span> <span class="n">line</span>
</span><span class='line'>                 <span class="n">number</span> <span class="p">(</span><span class="k">default</span><span class="o">:</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="o">------------------------------------------------------------------------------</span>
</span><span class='line'><span class="o">*</span><span class="n">Q_ex</span><span class="o">*</span>       <span class="n">Special</span> <span class="n">Ex</span> <span class="nl">characters</span>
</span><span class='line'>
</span><span class='line'><span class="p">:</span><span class="n">bar</span>            <span class="n">separates</span> <span class="n">two</span> <span class="n">commands</span> <span class="p">(</span><span class="n">not</span> <span class="k">for</span> <span class="s">&quot;:global&quot;</span> <span class="n">and</span> <span class="s">&quot;:!&quot;</span><span class="p">)</span>
</span><span class='line'><span class="o">:</span><span class="n">quote</span>    <span class="s">&quot;        begins comment</span>
</span><span class='line'>
</span><span class='line'><span class="o">:</span><span class="n">_</span><span class="o">%</span>       <span class="o">%</span>       <span class="n">current</span> <span class="n">file</span> <span class="n">name</span> <span class="p">(</span><span class="n">only</span> <span class="n">where</span> <span class="n">a</span> <span class="n">file</span> <span class="n">name</span> <span class="n">is</span> <span class="n">expected</span><span class="p">)</span>
</span><span class='line'><span class="o">:</span><span class="n">_</span><span class="err">#</span>       <span class="err">#</span><span class="p">[</span><span class="n">num</span><span class="p">]</span> <span class="n">alternate</span> <span class="n">file</span> <span class="n">name</span> <span class="p">[</span><span class="n">num</span><span class="p">]</span> <span class="p">(</span><span class="n">only</span> <span class="n">where</span> <span class="n">a</span> <span class="n">file</span> <span class="n">name</span> <span class="n">is</span>
</span><span class='line'>             <span class="n">expected</span><span class="p">)</span>
</span><span class='line'>  <span class="nl">Note</span><span class="p">:</span> <span class="n">The</span> <span class="n">next</span> <span class="n">seven</span> <span class="n">are</span> <span class="n">typed</span> <span class="n">literally</span><span class="p">;</span> <span class="n">these</span> <span class="n">are</span> <span class="n">not</span> <span class="n">special</span> <span class="n">keys</span><span class="o">!</span>
</span><span class='line'><span class="o">:&lt;</span><span class="n">abuf</span><span class="o">&gt;</span>   <span class="o">&lt;</span><span class="n">abuf</span><span class="o">&gt;</span>    <span class="n">buffer</span> <span class="n">number</span><span class="p">,</span> <span class="k">for</span> <span class="n">use</span> <span class="n">in</span> <span class="n">an</span> <span class="n">autocommand</span> <span class="p">(</span><span class="n">only</span> <span class="n">where</span> <span class="n">a</span>
</span><span class='line'>             <span class="n">file</span> <span class="n">name</span> <span class="n">is</span> <span class="n">expected</span><span class="p">)</span>
</span><span class='line'><span class="o">:&lt;</span><span class="n">afile</span><span class="o">&gt;</span>  <span class="o">&lt;</span><span class="n">afile</span><span class="o">&gt;</span>   <span class="n">file</span> <span class="n">name</span><span class="p">,</span> <span class="k">for</span> <span class="n">use</span> <span class="n">in</span> <span class="n">an</span> <span class="n">autocommand</span> <span class="p">(</span><span class="n">only</span> <span class="n">where</span> <span class="n">a</span>
</span><span class='line'>             <span class="n">file</span> <span class="n">name</span> <span class="n">is</span> <span class="n">expected</span><span class="p">)</span>
</span><span class='line'><span class="o">:&lt;</span><span class="n">amatch</span><span class="o">&gt;</span> <span class="o">&lt;</span><span class="n">amatch</span><span class="o">&gt;</span>  <span class="n">what</span> <span class="n">matched</span> <span class="n">with</span> <span class="n">the</span> <span class="n">pattern</span><span class="p">,</span> <span class="k">for</span> <span class="n">use</span> <span class="n">in</span> <span class="n">an</span>
</span><span class='line'>             <span class="n">autocommand</span> <span class="p">(</span><span class="n">only</span> <span class="n">where</span> <span class="n">a</span> <span class="n">file</span> <span class="n">name</span> <span class="n">is</span> <span class="n">expected</span><span class="p">)</span>
</span><span class='line'><span class="o">:&lt;</span><span class="n">cword</span><span class="o">&gt;</span>  <span class="o">&lt;</span><span class="n">cword</span><span class="o">&gt;</span>   <span class="n">word</span> <span class="n">under</span> <span class="n">the</span> <span class="n">cursor</span> <span class="p">(</span><span class="n">only</span> <span class="n">where</span> <span class="n">a</span> <span class="n">file</span> <span class="n">name</span> <span class="n">is</span>
</span><span class='line'>             <span class="n">expected</span><span class="p">)</span>
</span><span class='line'><span class="o">:&lt;</span><span class="n">cWORD</span><span class="o">&gt;</span>  <span class="o">&lt;</span><span class="n">cWORD</span><span class="o">&gt;</span>   <span class="n">WORD</span> <span class="n">under</span> <span class="n">the</span> <span class="n">cursor</span> <span class="p">(</span><span class="n">only</span> <span class="n">where</span> <span class="n">a</span> <span class="n">file</span> <span class="n">name</span> <span class="n">is</span>
</span><span class='line'>             <span class="n">expected</span><span class="p">)</span> <span class="p">(</span><span class="n">see</span> <span class="n">WORD</span><span class="p">)</span>
</span><span class='line'><span class="o">:&lt;</span><span class="n">cfile</span><span class="o">&gt;</span>  <span class="o">&lt;</span><span class="n">cfile</span><span class="o">&gt;</span>   <span class="n">file</span> <span class="n">name</span> <span class="n">under</span> <span class="n">the</span> <span class="n">cursor</span> <span class="p">(</span><span class="n">only</span> <span class="n">where</span> <span class="n">a</span> <span class="n">file</span> <span class="n">name</span> <span class="n">is</span>
</span><span class='line'>             <span class="n">expected</span><span class="p">)</span>
</span><span class='line'><span class="o">:&lt;</span><span class="n">sfile</span><span class="o">&gt;</span>  <span class="o">&lt;</span><span class="n">sfile</span><span class="o">&gt;</span>   <span class="n">file</span> <span class="n">name</span> <span class="n">of</span> <span class="n">a</span> <span class="s">&quot;:source&quot;</span><span class="n">d</span> <span class="n">file</span><span class="p">,</span> <span class="n">within</span> <span class="n">that</span> <span class="n">file</span> <span class="p">(</span><span class="n">only</span>
</span><span class='line'>             <span class="n">where</span> <span class="n">a</span> <span class="n">file</span> <span class="n">name</span> <span class="n">is</span> <span class="n">expected</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">After</span> <span class="s">&quot;%&quot;</span><span class="p">,</span> <span class="s">&quot;#&quot;</span><span class="p">,</span> <span class="s">&quot;&lt;cfile&gt;&quot;</span><span class="p">,</span> <span class="s">&quot;&lt;sfile&gt;&quot;</span> <span class="n">or</span> <span class="s">&quot;&lt;afile&gt;&quot;</span>
</span><span class='line'>      <span class="o">::</span><span class="nl">p</span>      <span class="p">:</span><span class="n">p</span>        <span class="n">full</span> <span class="n">path</span>
</span><span class='line'>      <span class="o">::</span><span class="nl">h</span>      <span class="p">:</span><span class="n">h</span>        <span class="n">head</span> <span class="p">(</span><span class="n">file</span> <span class="n">name</span> <span class="n">removed</span><span class="p">)</span>
</span><span class='line'>      <span class="o">::</span><span class="nl">t</span>      <span class="p">:</span><span class="n">t</span>        <span class="n">tail</span> <span class="p">(</span><span class="n">file</span> <span class="n">name</span> <span class="n">only</span><span class="p">)</span>
</span><span class='line'>      <span class="o">::</span><span class="nl">r</span>      <span class="p">:</span><span class="n">r</span>        <span class="n">root</span> <span class="p">(</span><span class="n">extension</span> <span class="n">removed</span><span class="p">)</span>
</span><span class='line'>      <span class="o">::</span><span class="nl">e</span>      <span class="p">:</span><span class="n">e</span>        <span class="n">extension</span>
</span><span class='line'>      <span class="o">::</span><span class="nl">s</span>      <span class="p">:</span><span class="n">s</span><span class="o">/</span><span class="p">{</span><span class="n">pat</span><span class="p">}</span><span class="o">/</span><span class="p">{</span><span class="n">repl</span><span class="p">}</span><span class="o">/</span>   <span class="n">substitute</span> <span class="p">{</span><span class="n">pat</span><span class="p">}</span> <span class="n">with</span> <span class="p">{</span><span class="n">repl</span><span class="p">}</span>
</span><span class='line'><span class="o">------------------------------------------------------------------------------</span>
</span><span class='line'><span class="o">*</span><span class="n">Q_st</span><span class="o">*</span>       <span class="n">Starting</span> <span class="n">Vim</span>
</span><span class='line'>
</span><span class='line'><span class="o">-</span><span class="n">vim</span>       <span class="n">vim</span> <span class="p">[</span><span class="n">options</span><span class="p">]</span>        <span class="n">start</span> <span class="n">editing</span> <span class="n">with</span> <span class="n">an</span> <span class="n">empty</span> <span class="n">buffer</span>
</span><span class='line'><span class="o">-</span><span class="n">file</span>      <span class="n">vim</span> <span class="p">[</span><span class="n">options</span><span class="p">]</span> <span class="p">{</span><span class="n">file</span><span class="p">}</span> <span class="p">..</span>  <span class="n">start</span> <span class="n">editing</span> <span class="n">one</span> <span class="n">or</span> <span class="n">more</span> <span class="n">files</span>
</span><span class='line'><span class="o">--</span>    <span class="n">vim</span> <span class="p">[</span><span class="n">options</span><span class="p">]</span> <span class="o">-</span>       <span class="n">read</span> <span class="n">file</span> <span class="n">from</span> <span class="n">stdin</span>
</span><span class='line'><span class="o">-</span><span class="n">tag</span>       <span class="n">vim</span> <span class="p">[</span><span class="n">options</span><span class="p">]</span> <span class="o">-</span><span class="n">t</span> <span class="p">{</span><span class="n">tag</span><span class="p">}</span>    <span class="n">edit</span> <span class="n">the</span> <span class="n">file</span> <span class="n">associated</span> <span class="n">with</span> <span class="p">{</span><span class="n">tag</span><span class="p">}</span>
</span><span class='line'><span class="o">-</span><span class="n">qf</span>    <span class="n">vim</span> <span class="p">[</span><span class="n">options</span><span class="p">]</span> <span class="o">-</span><span class="n">q</span> <span class="p">[</span><span class="n">fname</span><span class="p">]</span>  <span class="n">start</span> <span class="n">editing</span> <span class="n">in</span> <span class="n">QuickFix</span> <span class="n">mode</span><span class="p">,</span>
</span><span class='line'>                     <span class="n">display</span> <span class="n">the</span> <span class="n">first</span> <span class="n">error</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">Most</span> <span class="n">useful</span> <span class="n">Vim</span> <span class="n">arguments</span> <span class="p">(</span><span class="k">for</span> <span class="n">full</span> <span class="n">list</span> <span class="n">see</span> <span class="n">startup</span><span class="o">-</span><span class="n">options</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="o">-</span><span class="n">gui</span>    <span class="o">-</span><span class="n">g</span>            <span class="n">start</span> <span class="n">GUI</span> <span class="p">(</span><span class="n">also</span> <span class="n">allows</span> <span class="n">other</span> <span class="n">options</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="o">-+</span> <span class="o">+</span><span class="p">[</span><span class="n">num</span><span class="p">]</span>          <span class="n">put</span> <span class="n">the</span> <span class="n">cursor</span> <span class="n">at</span> <span class="n">line</span> <span class="p">[</span><span class="n">num</span><span class="p">]</span> <span class="p">(</span><span class="k">default</span><span class="o">:</span> <span class="n">last</span> <span class="n">line</span><span class="p">)</span>
</span><span class='line'><span class="o">-+</span><span class="n">c</span> <span class="o">+</span><span class="p">{</span><span class="n">command</span><span class="p">}</span>      <span class="n">execute</span> <span class="p">{</span><span class="n">command</span><span class="p">}</span> <span class="n">after</span> <span class="n">loading</span> <span class="n">the</span> <span class="n">file</span>
</span><span class='line'><span class="o">-+/</span>    <span class="o">+/</span><span class="p">{</span><span class="n">pat</span><span class="p">}</span> <span class="p">{</span><span class="n">file</span><span class="p">}</span> <span class="p">..</span>   <span class="n">put</span> <span class="n">the</span> <span class="n">cursor</span> <span class="n">at</span> <span class="n">the</span> <span class="n">first</span> <span class="n">occurrence</span> <span class="n">of</span> <span class="p">{</span><span class="n">pat</span><span class="p">}</span>
</span><span class='line'><span class="o">-</span><span class="n">v</span>  <span class="o">-</span><span class="n">v</span>            <span class="n">Vi</span> <span class="n">mode</span><span class="p">,</span> <span class="n">start</span> <span class="n">ex</span> <span class="n">in</span> <span class="n">Normal</span> <span class="n">mode</span>
</span><span class='line'><span class="o">-</span><span class="n">e</span>  <span class="o">-</span><span class="n">e</span>            <span class="n">Ex</span> <span class="n">mode</span><span class="p">,</span> <span class="n">start</span> <span class="n">vim</span> <span class="n">in</span> <span class="n">Ex</span> <span class="n">mode</span>
</span><span class='line'><span class="o">-</span><span class="n">R</span>  <span class="o">-</span><span class="n">R</span>            <span class="n">Read</span><span class="o">-</span><span class="n">only</span> <span class="n">mode</span><span class="p">,</span> <span class="n">implies</span> <span class="o">-</span><span class="n">n</span>
</span><span class='line'><span class="o">-</span><span class="n">m</span>  <span class="o">-</span><span class="n">m</span>            <span class="n">modifications</span> <span class="n">not</span> <span class="n">allowed</span> <span class="p">(</span><span class="n">resets</span> <span class="err">&#39;</span><span class="n">write</span><span class="err">&#39;</span> <span class="n">option</span><span class="p">)</span>
</span><span class='line'><span class="o">-</span><span class="n">d</span>  <span class="o">-</span><span class="n">d</span>            <span class="n">diff</span> <span class="n">mode</span> <span class="n">diff</span>
</span><span class='line'><span class="o">-</span><span class="n">b</span>  <span class="o">-</span><span class="n">b</span>            <span class="n">binary</span> <span class="n">mode</span>
</span><span class='line'><span class="o">-</span><span class="n">l</span>  <span class="o">-</span><span class="n">l</span>            <span class="n">lisp</span> <span class="n">mode</span>
</span><span class='line'><span class="o">-</span><span class="n">A</span>  <span class="o">-</span><span class="n">A</span>            <span class="n">Arabic</span> <span class="n">mode</span> <span class="p">(</span><span class="err">&#39;</span><span class="n">arabic</span><span class="err">&#39;</span> <span class="n">is</span> <span class="n">set</span><span class="p">)</span>
</span><span class='line'><span class="o">-</span><span class="n">F</span>  <span class="o">-</span><span class="n">F</span>            <span class="n">Farsi</span> <span class="n">mode</span> <span class="p">(</span><span class="err">&#39;</span><span class="n">fkmap</span><span class="err">&#39;</span> <span class="n">and</span> <span class="err">&#39;</span><span class="n">rightleft</span><span class="err">&#39;</span> <span class="n">are</span> <span class="n">set</span><span class="p">)</span>
</span><span class='line'><span class="o">-</span><span class="n">H</span>  <span class="o">-</span><span class="n">H</span>            <span class="n">Hebrew</span> <span class="n">mode</span> <span class="p">(</span><span class="err">&#39;</span><span class="n">hkmap</span><span class="err">&#39;</span> <span class="n">and</span> <span class="err">&#39;</span><span class="n">rightleft</span><span class="err">&#39;</span> <span class="n">are</span> <span class="n">set</span><span class="p">)</span>
</span><span class='line'><span class="o">-</span><span class="n">V</span>  <span class="o">-</span><span class="n">V</span>            <span class="n">Verbose</span><span class="p">,</span> <span class="n">give</span> <span class="n">informative</span> <span class="n">messages</span>
</span><span class='line'><span class="o">-</span><span class="n">C</span>  <span class="o">-</span><span class="n">C</span>            <span class="n">Compatible</span><span class="p">,</span> <span class="n">set</span> <span class="n">the</span> <span class="err">&#39;</span><span class="n">compatible</span><span class="err">&#39;</span> <span class="n">option</span>
</span><span class='line'><span class="o">-</span><span class="n">N</span>  <span class="o">-</span><span class="n">N</span>            <span class="n">Nocompatible</span><span class="p">,</span> <span class="n">reset</span> <span class="n">the</span> <span class="err">&#39;</span><span class="n">compatible</span><span class="err">&#39;</span> <span class="n">option</span>
</span><span class='line'><span class="o">-</span><span class="n">r</span>  <span class="o">-</span><span class="n">r</span>            <span class="n">give</span> <span class="n">list</span> <span class="n">of</span> <span class="n">swap</span> <span class="n">files</span>
</span><span class='line'><span class="o">-</span><span class="n">r</span>  <span class="o">-</span><span class="n">r</span> <span class="p">{</span><span class="n">file</span><span class="p">}</span> <span class="p">..</span>      <span class="n">recover</span> <span class="n">aborted</span> <span class="n">edit</span> <span class="n">session</span>
</span><span class='line'><span class="o">-</span><span class="n">n</span>  <span class="o">-</span><span class="n">n</span>            <span class="k">do</span> <span class="n">not</span> <span class="n">create</span> <span class="n">a</span> <span class="n">swap</span> <span class="n">file</span>
</span><span class='line'><span class="o">-</span><span class="n">o</span>  <span class="o">-</span><span class="n">o</span> <span class="p">[</span><span class="n">num</span><span class="p">]</span>     <span class="n">open</span> <span class="p">[</span><span class="n">num</span><span class="p">]</span> <span class="n">windows</span> <span class="p">(</span><span class="k">default</span><span class="o">:</span> <span class="n">one</span> <span class="k">for</span> <span class="n">each</span> <span class="n">file</span><span class="p">)</span>
</span><span class='line'><span class="o">-</span><span class="n">f</span>  <span class="o">-</span><span class="n">f</span>            <span class="nl">GUI</span><span class="p">:</span> <span class="n">foreground</span> <span class="n">process</span><span class="p">,</span> <span class="n">don</span><span class="err">&#39;</span><span class="n">t</span> <span class="n">fork</span>
</span><span class='line'>              <span class="nl">Amiga</span><span class="p">:</span> <span class="k">do</span> <span class="n">not</span> <span class="n">restart</span> <span class="n">Vim</span> <span class="n">to</span> <span class="n">open</span> <span class="n">a</span> <span class="n">window</span> <span class="p">(</span><span class="k">for</span>
</span><span class='line'>              <span class="n">e</span><span class="p">.</span><span class="n">g</span><span class="p">.,</span> <span class="n">mail</span><span class="p">)</span>
</span><span class='line'><span class="o">-</span><span class="n">s</span>  <span class="o">-</span><span class="n">s</span> <span class="p">{</span><span class="n">scriptin</span><span class="p">}</span>        <span class="n">first</span> <span class="n">read</span> <span class="n">commands</span> <span class="n">from</span> <span class="n">the</span> <span class="n">file</span> <span class="p">{</span><span class="n">scriptin</span><span class="p">}</span>
</span><span class='line'><span class="o">-</span><span class="n">w</span>  <span class="o">-</span><span class="n">w</span> <span class="p">{</span><span class="n">scriptout</span><span class="p">}</span>       <span class="n">write</span> <span class="n">typed</span> <span class="n">chars</span> <span class="n">to</span> <span class="n">file</span> <span class="p">{</span><span class="n">scriptout</span><span class="p">}</span> <span class="p">(</span><span class="n">append</span><span class="p">)</span>
</span><span class='line'><span class="o">-</span><span class="n">W</span>  <span class="o">-</span><span class="n">W</span> <span class="p">{</span><span class="n">scriptout</span><span class="p">}</span>       <span class="n">write</span> <span class="n">typed</span> <span class="n">chars</span> <span class="n">to</span> <span class="n">file</span> <span class="p">{</span><span class="n">scriptout</span><span class="p">}</span> <span class="p">(</span><span class="n">overwrite</span><span class="p">)</span>
</span><span class='line'><span class="o">-</span><span class="n">T</span>  <span class="o">-</span><span class="n">T</span> <span class="p">{</span><span class="n">terminal</span><span class="p">}</span>        <span class="n">set</span> <span class="n">terminal</span> <span class="n">name</span>
</span><span class='line'><span class="o">-</span><span class="n">d</span>  <span class="o">-</span><span class="n">d</span> <span class="p">{</span><span class="n">device</span><span class="p">}</span>      <span class="nl">Amiga</span><span class="p">:</span> <span class="n">open</span> <span class="p">{</span><span class="n">device</span><span class="p">}</span> <span class="n">to</span> <span class="n">be</span> <span class="n">used</span> <span class="n">as</span> <span class="n">a</span> <span class="n">console</span>
</span><span class='line'><span class="o">-</span><span class="n">u</span>  <span class="o">-</span><span class="n">u</span> <span class="p">{</span><span class="n">vimrc</span><span class="p">}</span>       <span class="n">read</span> <span class="n">inits</span> <span class="n">from</span> <span class="p">{</span><span class="n">vimrc</span><span class="p">}</span> <span class="n">instead</span> <span class="n">of</span> <span class="n">other</span> <span class="n">inits</span>
</span><span class='line'><span class="o">-</span><span class="n">U</span>  <span class="o">-</span><span class="n">U</span> <span class="p">{</span><span class="n">gvimrc</span><span class="p">}</span>      <span class="n">idem</span><span class="p">,</span> <span class="k">for</span> <span class="n">when</span> <span class="n">starting</span> <span class="n">the</span> <span class="n">GUI</span>
</span><span class='line'><span class="o">-</span><span class="n">i</span>  <span class="o">-</span><span class="n">i</span> <span class="p">{</span><span class="n">viminfo</span><span class="p">}</span>     <span class="n">read</span> <span class="n">info</span> <span class="n">from</span> <span class="p">{</span><span class="n">viminfo</span><span class="p">}</span> <span class="n">instead</span> <span class="n">of</span> <span class="n">other</span> <span class="n">files</span>
</span><span class='line'><span class="o">---</span>    <span class="o">--</span>           <span class="n">end</span> <span class="n">of</span> <span class="n">options</span><span class="p">,</span> <span class="n">other</span> <span class="n">arguments</span> <span class="n">are</span> <span class="n">file</span> <span class="n">names</span>
</span><span class='line'><span class="o">--</span><span class="n">help</span>    <span class="o">--</span><span class="n">help</span>      <span class="n">show</span> <span class="n">list</span> <span class="n">of</span> <span class="n">arguments</span> <span class="n">and</span> <span class="n">exit</span>
</span><span class='line'><span class="o">--</span><span class="n">version</span> <span class="o">--</span><span class="n">version</span>       <span class="n">show</span> <span class="n">version</span> <span class="n">info</span> <span class="n">and</span> <span class="n">exit</span>
</span><span class='line'><span class="o">--</span> <span class="o">-</span>            <span class="n">read</span> <span class="n">file</span> <span class="n">from</span> <span class="n">stdin</span>
</span><span class='line'><span class="o">------------------------------------------------------------------------------</span>
</span><span class='line'><span class="o">*</span><span class="n">Q_ed</span><span class="o">*</span>       <span class="n">Editing</span> <span class="n">a</span> <span class="n">file</span>
</span><span class='line'>
</span><span class='line'>     <span class="n">Without</span> <span class="o">!:</span> <span class="n">Fail</span> <span class="k">if</span> <span class="n">changes</span> <span class="n">have</span> <span class="n">been</span> <span class="n">made</span> <span class="n">to</span> <span class="n">the</span> <span class="n">current</span> <span class="n">buffer</span><span class="p">.</span>
</span><span class='line'>        <span class="n">With</span> <span class="o">!:</span> <span class="n">Discard</span> <span class="n">any</span> <span class="n">changes</span> <span class="n">to</span> <span class="n">the</span> <span class="n">current</span> <span class="n">buffer</span><span class="p">.</span>
</span><span class='line'><span class="o">:</span><span class="nl">edit_f</span>  <span class="p">:</span><span class="n">e</span><span class="p">[</span><span class="n">dit</span><span class="p">][</span><span class="o">!</span><span class="p">]</span> <span class="p">{</span><span class="n">file</span><span class="p">}</span>   <span class="n">edit</span> <span class="p">{</span><span class="n">file</span><span class="p">}</span>
</span><span class='line'><span class="o">:</span><span class="nl">edit</span>    <span class="p">:</span><span class="n">e</span><span class="p">[</span><span class="n">dit</span><span class="p">][</span><span class="o">!</span><span class="p">]</span>       <span class="n">reload</span> <span class="n">the</span> <span class="n">current</span> <span class="nl">file</span>
</span><span class='line'><span class="p">:</span><span class="nl">enew</span>    <span class="p">:</span><span class="n">ene</span><span class="p">[</span><span class="n">w</span><span class="p">][</span><span class="o">!</span><span class="p">]</span>       <span class="n">edit</span> <span class="n">a</span> <span class="k">new</span><span class="p">,</span> <span class="n">unnamed</span> <span class="nl">buffer</span>
</span><span class='line'><span class="p">:</span><span class="nl">find</span>    <span class="p">:</span><span class="n">fin</span><span class="p">[</span><span class="n">d</span><span class="p">][</span><span class="o">!</span><span class="p">]</span> <span class="p">{</span><span class="n">file</span><span class="p">}</span>   <span class="n">find</span> <span class="p">{</span><span class="n">file</span><span class="p">}</span> <span class="n">in</span> <span class="err">&#39;</span><span class="n">path</span><span class="err">&#39;</span> <span class="n">and</span> <span class="n">edit</span> <span class="n">it</span>
</span><span class='line'>
</span><span class='line'><span class="n">CTRL</span><span class="o">-^</span>   <span class="n">N</span>  <span class="n">CTRL</span><span class="o">-^</span>     <span class="n">edit</span> <span class="n">alternate</span> <span class="n">file</span> <span class="n">N</span> <span class="p">(</span><span class="n">equivalent</span> <span class="n">to</span> <span class="s">&quot;:e #N&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">gf</span>          <span class="n">gf</span>  <span class="n">or</span> <span class="p">]</span><span class="n">f</span>      <span class="n">edit</span> <span class="n">the</span> <span class="n">file</span> <span class="n">whose</span> <span class="n">name</span> <span class="n">is</span> <span class="n">under</span> <span class="n">the</span> <span class="nl">cursor</span>
</span><span class='line'><span class="p">:</span><span class="nl">pwd</span>     <span class="p">:</span><span class="n">pwd</span>            <span class="n">print</span> <span class="n">the</span> <span class="n">current</span> <span class="n">directory</span> <span class="nl">name</span>
</span><span class='line'><span class="p">:</span><span class="nl">cd</span>      <span class="p">:</span><span class="n">cd</span> <span class="p">[</span><span class="n">path</span><span class="p">]</span>     <span class="n">change</span> <span class="n">the</span> <span class="n">current</span> <span class="n">directory</span> <span class="n">to</span> <span class="p">[</span><span class="n">path</span><span class="p">]</span>
</span><span class='line'><span class="o">:</span><span class="n">cd</span><span class="o">-</span>     <span class="o">:</span><span class="n">cd</span> <span class="o">-</span>      <span class="n">back</span> <span class="n">to</span> <span class="n">previous</span> <span class="n">current</span> <span class="nl">directory</span>
</span><span class='line'><span class="p">:</span><span class="nl">file</span>    <span class="p">:</span><span class="n">f</span><span class="p">[</span><span class="n">ile</span><span class="p">]</span>        <span class="n">print</span> <span class="n">the</span> <span class="n">current</span> <span class="n">file</span> <span class="n">name</span> <span class="n">and</span> <span class="n">the</span> <span class="n">cursor</span>
</span><span class='line'>                 <span class="nl">position</span>
</span><span class='line'><span class="p">:</span><span class="nl">file</span>    <span class="p">:</span><span class="n">f</span><span class="p">[</span><span class="n">ile</span><span class="p">]</span> <span class="p">{</span><span class="n">name</span><span class="p">}</span>    <span class="n">set</span> <span class="n">the</span> <span class="n">current</span> <span class="n">file</span> <span class="n">name</span> <span class="n">to</span> <span class="p">{</span><span class="n">name</span><span class="p">}</span>
</span><span class='line'><span class="o">:</span><span class="nl">files</span>   <span class="p">:</span><span class="n">files</span>      <span class="n">show</span> <span class="n">alternate</span> <span class="n">file</span> <span class="n">names</span>
</span><span class='line'><span class="o">------------------------------------------------------------------------------</span>
</span><span class='line'><span class="o">*</span><span class="n">Q_fl</span><span class="o">*</span>       <span class="n">Using</span> <span class="n">the</span> <span class="n">argument</span> <span class="n">list</span>         <span class="n">argument</span><span class="o">-</span><span class="nl">list</span>
</span><span class='line'>
</span><span class='line'><span class="p">:</span><span class="nl">args</span>     <span class="p">:</span><span class="n">ar</span><span class="p">[</span><span class="n">gs</span><span class="p">]</span>       <span class="n">print</span> <span class="n">the</span> <span class="n">argument</span> <span class="n">list</span><span class="p">,</span> <span class="n">with</span> <span class="n">the</span> <span class="n">current</span> <span class="n">file</span>
</span><span class='line'>                 <span class="n">in</span> <span class="s">&quot;[]&quot;</span>
</span><span class='line'><span class="o">:</span><span class="nl">all</span>      <span class="p">:</span><span class="n">all</span>  <span class="nl">or</span> <span class="p">:</span><span class="n">sall</span>   <span class="n">open</span> <span class="n">a</span> <span class="n">window</span> <span class="k">for</span> <span class="n">every</span> <span class="n">file</span> <span class="n">in</span> <span class="n">the</span> <span class="n">arg</span> <span class="nl">list</span>
</span><span class='line'><span class="p">:</span><span class="nl">wn</span>       <span class="p">:</span><span class="n">wn</span><span class="p">[</span><span class="n">ext</span><span class="p">][</span><span class="o">!</span><span class="p">]</span>     <span class="n">write</span> <span class="n">file</span> <span class="n">and</span> <span class="n">edit</span> <span class="n">next</span> <span class="nl">file</span>
</span><span class='line'><span class="p">:</span><span class="nl">wn</span>       <span class="p">:</span><span class="n">wn</span><span class="p">[</span><span class="n">ext</span><span class="p">][</span><span class="o">!</span><span class="p">]</span> <span class="p">{</span><span class="n">file</span><span class="p">}</span> <span class="n">write</span> <span class="n">to</span> <span class="p">{</span><span class="n">file</span><span class="p">}</span> <span class="n">and</span> <span class="n">edit</span> <span class="n">next</span> <span class="n">file</span><span class="p">,</span> <span class="n">unless</span>
</span><span class='line'>                 <span class="p">{</span><span class="n">file</span><span class="p">}</span> <span class="n">exists</span><span class="p">;</span> <span class="n">With</span> <span class="o">!</span><span class="p">,</span> <span class="n">overwrite</span> <span class="n">existing</span>
</span><span class='line'>                 <span class="nl">file</span>
</span><span class='line'><span class="p">:</span><span class="nl">wN</span>       <span class="p">:</span><span class="n">wN</span><span class="p">[</span><span class="n">ext</span><span class="p">][</span><span class="o">!</span><span class="p">]</span> <span class="p">[</span><span class="n">file</span><span class="p">]</span> <span class="n">write</span> <span class="n">file</span> <span class="n">and</span> <span class="n">edit</span> <span class="n">previous</span> <span class="n">file</span>
</span><span class='line'>
</span><span class='line'>       <span class="n">in</span> <span class="n">current</span> <span class="n">window</span>    <span class="n">in</span> <span class="k">new</span> <span class="n">window</span>   <span class="o">~</span>
</span><span class='line'><span class="o">:</span><span class="nl">argument</span>  <span class="p">:</span><span class="n">argu</span><span class="p">[</span><span class="n">ment</span><span class="p">]</span> <span class="nl">N</span>      <span class="p">:</span><span class="n">sar</span><span class="p">[</span><span class="n">gument</span><span class="p">]</span> <span class="n">N</span>  <span class="n">edit</span> <span class="n">file</span> <span class="nl">N</span>
</span><span class='line'><span class="p">:</span><span class="nl">next</span>      <span class="p">:</span><span class="n">n</span><span class="p">[</span><span class="n">ext</span><span class="p">]</span>        <span class="o">:</span><span class="n">sn</span><span class="p">[</span><span class="n">ext</span><span class="p">]</span>       <span class="n">edit</span> <span class="n">next</span> <span class="nl">file</span>
</span><span class='line'><span class="p">:</span><span class="nl">next_f</span>    <span class="p">:</span><span class="n">n</span><span class="p">[</span><span class="n">ext</span><span class="p">]</span> <span class="p">{</span><span class="n">arglist</span><span class="p">}</span>     <span class="o">:</span><span class="n">sn</span><span class="p">[</span><span class="n">ext</span><span class="p">]</span> <span class="p">{</span><span class="n">arglist</span><span class="p">}</span>    <span class="n">define</span> <span class="k">new</span> <span class="n">arg</span> <span class="n">list</span>
</span><span class='line'>                             <span class="n">and</span> <span class="n">edit</span> <span class="n">first</span> <span class="nl">file</span>
</span><span class='line'><span class="p">:</span><span class="nl">Next</span>      <span class="p">:</span><span class="n">N</span><span class="p">[</span><span class="n">ext</span><span class="p">]</span>        <span class="o">:</span><span class="n">sN</span><span class="p">[</span><span class="n">ext</span><span class="p">]</span>       <span class="n">edit</span> <span class="n">previous</span> <span class="nl">file</span>
</span><span class='line'><span class="p">:</span><span class="nl">first</span>     <span class="p">:</span><span class="n">fir</span><span class="p">[</span><span class="n">st</span><span class="p">]</span>       <span class="o">:</span><span class="n">sfir</span><span class="p">[</span><span class="n">st</span><span class="p">]</span>      <span class="n">edit</span> <span class="n">first</span> <span class="nl">file</span>
</span><span class='line'><span class="p">:</span><span class="nl">last</span>      <span class="p">:</span><span class="n">la</span><span class="p">[</span><span class="n">st</span><span class="p">]</span>        <span class="o">:</span><span class="n">sla</span><span class="p">[</span><span class="n">st</span><span class="p">]</span>       <span class="n">edit</span> <span class="n">last</span> <span class="n">file</span>
</span><span class='line'><span class="o">------------------------------------------------------------------------------</span>
</span><span class='line'><span class="o">*</span><span class="n">Q_wq</span><span class="o">*</span>       <span class="n">Writing</span> <span class="n">and</span> <span class="nl">quitting</span>
</span><span class='line'>
</span><span class='line'><span class="p">:</span><span class="nl">w</span>   <span class="p">:[</span><span class="n">range</span><span class="p">]</span><span class="n">w</span><span class="p">[</span><span class="n">rite</span><span class="p">][</span><span class="o">!</span><span class="p">]</span>     <span class="n">write</span> <span class="n">to</span> <span class="n">the</span> <span class="n">current</span> <span class="nl">file</span>
</span><span class='line'><span class="p">:</span><span class="nl">w_f</span>     <span class="p">:[</span><span class="n">range</span><span class="p">]</span><span class="n">w</span><span class="p">[</span><span class="n">rite</span><span class="p">]</span> <span class="p">{</span><span class="n">file</span><span class="p">}</span>  <span class="n">write</span> <span class="n">to</span> <span class="p">{</span><span class="n">file</span><span class="p">},</span> <span class="n">unless</span> <span class="n">it</span> <span class="n">already</span>
</span><span class='line'>                     <span class="nl">exists</span>
</span><span class='line'><span class="p">:</span><span class="nl">w_f</span>     <span class="p">:[</span><span class="n">range</span><span class="p">]</span><span class="n">w</span><span class="p">[</span><span class="n">rite</span><span class="p">]</span><span class="o">!</span> <span class="p">{</span><span class="n">file</span><span class="p">}</span>  <span class="n">write</span> <span class="n">to</span> <span class="p">{</span><span class="n">file</span><span class="p">}.</span>  <span class="n">Overwrite</span> <span class="n">an</span> <span class="n">existing</span>
</span><span class='line'>                     <span class="nl">file</span>
</span><span class='line'><span class="p">:</span><span class="nl">w_a</span>     <span class="p">:[</span><span class="n">range</span><span class="p">]</span><span class="n">w</span><span class="p">[</span><span class="n">rite</span><span class="p">][</span><span class="o">!</span><span class="p">]</span> <span class="o">&gt;&gt;</span>     <span class="n">append</span> <span class="n">to</span> <span class="n">the</span> <span class="n">current</span> <span class="nl">file</span>
</span><span class='line'><span class="p">:</span><span class="nl">w_a</span>     <span class="p">:[</span><span class="n">range</span><span class="p">]</span><span class="n">w</span><span class="p">[</span><span class="n">rite</span><span class="p">][</span><span class="o">!</span><span class="p">]</span> <span class="o">&gt;&gt;</span> <span class="p">{</span><span class="n">file</span><span class="p">}</span> <span class="n">append</span> <span class="n">to</span> <span class="p">{</span><span class="n">file</span><span class="p">}</span>
</span><span class='line'><span class="o">:</span><span class="nl">w_c</span>     <span class="p">:[</span><span class="n">range</span><span class="p">]</span><span class="n">w</span><span class="p">[</span><span class="n">rite</span><span class="p">]</span> <span class="o">!</span><span class="p">{</span><span class="n">cmd</span><span class="p">}</span>   <span class="n">execute</span> <span class="p">{</span><span class="n">cmd</span><span class="p">}</span> <span class="n">with</span> <span class="p">[</span><span class="n">range</span><span class="p">]</span> <span class="n">lines</span> <span class="n">as</span>
</span><span class='line'>                     <span class="n">standard</span> <span class="nl">input</span>
</span><span class='line'><span class="p">:</span><span class="nl">up</span>      <span class="p">:[</span><span class="n">range</span><span class="p">]</span><span class="n">up</span><span class="p">[</span><span class="n">date</span><span class="p">][</span><span class="o">!</span><span class="p">]</span>        <span class="n">write</span> <span class="n">to</span> <span class="n">current</span> <span class="n">file</span> <span class="k">if</span> <span class="nl">modified</span>
</span><span class='line'><span class="p">:</span><span class="nl">wall</span>    <span class="p">:</span><span class="n">wa</span><span class="p">[</span><span class="n">ll</span><span class="p">][</span><span class="o">!</span><span class="p">]</span>           <span class="n">write</span> <span class="n">all</span> <span class="n">changed</span> <span class="nl">buffers</span>
</span><span class='line'>
</span><span class='line'><span class="p">:</span><span class="nl">q</span>   <span class="p">:</span><span class="n">q</span><span class="p">[</span><span class="n">uit</span><span class="p">]</span>        <span class="n">quit</span> <span class="n">current</span> <span class="n">buffer</span><span class="p">,</span> <span class="n">unless</span> <span class="n">changes</span> <span class="n">have</span> <span class="n">been</span>
</span><span class='line'>                 <span class="n">made</span><span class="p">;</span> <span class="n">Exit</span> <span class="n">Vim</span> <span class="n">when</span> <span class="n">there</span> <span class="n">are</span> <span class="n">no</span> <span class="n">other</span>
</span><span class='line'>                 <span class="n">non</span><span class="o">-</span><span class="n">help</span> <span class="nl">buffers</span>
</span><span class='line'><span class="p">:</span><span class="nl">q</span>   <span class="p">:</span><span class="n">q</span><span class="p">[</span><span class="n">uit</span><span class="p">]</span><span class="o">!</span>        <span class="n">quit</span> <span class="n">current</span> <span class="n">buffer</span> <span class="n">always</span><span class="p">,</span> <span class="n">discard</span> <span class="n">any</span>
</span><span class='line'>                 <span class="n">changes</span><span class="p">.</span>  <span class="n">Exit</span> <span class="n">Vim</span> <span class="n">when</span> <span class="n">there</span> <span class="n">are</span> <span class="n">no</span> <span class="n">other</span>
</span><span class='line'>                 <span class="n">non</span><span class="o">-</span><span class="n">help</span> <span class="nl">buffers</span>
</span><span class='line'><span class="p">:</span><span class="nl">qa</span>      <span class="p">:</span><span class="n">qa</span><span class="p">[</span><span class="n">ll</span><span class="p">]</span>        <span class="n">exit</span> <span class="n">Vim</span><span class="p">,</span> <span class="n">unless</span> <span class="n">changes</span> <span class="n">have</span> <span class="n">been</span> <span class="nl">made</span>
</span><span class='line'><span class="p">:</span><span class="nl">qa</span>      <span class="p">:</span><span class="n">qa</span><span class="p">[</span><span class="n">ll</span><span class="p">]</span><span class="o">!</span>        <span class="n">exit</span> <span class="n">Vim</span> <span class="n">always</span><span class="p">,</span> <span class="n">discard</span> <span class="n">any</span> <span class="nl">changes</span>
</span><span class='line'><span class="p">:</span><span class="nl">cq</span>      <span class="p">:</span><span class="n">cq</span>         <span class="n">quit</span> <span class="n">without</span> <span class="n">writing</span> <span class="n">and</span> <span class="k">return</span> <span class="n">error</span> <span class="nl">code</span>
</span><span class='line'>
</span><span class='line'><span class="p">:</span><span class="nl">wq</span>      <span class="p">:</span><span class="n">wq</span><span class="p">[</span><span class="o">!</span><span class="p">]</span>     <span class="n">write</span> <span class="n">the</span> <span class="n">current</span> <span class="n">file</span> <span class="n">and</span> <span class="nl">exit</span>
</span><span class='line'><span class="p">:</span><span class="nl">wq</span>      <span class="p">:</span><span class="n">wq</span><span class="p">[</span><span class="o">!</span><span class="p">]</span> <span class="p">{</span><span class="n">file</span><span class="p">}</span>     <span class="n">write</span> <span class="n">to</span> <span class="p">{</span><span class="n">file</span><span class="p">}</span> <span class="n">and</span> <span class="nl">exit</span>
</span><span class='line'><span class="p">:</span><span class="nl">xit</span>     <span class="p">:</span><span class="n">x</span><span class="p">[</span><span class="n">it</span><span class="p">][</span><span class="o">!</span><span class="p">]</span> <span class="p">[</span><span class="n">file</span><span class="p">]</span>    <span class="n">like</span> <span class="s">&quot;:wq&quot;</span> <span class="n">but</span> <span class="n">write</span> <span class="n">only</span> <span class="n">when</span> <span class="n">changes</span> <span class="n">have</span>
</span><span class='line'>                 <span class="n">been</span> <span class="n">made</span>
</span><span class='line'><span class="n">ZZ</span>      <span class="n">ZZ</span>          <span class="n">same</span> <span class="n">as</span> <span class="s">&quot;:x&quot;</span>
</span><span class='line'><span class="n">ZQ</span>      <span class="n">ZQ</span>          <span class="n">same</span> <span class="n">as</span> <span class="s">&quot;:q!&quot;</span>
</span><span class='line'><span class="o">:</span><span class="nl">xall</span>    <span class="p">:</span><span class="n">xa</span><span class="p">[</span><span class="n">ll</span><span class="p">][</span><span class="o">!</span><span class="p">]</span>  <span class="nl">or</span> <span class="p">:</span><span class="n">wqall</span><span class="p">[</span><span class="o">!</span><span class="p">]</span>
</span><span class='line'>              <span class="n">write</span> <span class="n">all</span> <span class="n">changed</span> <span class="n">buffers</span> <span class="n">and</span> <span class="nl">exit</span>
</span><span class='line'>
</span><span class='line'><span class="p">:</span><span class="nl">stop</span>    <span class="p">:</span><span class="n">st</span><span class="p">[</span><span class="n">op</span><span class="p">][</span><span class="o">!</span><span class="p">]</span>       <span class="n">suspend</span> <span class="n">Vim</span> <span class="n">or</span> <span class="n">start</span> <span class="k">new</span> <span class="n">shell</span><span class="p">;</span> <span class="k">if</span> <span class="err">&#39;</span><span class="n">aw</span><span class="err">&#39;</span> <span class="n">option</span>
</span><span class='line'>                 <span class="n">is</span> <span class="n">set</span> <span class="n">and</span> <span class="p">[</span><span class="o">!</span><span class="p">]</span> <span class="n">not</span> <span class="n">given</span> <span class="n">write</span> <span class="n">the</span> <span class="n">buffer</span>
</span><span class='line'><span class="n">CTRL</span><span class="o">-</span><span class="n">Z</span>     <span class="n">CTRL</span><span class="o">-</span><span class="n">Z</span>       <span class="n">same</span> <span class="n">as</span> <span class="s">&quot;:stop&quot;</span>
</span><span class='line'><span class="o">------------------------------------------------------------------------------</span>
</span><span class='line'><span class="o">*</span><span class="n">Q_ac</span><span class="o">*</span>       <span class="n">Automatic</span> <span class="n">Commands</span>
</span><span class='line'>
</span><span class='line'><span class="n">viminfo</span><span class="o">-</span><span class="n">file</span> <span class="n">read</span> <span class="n">registers</span><span class="p">,</span> <span class="n">marks</span><span class="p">,</span> <span class="n">history</span> <span class="n">at</span> <span class="n">startup</span><span class="p">,</span> <span class="n">save</span> <span class="n">when</span> <span class="n">exiting</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'><span class="o">:</span><span class="nl">rviminfo</span>  <span class="p">:</span><span class="n">rv</span><span class="p">[</span><span class="n">iminfo</span><span class="p">]</span> <span class="p">[</span><span class="n">file</span><span class="p">]</span>  <span class="n">read</span> <span class="n">info</span> <span class="n">from</span> <span class="n">viminfo</span> <span class="n">file</span> <span class="p">[</span><span class="n">file</span><span class="p">]</span>
</span><span class='line'><span class="o">:</span><span class="nl">rviminfo</span>  <span class="p">:</span><span class="n">rv</span><span class="p">[</span><span class="n">iminfo</span><span class="p">]</span><span class="o">!</span> <span class="p">[</span><span class="n">file</span><span class="p">]</span>  <span class="n">idem</span><span class="p">,</span> <span class="n">overwrite</span> <span class="n">existing</span> <span class="nl">info</span>
</span><span class='line'><span class="p">:</span><span class="nl">wviminfo</span>  <span class="p">:</span><span class="n">wv</span><span class="p">[</span><span class="n">iminfo</span><span class="p">]</span> <span class="p">[</span><span class="n">file</span><span class="p">]</span>  <span class="n">add</span> <span class="n">info</span> <span class="n">to</span> <span class="n">viminfo</span> <span class="n">file</span> <span class="p">[</span><span class="n">file</span><span class="p">]</span>
</span><span class='line'><span class="o">:</span><span class="nl">wviminfo</span>  <span class="p">:</span><span class="n">wv</span><span class="p">[</span><span class="n">iminfo</span><span class="p">]</span><span class="o">!</span> <span class="p">[</span><span class="n">file</span><span class="p">]</span>  <span class="n">write</span> <span class="n">info</span> <span class="n">to</span> <span class="n">viminfo</span> <span class="n">file</span> <span class="p">[</span><span class="n">file</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="n">modeline</span>   <span class="n">Automatic</span> <span class="n">option</span> <span class="n">setting</span> <span class="n">when</span> <span class="n">editing</span> <span class="n">a</span> <span class="n">file</span>
</span><span class='line'>
</span><span class='line'><span class="n">modeline</span>   <span class="nl">vim</span><span class="p">:{</span><span class="n">set</span><span class="o">-</span><span class="n">arg</span><span class="p">}</span><span class="o">:</span> <span class="p">..</span>  <span class="n">In</span> <span class="n">the</span> <span class="n">first</span> <span class="n">and</span> <span class="n">last</span> <span class="n">lines</span> <span class="n">of</span> <span class="n">the</span>
</span><span class='line'>                  <span class="n">file</span> <span class="p">(</span><span class="n">see</span> <span class="err">&#39;</span><span class="n">ml</span><span class="err">&#39;</span> <span class="n">option</span><span class="p">),</span> <span class="p">{</span><span class="n">set</span><span class="o">-</span><span class="n">arg</span><span class="p">}</span> <span class="n">is</span>
</span><span class='line'>                  <span class="n">given</span> <span class="n">as</span> <span class="n">an</span> <span class="n">argument</span> <span class="n">to</span> <span class="s">&quot;:set&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">autocommand</span>    <span class="n">Automatic</span> <span class="n">execution</span> <span class="n">of</span> <span class="n">commands</span> <span class="n">on</span> <span class="n">certain</span> <span class="n">events</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'><span class="o">:</span><span class="nl">autocmd</span>   <span class="p">:</span><span class="n">au</span>             <span class="n">list</span> <span class="n">all</span> <span class="nl">autocommands</span>
</span><span class='line'><span class="p">:</span><span class="nl">autocmd</span>   <span class="p">:</span><span class="n">au</span> <span class="p">{</span><span class="n">event</span><span class="p">}</span>        <span class="n">list</span> <span class="n">all</span> <span class="n">autocommands</span> <span class="k">for</span> <span class="p">{</span><span class="n">event</span><span class="p">}</span>
</span><span class='line'><span class="o">:</span><span class="nl">autocmd</span>   <span class="p">:</span><span class="n">au</span> <span class="p">{</span><span class="n">event</span><span class="p">}</span> <span class="p">{</span><span class="n">pat</span><span class="p">}</span>     <span class="n">list</span> <span class="n">all</span> <span class="n">autocommands</span> <span class="k">for</span> <span class="p">{</span><span class="n">event</span><span class="p">}</span>
</span><span class='line'>                    <span class="n">with</span> <span class="p">{</span><span class="n">pat</span><span class="p">}</span>
</span><span class='line'><span class="o">:</span><span class="nl">autocmd</span>   <span class="p">:</span><span class="n">au</span> <span class="p">{</span><span class="n">event</span><span class="p">}</span> <span class="p">{</span><span class="n">pat</span><span class="p">}</span> <span class="p">{</span><span class="n">cmd</span><span class="p">}</span>      <span class="n">enter</span> <span class="k">new</span> <span class="n">autocommands</span> <span class="k">for</span> <span class="p">{</span><span class="n">event</span><span class="p">}</span>
</span><span class='line'>                    <span class="n">with</span> <span class="p">{</span><span class="n">pat</span><span class="p">}</span>
</span><span class='line'><span class="o">:</span><span class="nl">autocmd</span>   <span class="p">:</span><span class="n">au</span><span class="o">!</span>             <span class="n">remove</span> <span class="n">all</span> <span class="nl">autocommands</span>
</span><span class='line'><span class="p">:</span><span class="nl">autocmd</span>   <span class="p">:</span><span class="n">au</span><span class="o">!</span> <span class="p">{</span><span class="n">event</span><span class="p">}</span>        <span class="n">remove</span> <span class="n">all</span> <span class="n">autocommands</span> <span class="k">for</span> <span class="p">{</span><span class="n">event</span><span class="p">}</span>
</span><span class='line'><span class="o">:</span><span class="nl">autocmd</span>   <span class="p">:</span><span class="n">au</span><span class="o">!</span> <span class="o">*</span> <span class="p">{</span><span class="n">pat</span><span class="p">}</span>         <span class="n">remove</span> <span class="n">all</span> <span class="n">autocommands</span> <span class="k">for</span> <span class="p">{</span><span class="n">pat</span><span class="p">}</span>
</span><span class='line'><span class="o">:</span><span class="nl">autocmd</span>   <span class="p">:</span><span class="n">au</span><span class="o">!</span> <span class="p">{</span><span class="n">event</span><span class="p">}</span> <span class="p">{</span><span class="n">pat</span><span class="p">}</span>     <span class="n">remove</span> <span class="n">all</span> <span class="n">autocommands</span> <span class="k">for</span> <span class="p">{</span><span class="n">event</span><span class="p">}</span>
</span><span class='line'>                    <span class="n">with</span> <span class="p">{</span><span class="n">pat</span><span class="p">}</span>
</span><span class='line'><span class="o">:</span><span class="nl">autocmd</span>   <span class="p">:</span><span class="n">au</span><span class="o">!</span> <span class="p">{</span><span class="n">event</span><span class="p">}</span> <span class="p">{</span><span class="n">pat</span><span class="p">}</span> <span class="p">{</span><span class="n">cmd</span><span class="p">}</span>  <span class="n">remove</span> <span class="n">all</span> <span class="n">autocommands</span> <span class="k">for</span> <span class="p">{</span><span class="n">event</span><span class="p">}</span>
</span><span class='line'>                    <span class="n">with</span> <span class="p">{</span><span class="n">pat</span><span class="p">}</span> <span class="n">and</span> <span class="n">enter</span> <span class="k">new</span> <span class="n">one</span>
</span><span class='line'><span class="o">------------------------------------------------------------------------------</span>
</span><span class='line'><span class="o">*</span><span class="n">Q_wi</span><span class="o">*</span>       <span class="n">Multi</span><span class="o">-</span><span class="n">window</span> <span class="n">commands</span>
</span><span class='line'>
</span><span class='line'><span class="n">CTRL</span><span class="o">-</span><span class="n">W_s</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">W</span> <span class="n">s</span>  <span class="nl">or</span>  <span class="p">:</span><span class="n">split</span>  <span class="n">split</span> <span class="n">window</span> <span class="n">into</span> <span class="n">two</span> <span class="nl">parts</span>
</span><span class='line'><span class="p">:</span><span class="nl">split_f</span>   <span class="p">:</span><span class="n">split</span> <span class="p">{</span><span class="n">file</span><span class="p">}</span>        <span class="n">split</span> <span class="n">window</span> <span class="n">and</span> <span class="n">edit</span> <span class="p">{</span><span class="n">file</span><span class="p">}</span> <span class="n">in</span> <span class="n">one</span> <span class="n">of</span>
</span><span class='line'>                     <span class="nl">them</span>
</span><span class='line'><span class="p">:</span><span class="nl">vsplit</span>    <span class="p">:</span><span class="n">vsplit</span> <span class="p">{</span><span class="n">file</span><span class="p">}</span>       <span class="n">same</span><span class="p">,</span> <span class="n">but</span> <span class="n">split</span> <span class="nl">vertically</span>
</span><span class='line'><span class="p">:</span><span class="nl">vertical</span>  <span class="p">:</span><span class="n">vertical</span> <span class="p">{</span><span class="n">cmd</span><span class="p">}</span>      <span class="n">make</span> <span class="p">{</span><span class="n">cmd</span><span class="p">}</span> <span class="n">split</span> <span class="nl">vertically</span>
</span><span class='line'>
</span><span class='line'><span class="p">:</span><span class="nl">sfind</span> <span class="p">:</span><span class="n">sf</span><span class="p">[</span><span class="n">ind</span><span class="p">]</span> <span class="p">{</span><span class="n">file</span><span class="p">}</span>     <span class="n">split</span> <span class="n">window</span><span class="p">,</span> <span class="n">find</span> <span class="p">{</span><span class="n">file</span><span class="p">}</span> <span class="n">in</span> <span class="err">&#39;</span><span class="n">path</span><span class="err">&#39;</span>
</span><span class='line'>                     <span class="n">and</span> <span class="n">edit</span> <span class="n">it</span>
</span><span class='line'><span class="n">CTRL</span><span class="o">-</span><span class="n">W_</span><span class="p">]</span>  <span class="n">CTRL</span><span class="o">-</span><span class="n">W</span> <span class="p">]</span>        <span class="n">split</span> <span class="n">window</span> <span class="n">and</span> <span class="n">jump</span> <span class="n">to</span> <span class="n">tag</span> <span class="n">under</span>
</span><span class='line'>                     <span class="n">cursor</span>
</span><span class='line'><span class="n">CTRL</span><span class="o">-</span><span class="n">W_f</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">W</span> <span class="n">f</span>        <span class="n">split</span> <span class="n">window</span> <span class="n">and</span> <span class="n">edit</span> <span class="n">file</span> <span class="n">name</span> <span class="n">under</span>
</span><span class='line'>                     <span class="n">the</span> <span class="n">cursor</span>
</span><span class='line'><span class="n">CTRL</span><span class="o">-</span><span class="n">W_</span><span class="o">^</span>  <span class="n">CTRL</span><span class="o">-</span><span class="n">W</span> <span class="o">^</span>        <span class="n">split</span> <span class="n">window</span> <span class="n">and</span> <span class="n">edit</span> <span class="n">alternate</span> <span class="n">file</span>
</span><span class='line'><span class="n">CTRL</span><span class="o">-</span><span class="n">W_n</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">W</span> <span class="n">n</span>  <span class="nl">or</span>  <span class="p">:</span><span class="k">new</span>    <span class="n">create</span> <span class="k">new</span> <span class="n">empty</span> <span class="n">window</span>
</span><span class='line'><span class="n">CTRL</span><span class="o">-</span><span class="n">W_q</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">W</span> <span class="n">q</span>  <span class="nl">or</span>  <span class="p">:</span><span class="n">q</span><span class="p">[</span><span class="n">uit</span><span class="p">]</span>    <span class="n">quit</span> <span class="n">editing</span> <span class="n">and</span> <span class="n">close</span> <span class="n">window</span>
</span><span class='line'><span class="n">CTRL</span><span class="o">-</span><span class="n">W_c</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">W</span> <span class="n">c</span>  <span class="nl">or</span>  <span class="p">:</span><span class="n">cl</span><span class="p">[</span><span class="n">ose</span><span class="p">]</span>   <span class="n">make</span> <span class="n">buffer</span> <span class="n">hidden</span> <span class="n">and</span> <span class="n">close</span> <span class="n">window</span>
</span><span class='line'><span class="n">CTRL</span><span class="o">-</span><span class="n">W_o</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">W</span> <span class="n">o</span>  <span class="nl">or</span>  <span class="p">:</span><span class="n">on</span><span class="p">[</span><span class="n">ly</span><span class="p">]</span>    <span class="n">make</span> <span class="n">current</span> <span class="n">window</span> <span class="n">only</span> <span class="n">one</span> <span class="n">on</span> <span class="n">the</span>
</span><span class='line'>                     <span class="n">screen</span>
</span><span class='line'>
</span><span class='line'><span class="n">CTRL</span><span class="o">-</span><span class="n">W_j</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">W</span> <span class="n">j</span>        <span class="n">move</span> <span class="n">cursor</span> <span class="n">to</span> <span class="n">window</span> <span class="n">below</span>
</span><span class='line'><span class="n">CTRL</span><span class="o">-</span><span class="n">W_k</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">W</span> <span class="n">k</span>        <span class="n">move</span> <span class="n">cursor</span> <span class="n">to</span> <span class="n">window</span> <span class="n">above</span>
</span><span class='line'><span class="n">CTRL</span><span class="o">-</span><span class="n">W_CTRL</span><span class="o">-</span><span class="n">W</span>  <span class="n">CTRL</span><span class="o">-</span><span class="n">W</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">W</span>     <span class="n">move</span> <span class="n">cursor</span> <span class="n">to</span> <span class="n">window</span> <span class="n">below</span> <span class="p">(</span><span class="n">wrap</span><span class="p">)</span>
</span><span class='line'><span class="n">CTRL</span><span class="o">-</span><span class="n">W_W</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">W</span> <span class="n">W</span>        <span class="n">move</span> <span class="n">cursor</span> <span class="n">to</span> <span class="n">window</span> <span class="n">above</span> <span class="p">(</span><span class="n">wrap</span><span class="p">)</span>
</span><span class='line'><span class="n">CTRL</span><span class="o">-</span><span class="n">W_t</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">W</span> <span class="n">t</span>        <span class="n">move</span> <span class="n">cursor</span> <span class="n">to</span> <span class="n">top</span> <span class="n">window</span>
</span><span class='line'><span class="n">CTRL</span><span class="o">-</span><span class="n">W_b</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">W</span> <span class="n">b</span>        <span class="n">move</span> <span class="n">cursor</span> <span class="n">to</span> <span class="n">bottom</span> <span class="n">window</span>
</span><span class='line'><span class="n">CTRL</span><span class="o">-</span><span class="n">W_p</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">W</span> <span class="n">p</span>        <span class="n">move</span> <span class="n">cursor</span> <span class="n">to</span> <span class="n">previous</span> <span class="n">active</span> <span class="n">window</span>
</span><span class='line'>
</span><span class='line'><span class="n">CTRL</span><span class="o">-</span><span class="n">W_r</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">W</span> <span class="n">r</span>        <span class="n">rotate</span> <span class="n">windows</span> <span class="n">downwards</span>
</span><span class='line'><span class="n">CTRL</span><span class="o">-</span><span class="n">W_R</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">W</span> <span class="n">R</span>        <span class="n">rotate</span> <span class="n">windows</span> <span class="n">upwards</span>
</span><span class='line'><span class="n">CTRL</span><span class="o">-</span><span class="n">W_x</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">W</span> <span class="n">x</span>        <span class="n">exchange</span> <span class="n">current</span> <span class="n">window</span> <span class="n">with</span> <span class="n">next</span> <span class="n">one</span>
</span><span class='line'>
</span><span class='line'><span class="n">CTRL</span><span class="o">-</span><span class="n">W_</span><span class="o">=</span>  <span class="n">CTRL</span><span class="o">-</span><span class="n">W</span> <span class="o">=</span>        <span class="n">make</span> <span class="n">all</span> <span class="n">windows</span> <span class="n">equal</span> <span class="n">height</span>
</span><span class='line'><span class="n">CTRL</span><span class="o">-</span><span class="n">W_</span><span class="o">-</span>  <span class="n">CTRL</span><span class="o">-</span><span class="n">W</span> <span class="o">-</span>        <span class="n">decrease</span> <span class="n">current</span> <span class="n">window</span> <span class="n">height</span>
</span><span class='line'><span class="n">CTRL</span><span class="o">-</span><span class="n">W_</span><span class="o">+</span>  <span class="n">CTRL</span><span class="o">-</span><span class="n">W</span> <span class="o">+</span>        <span class="n">increase</span> <span class="n">current</span> <span class="n">window</span> <span class="n">height</span>
</span><span class='line'><span class="n">CTRL</span><span class="o">-</span><span class="n">W__</span> <span class="n">CTRL</span><span class="o">-</span><span class="n">W</span> <span class="n">_</span>        <span class="n">set</span> <span class="n">current</span> <span class="n">window</span> <span class="n">height</span> <span class="p">(</span><span class="k">default</span><span class="o">:</span>
</span><span class='line'>                     <span class="n">very</span> <span class="n">high</span><span class="p">)</span>
</span><span class='line'><span class="o">------------------------------------------------------------------------------</span>
</span><span class='line'><span class="o">*</span><span class="n">Q_bu</span><span class="o">*</span>       <span class="n">Buffer</span> <span class="n">list</span> <span class="nl">commands</span>
</span><span class='line'>
</span><span class='line'><span class="p">:</span><span class="nl">buffers</span>   <span class="p">:</span><span class="n">buffers</span>  <span class="nl">or</span>  <span class="p">:</span><span class="n">files</span>    <span class="n">list</span> <span class="n">all</span> <span class="n">known</span> <span class="n">buffer</span> <span class="n">and</span> <span class="n">file</span> <span class="nl">names</span>
</span><span class='line'>
</span><span class='line'><span class="p">:</span><span class="nl">ball</span>      <span class="p">:</span><span class="n">ball</span>   <span class="nl">or</span>  <span class="p">:</span><span class="n">sball</span>  <span class="n">edit</span> <span class="n">all</span> <span class="n">args</span><span class="o">/</span><span class="nl">buffers</span>
</span><span class='line'><span class="p">:</span><span class="nl">unhide</span>    <span class="p">:</span><span class="n">unhide</span>   <span class="nl">or</span>  <span class="p">:</span><span class="n">sunhide</span>  <span class="n">edit</span> <span class="n">all</span> <span class="n">loaded</span> <span class="nl">buffers</span>
</span><span class='line'>
</span><span class='line'><span class="p">:</span><span class="nl">badd</span>      <span class="p">:</span><span class="n">badd</span> <span class="p">{</span><span class="n">fname</span><span class="p">}</span>        <span class="n">add</span> <span class="n">file</span> <span class="n">name</span> <span class="p">{</span><span class="n">fname</span><span class="p">}</span> <span class="n">to</span> <span class="n">the</span> <span class="nl">list</span>
</span><span class='line'><span class="p">:</span><span class="nl">bunload</span>   <span class="p">:</span><span class="n">bunload</span><span class="p">[</span><span class="o">!</span><span class="p">]</span> <span class="p">[</span><span class="n">N</span><span class="p">]</span>     <span class="n">unload</span> <span class="n">buffer</span> <span class="p">[</span><span class="n">N</span><span class="p">]</span> <span class="n">from</span> <span class="nl">memory</span>
</span><span class='line'><span class="p">:</span><span class="nl">bdelete</span>   <span class="p">:</span><span class="n">bdelete</span><span class="p">[</span><span class="o">!</span><span class="p">]</span> <span class="p">[</span><span class="n">N</span><span class="p">]</span>     <span class="n">unload</span> <span class="n">buffer</span> <span class="p">[</span><span class="n">N</span><span class="p">]</span> <span class="n">and</span> <span class="k">delete</span> <span class="n">it</span> <span class="n">from</span>
</span><span class='line'>                     <span class="n">the</span> <span class="n">buffer</span> <span class="n">list</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">in</span> <span class="n">current</span> <span class="n">window</span>  <span class="n">in</span> <span class="k">new</span> <span class="n">window</span>       <span class="o">~</span>
</span><span class='line'><span class="o">:</span><span class="nl">buffer</span>    <span class="p">:[</span><span class="n">N</span><span class="p">]</span><span class="n">buffer</span> <span class="p">[</span><span class="n">N</span><span class="p">]</span>     <span class="o">:</span><span class="p">[</span><span class="n">N</span><span class="p">]</span><span class="n">sbuffer</span> <span class="p">[</span><span class="n">N</span><span class="p">]</span>     <span class="n">to</span> <span class="n">arg</span><span class="o">/</span><span class="n">buf</span> <span class="nl">N</span>
</span><span class='line'><span class="p">:</span><span class="nl">bnext</span> <span class="p">:[</span><span class="n">N</span><span class="p">]</span><span class="n">bnext</span> <span class="p">[</span><span class="n">N</span><span class="p">]</span>      <span class="o">:</span><span class="p">[</span><span class="n">N</span><span class="p">]</span><span class="n">sbnext</span> <span class="p">[</span><span class="n">N</span><span class="p">]</span>      <span class="n">to</span> <span class="n">Nth</span> <span class="n">next</span> <span class="n">arg</span><span class="o">/</span><span class="nl">buf</span>
</span><span class='line'><span class="p">:</span><span class="nl">bNext</span> <span class="p">:[</span><span class="n">N</span><span class="p">]</span><span class="n">bNext</span> <span class="p">[</span><span class="n">N</span><span class="p">]</span>      <span class="o">:</span><span class="p">[</span><span class="n">N</span><span class="p">]</span><span class="n">sbNext</span> <span class="p">[</span><span class="n">N</span><span class="p">]</span>      <span class="n">to</span> <span class="n">Nth</span> <span class="n">previous</span> <span class="n">arg</span><span class="o">/</span><span class="nl">buf</span>
</span><span class='line'><span class="p">:</span><span class="nl">bprevious</span> <span class="p">:[</span><span class="n">N</span><span class="p">]</span><span class="n">bprevious</span> <span class="p">[</span><span class="n">N</span><span class="p">]</span>  <span class="o">:</span><span class="p">[</span><span class="n">N</span><span class="p">]</span><span class="n">sbprevious</span> <span class="p">[</span><span class="n">N</span><span class="p">]</span>  <span class="n">to</span> <span class="n">Nth</span> <span class="n">previous</span> <span class="n">arg</span><span class="o">/</span><span class="nl">buf</span>
</span><span class='line'><span class="p">:</span><span class="nl">bfirst</span>    <span class="p">:</span><span class="nl">bfirst</span>             <span class="p">:</span><span class="n">sbfirst</span>            <span class="n">to</span> <span class="n">first</span> <span class="n">arg</span><span class="o">/</span><span class="nl">buf</span>
</span><span class='line'><span class="p">:</span><span class="nl">blast</span> <span class="p">:</span><span class="nl">blast</span>              <span class="p">:</span><span class="n">sblast</span>             <span class="n">to</span> <span class="n">last</span> <span class="n">arg</span><span class="o">/</span><span class="nl">buf</span>
</span><span class='line'><span class="p">:</span><span class="nl">bmodified</span> <span class="p">:[</span><span class="n">N</span><span class="p">]</span><span class="n">bmod</span> <span class="p">[</span><span class="n">N</span><span class="p">]</span>       <span class="o">:</span><span class="p">[</span><span class="n">N</span><span class="p">]</span><span class="n">sbmod</span> <span class="p">[</span><span class="n">N</span><span class="p">]</span>       <span class="n">to</span> <span class="n">Nth</span> <span class="n">modified</span> <span class="n">buf</span>
</span><span class='line'><span class="o">------------------------------------------------------------------------------</span>
</span><span class='line'><span class="o">*</span><span class="n">Q_sy</span><span class="o">*</span>       <span class="n">Syntax</span> <span class="nl">Highlighting</span>
</span><span class='line'>
</span><span class='line'><span class="p">:</span><span class="n">syn</span><span class="o">-</span><span class="nl">on</span>  <span class="p">:</span><span class="n">syntax</span> <span class="n">on</span>     <span class="n">start</span> <span class="k">using</span> <span class="n">syntax</span> <span class="nl">highlighting</span>
</span><span class='line'><span class="p">:</span><span class="n">syn</span><span class="o">-</span><span class="nl">off</span> <span class="p">:</span><span class="n">syntax</span> <span class="n">off</span>        <span class="n">stop</span> <span class="k">using</span> <span class="n">syntax</span> <span class="nl">highlighting</span>
</span><span class='line'>
</span><span class='line'><span class="p">:</span><span class="n">syn</span><span class="o">-</span><span class="nl">keyword</span> <span class="p">:</span><span class="n">syntax</span> <span class="n">keyword</span> <span class="p">{</span><span class="n">group</span><span class="o">-</span><span class="n">name</span><span class="p">}</span> <span class="p">{</span><span class="n">keyword</span><span class="p">}</span> <span class="p">..</span>
</span><span class='line'>                  <span class="n">add</span> <span class="n">a</span> <span class="n">syntax</span> <span class="n">keyword</span> <span class="nl">item</span>
</span><span class='line'><span class="p">:</span><span class="n">syn</span><span class="o">-</span><span class="nl">match</span>   <span class="p">:</span><span class="n">syntax</span> <span class="n">match</span> <span class="p">{</span><span class="n">group</span><span class="o">-</span><span class="n">name</span><span class="p">}</span> <span class="p">{</span><span class="n">pattern</span><span class="p">}</span> <span class="p">...</span>
</span><span class='line'>                  <span class="n">add</span> <span class="n">syntax</span> <span class="n">match</span> <span class="nl">item</span>
</span><span class='line'><span class="p">:</span><span class="n">syn</span><span class="o">-</span><span class="nl">region</span>  <span class="p">:</span><span class="n">syntax</span> <span class="n">region</span> <span class="p">{</span><span class="n">group</span><span class="o">-</span><span class="n">name</span><span class="p">}</span> <span class="p">{</span><span class="n">pattern</span><span class="p">}</span> <span class="p">...</span>
</span><span class='line'>                  <span class="n">add</span> <span class="n">syntax</span> <span class="n">region</span> <span class="nl">item</span>
</span><span class='line'><span class="p">:</span><span class="n">syn</span><span class="o">-</span><span class="nl">sync</span>    <span class="p">:</span><span class="n">syntax</span> <span class="n">sync</span> <span class="p">[</span><span class="n">ccomment</span>  <span class="n">lines</span> <span class="p">{</span><span class="n">N</span><span class="p">}</span>  <span class="p">...]</span>
</span><span class='line'>                  <span class="n">tell</span> <span class="n">syntax</span> <span class="n">how</span> <span class="n">to</span> <span class="nl">sync</span>
</span><span class='line'><span class="p">:</span><span class="nl">syntax</span>    <span class="p">:</span><span class="n">syntax</span> <span class="p">[</span><span class="n">list</span><span class="p">]</span>       <span class="n">list</span> <span class="n">current</span> <span class="n">syntax</span> <span class="nl">items</span>
</span><span class='line'><span class="p">:</span><span class="n">syn</span><span class="o">-</span><span class="nl">clear</span>   <span class="p">:</span><span class="n">syntax</span> <span class="n">clear</span>      <span class="n">clear</span> <span class="n">all</span> <span class="n">syntax</span> <span class="nl">info</span>
</span><span class='line'>
</span><span class='line'><span class="p">:</span><span class="nl">highlight</span> <span class="p">:</span><span class="n">highlight</span> <span class="n">clear</span>   <span class="n">clear</span> <span class="n">all</span> <span class="n">highlight</span> <span class="nl">info</span>
</span><span class='line'><span class="p">:</span><span class="nl">highlight</span> <span class="p">:</span><span class="n">highlight</span> <span class="p">{</span><span class="n">group</span><span class="o">-</span><span class="n">name</span><span class="p">}</span> <span class="p">{</span><span class="n">key</span><span class="p">}</span><span class="o">=</span><span class="p">{</span><span class="n">arg</span><span class="p">}</span> <span class="p">..</span>
</span><span class='line'>                  <span class="n">set</span> <span class="n">highlighting</span> <span class="k">for</span> <span class="p">{</span><span class="n">group</span><span class="o">-</span><span class="n">name</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">:</span><span class="nl">filetype</span>  <span class="p">:</span><span class="n">filetype</span> <span class="n">on</span>       <span class="k">switch</span> <span class="n">on</span> <span class="n">file</span> <span class="n">type</span> <span class="n">detection</span><span class="p">,</span> <span class="n">without</span>
</span><span class='line'>                  <span class="n">syntax</span> <span class="nl">highlighting</span>
</span><span class='line'><span class="p">:</span><span class="nl">filetype</span>  <span class="p">:</span><span class="n">filetype</span> <span class="n">plugin</span> <span class="n">indent</span> <span class="n">on</span>
</span><span class='line'>                  <span class="k">switch</span> <span class="n">on</span> <span class="n">file</span> <span class="n">type</span> <span class="n">detection</span><span class="p">,</span> <span class="n">with</span>
</span><span class='line'>                  <span class="n">automatic</span> <span class="n">indenting</span> <span class="n">and</span> <span class="n">settings</span>
</span><span class='line'><span class="o">------------------------------------------------------------------------------</span>
</span><span class='line'><span class="o">*</span><span class="n">Q_gu</span><span class="o">*</span>       <span class="n">GUI</span> <span class="nl">commands</span>
</span><span class='line'>
</span><span class='line'><span class="p">:</span><span class="nl">gui</span>       <span class="p">:</span><span class="n">gui</span>          <span class="nl">UNIX</span><span class="p">:</span> <span class="n">start</span> <span class="n">the</span> <span class="nl">GUI</span>
</span><span class='line'><span class="p">:</span><span class="nl">gui</span>       <span class="p">:</span><span class="n">gui</span> <span class="p">{</span><span class="n">fname</span><span class="p">}</span> <span class="p">..</span>       <span class="n">idem</span><span class="p">,</span> <span class="n">and</span> <span class="n">edit</span> <span class="p">{</span><span class="n">fname</span><span class="p">}</span> <span class="p">..</span>
</span><span class='line'>
</span><span class='line'><span class="o">:</span><span class="nl">menu</span>      <span class="p">:</span><span class="n">menu</span>         <span class="n">list</span> <span class="n">all</span> <span class="nl">menus</span>
</span><span class='line'><span class="p">:</span><span class="nl">menu</span>      <span class="p">:</span><span class="n">menu</span> <span class="p">{</span><span class="n">mpath</span><span class="p">}</span>        <span class="n">list</span> <span class="n">menus</span> <span class="n">starting</span> <span class="n">with</span> <span class="p">{</span><span class="n">mpath</span><span class="p">}</span>
</span><span class='line'><span class="o">:</span><span class="nl">menu</span>      <span class="p">:</span><span class="n">menu</span> <span class="p">{</span><span class="n">mpath</span><span class="p">}</span> <span class="p">{</span><span class="n">rhs</span><span class="p">}</span> <span class="n">add</span> <span class="n">menu</span> <span class="p">{</span><span class="n">mpath</span><span class="p">},</span> <span class="n">giving</span> <span class="p">{</span><span class="n">rhs</span><span class="p">}</span>
</span><span class='line'><span class="o">:</span><span class="nl">menu</span>      <span class="p">:</span><span class="n">menu</span> <span class="p">{</span><span class="n">pri</span><span class="p">}</span> <span class="p">{</span><span class="n">mpath</span><span class="p">}</span> <span class="p">{</span><span class="n">rhs</span><span class="p">}</span>
</span><span class='line'>                  <span class="n">idem</span><span class="p">,</span> <span class="n">with</span> <span class="n">priorities</span> <span class="p">{</span><span class="n">pri</span><span class="p">}</span>
</span><span class='line'><span class="o">:</span><span class="nl">menu</span>      <span class="p">:</span><span class="n">menu</span> <span class="n">ToolBar</span><span class="p">.{</span><span class="n">name</span><span class="p">}</span> <span class="p">{</span><span class="n">rhs</span><span class="p">}</span>
</span><span class='line'>                  <span class="n">add</span> <span class="n">toolbar</span> <span class="n">item</span><span class="p">,</span> <span class="n">giving</span> <span class="p">{</span><span class="n">rhs</span><span class="p">}</span>
</span><span class='line'><span class="o">:</span><span class="nl">tmenu</span> <span class="p">:</span><span class="n">tmenu</span> <span class="p">{</span><span class="n">mpath</span><span class="p">}</span> <span class="p">{</span><span class="n">text</span><span class="p">}</span>   <span class="n">add</span> <span class="n">tooltip</span> <span class="n">to</span> <span class="n">menu</span> <span class="p">{</span><span class="n">mpath</span><span class="p">}</span>
</span><span class='line'><span class="o">:</span><span class="nl">unmenu</span>    <span class="p">:</span><span class="n">unmenu</span> <span class="p">{</span><span class="n">mpath</span><span class="p">}</span>      <span class="n">remove</span> <span class="n">menu</span> <span class="p">{</span><span class="n">mpath</span><span class="p">}</span>
</span><span class='line'><span class="o">------------------------------------------------------------------------------</span>
</span><span class='line'><span class="o">*</span><span class="n">Q_fo</span><span class="o">*</span>       <span class="n">Folding</span>
</span><span class='line'>
</span><span class='line'><span class="err">&#39;</span><span class="n">foldmethod</span><span class="err">&#39;</span> <span class="n">set</span> <span class="n">foldmethod</span><span class="o">=</span><span class="n">manual</span>   <span class="n">manual</span> <span class="n">folding</span>
</span><span class='line'>      <span class="n">set</span> <span class="n">foldmethod</span><span class="o">=</span><span class="n">indent</span>   <span class="n">folding</span> <span class="n">by</span> <span class="n">indent</span>
</span><span class='line'>      <span class="n">set</span> <span class="n">foldmethod</span><span class="o">=</span><span class="n">expr</span> <span class="n">folding</span> <span class="n">by</span> <span class="err">&#39;</span><span class="n">foldexpr</span><span class="err">&#39;</span>
</span><span class='line'>      <span class="n">set</span> <span class="n">foldmethod</span><span class="o">=</span><span class="n">syntax</span>   <span class="n">folding</span> <span class="n">by</span> <span class="n">syntax</span> <span class="n">regions</span>
</span><span class='line'>      <span class="n">set</span> <span class="n">foldmethod</span><span class="o">=</span><span class="n">marker</span>   <span class="n">folding</span> <span class="n">by</span> <span class="err">&#39;</span><span class="n">foldmarker</span><span class="err">&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">zf</span>     <span class="n">zf</span><span class="p">{</span><span class="n">motion</span><span class="p">}</span>      <span class="k">operator</span><span class="o">:</span> <span class="n">Define</span> <span class="n">a</span> <span class="n">fold</span> <span class="nl">manually</span>
</span><span class='line'><span class="p">:</span><span class="nl">fold</span>      <span class="p">:{</span><span class="n">range</span><span class="p">}</span><span class="n">fold</span>        <span class="n">define</span> <span class="n">a</span> <span class="n">fold</span> <span class="k">for</span> <span class="p">{</span><span class="n">range</span><span class="p">}</span> <span class="n">lines</span>
</span><span class='line'><span class="n">zd</span>     <span class="n">zd</span>           <span class="k">delete</span> <span class="n">one</span> <span class="n">fold</span> <span class="n">under</span> <span class="n">the</span> <span class="n">cursor</span>
</span><span class='line'><span class="n">zD</span>     <span class="n">zD</span>           <span class="k">delete</span> <span class="n">all</span> <span class="n">folds</span> <span class="n">under</span> <span class="n">the</span> <span class="n">cursor</span>
</span><span class='line'>
</span><span class='line'><span class="n">zo</span>     <span class="n">zo</span>           <span class="n">open</span> <span class="n">one</span> <span class="n">fold</span> <span class="n">under</span> <span class="n">the</span> <span class="n">cursor</span>
</span><span class='line'><span class="n">zO</span>     <span class="n">zO</span>           <span class="n">open</span> <span class="n">all</span> <span class="n">folds</span> <span class="n">under</span> <span class="n">the</span> <span class="n">cursor</span>
</span><span class='line'><span class="n">zc</span>     <span class="n">zc</span>           <span class="n">close</span> <span class="n">one</span> <span class="n">fold</span> <span class="n">under</span> <span class="n">the</span> <span class="n">cursor</span>
</span><span class='line'><span class="n">zC</span>     <span class="n">zC</span>           <span class="n">close</span> <span class="n">all</span> <span class="n">folds</span> <span class="n">under</span> <span class="n">the</span> <span class="n">cursor</span>
</span><span class='line'>
</span><span class='line'><span class="n">zm</span>     <span class="n">zm</span>           <span class="n">fold</span> <span class="nl">more</span><span class="p">:</span> <span class="n">decrease</span> <span class="err">&#39;</span><span class="n">foldlevel</span><span class="err">&#39;</span>
</span><span class='line'><span class="n">zM</span>     <span class="n">zM</span>           <span class="n">close</span> <span class="n">all</span> <span class="nl">folds</span><span class="p">:</span> <span class="n">make</span> <span class="err">&#39;</span><span class="n">foldlevel</span><span class="err">&#39;</span> <span class="n">zero</span>
</span><span class='line'><span class="n">zr</span>     <span class="n">zr</span>           <span class="n">reduce</span> <span class="nl">folding</span><span class="p">:</span> <span class="n">increase</span> <span class="err">&#39;</span><span class="n">foldlevel</span><span class="err">&#39;</span>
</span><span class='line'><span class="n">zR</span>     <span class="n">zR</span>           <span class="n">open</span> <span class="n">all</span> <span class="nl">folds</span><span class="p">:</span> <span class="n">make</span> <span class="err">&#39;</span><span class="n">foldlevel</span><span class="err">&#39;</span> <span class="n">max</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'><span class="n">zn</span>     <span class="n">zn</span>           <span class="n">fold</span> <span class="nl">none</span><span class="p">:</span> <span class="n">reset</span> <span class="err">&#39;</span><span class="n">foldenable</span><span class="err">&#39;</span>
</span><span class='line'><span class="n">zN</span>     <span class="n">zN</span>           <span class="n">fold</span> <span class="n">normal</span> <span class="n">set</span> <span class="err">&#39;</span><span class="n">foldenable</span><span class="err">&#39;</span>
</span><span class='line'><span class="n">zi</span>     <span class="n">zi</span>           <span class="n">invert</span> <span class="err">&#39;</span><span class="n">foldenable</span><span class="err">&#39;</span>
</span><span class='line'>
</span><span class='line'> <span class="nl">vim</span><span class="p">:</span><span class="n">tw</span><span class="o">=</span><span class="mi">78</span><span class="o">:</span><span class="n">ts</span><span class="o">=</span><span class="mi">8</span><span class="o">:</span><span class="n">ft</span><span class="o">=</span><span class="nl">help</span><span class="p">:</span><span class="nl">norl</span><span class="p">:</span>
</span></code></pre></td></tr></table></div></figure>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vim插件全攻略]]></title>
    <link href="http://LanderlYoung.github.io/blog/2014/05/07/vimcha-jian-quan-gong-lue/"/>
    <updated>2014-05-07T11:42:23+08:00</updated>
    <id>http://LanderlYoung.github.io/blog/2014/05/07/vimcha-jian-quan-gong-lue</id>
    <content type="html"><![CDATA[<p>原来配置vim插件的时候因为总是要下载解压，试用然后把.vim目录弄得乱七八糟。所以也就用了那几个插件，本着够用就好的原则。今天才发现Vim也有自己的插件管理工具<a href="https://github.com/gmarik/Vundle.vim">Vundle</a>真的是太开心了。然后又发现了有大神共享的<a href="https://github.com/humiaozuzu/dot-vimrc">插件列表</a>，于是我就开始了开开心心的Vim插件攻略。</p>

<!--more-->


<p>除了上面共享的插件列表我还装了另外几个插件：
* TagList
* A.vim</p>

<p><em>hell0</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[转]Linux初始配置]]></title>
    <link href="http://LanderlYoung.github.io/blog/2014/04/29/zhuan-linuxchu-shi-pei-zhi/"/>
    <updated>2014-04-29T10:11:07+08:00</updated>
    <id>http://LanderlYoung.github.io/blog/2014/04/29/zhuan-linuxchu-shi-pei-zhi</id>
    <content type="html"><![CDATA[<p>转载自：<a target="_blank" href="http://www.2cto.com/Article/201304/200418.html"><a href="http://www.2cto.com/Article/201304/200418.html">http://www.2cto.com/Article/201304/200418.html</a></a></p>

<p>昨天折腾了 Kali Linux 1.0，把大概的配置过程记录下来，希望对想接触或使用Kali Linux的同学有所帮助。</p>

<!--more-->


<p>请注意：</p>

<p>1.本文为<strong>面向新手的教程</strong>，没技术含量，没事瞎折腾，感觉好玩…..如果您可以熟练使用Debian Linux或者使用过Arch Linux、Gentoo或者是自己LFS你完全可以无视本文。</p>

<p>2.如果您使用kali Linux只作为渗透测试之用，rootoorotor建议您在kali.org直接<a target="_blank" href="http://www.2cto.com/soft" class="keylink" style="color:rgb(51, 51, 51); text-decoration:none">下载</a>Kali Linux VMware版本在虚拟机里使用（当然双系统也可以）。</p>

<p>3.如果您只是想试用或者感受Linux桌面环境，我建议您先使用Ubuntu 、LinuxMint、Deepin Linux 、 Fedora、Debian、OpenSUSE这几个发行版。</p>

<p>4.如果您是一名信息安全爱好者，并且对GNU/Linux有过一点点使用经验，<strong>想使用Kali Linux作为日常学习和使用</strong>，那么本文你适合你参考哦~</p>

<p>5.rootoorotor接触GNU/Linux发行版的时间不长，也是个新手。如果发现本文有疏漏，欢迎提醒！在下感激不尽~</p>

<p>6.kali Linux中的各种hacking软件本文不做讨论</p>

<p>Kali Linux 介绍：</p>

<p><a href="http://cn.docs.kali.org/category/introduction-cn">http://cn.docs.kali.org/category/introduction-cn</a></p>

<p>（官方文档）</p>

<p>Kali Linux 下载：</p>

<p><a href="http://www.kali.org/downloads/">http://www.kali.org/downloads/</a></p>

<p>安装Kali Linux：</p>

<p>请参考官方文档，以及在线搜索“Deiban Linux安装教程”或者 “Debian windows 双系统”。</p>

<p>比如： <a href="http://wenku.baidu.com/view/2b5b3149767f5acfa1c7cd51.html">http://wenku.baidu.com/view/2b5b3149767f5acfa1c7cd51.html</a></p>

<p>强烈建议参考官方在线文档：</p>

<p><a href="http://cn.docs.kali.org/category/installing-kali-linux-cn">http://cn.docs.kali.org/category/installing-kali-linux-cn</a></p>

<p>没有Linux安装经验的朋友建议先用虚拟机折腾</p>

<p>rootoorotor下载的是kali Linux 1.0 64位版本，在安装好之后就会进入kali linux默认的桌面环境(gnome-fallback)，如图所示：</p>

<p><img class="center" src="http://www.2cto.com/uploadfile/2013/0405/20130405053037648.png" width="345" height="614"></p>

<p>然后打开终端，输入</p>

<p><code>cat /etc/apt/sources.list</code></p>

<p>看看里面有没有一下三行kali官方源的地址（如果是断网安装，kali的默认源可能不会写入到这个文件里），如果没有，请在<code>/etc/apt/sources.list</code>中入这三行。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">deb</span> <span class="nl">http</span><span class="p">:</span><span class="c1">//http.kali.org/kali kali main non-free contrib</span>
</span><span class='line'><span class="n">deb</span><span class="o">-</span><span class="n">src</span> <span class="nl">http</span><span class="p">:</span><span class="c1">//http.kali.org/kali kali main non-free contrib</span>
</span><span class='line'><span class="n">deb</span> <span class="nl">http</span><span class="p">:</span><span class="c1">//security.kali.org/kali-security kali/updates main contrib non-free</span>
</span></code></pre></td></tr></table></div></figure>


<p>加入之后就可以对系统进行更新了，终端中输入：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">update</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">dist</span><span class="o">-</span><span class="n">upgrade</span>
</span></code></pre></td></tr></table></div></figure>


<p>安装BCM43XX系列无线网卡驱动：</p>

<p>由于我的本本比较渣，kali 默认不识别我的无线网卡（博通 BCM 4312）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">aptitude</span> <span class="n">install</span> <span class="n">firmware</span><span class="o">-</span><span class="n">b43</span><span class="o">-</span><span class="n">lpphy</span><span class="o">-</span><span class="n">installer</span>
</span></code></pre></td></tr></table></div></figure>


<p>关于BCM43XX系列的无线网卡驱动请参考Debian官方文档：</p>

<p><a href="http://wiki.debian.org/bcm43xx">http://wiki.debian.org/bcm43xx</a></p>

<p>安装完成之后重启在终端中输入：</p>

<p><em>iwconfig</em></p>

<p>看无线网卡是不是已经识别</p>

<p>安装英伟达显卡驱动请参考我上一篇博文：</p>

<p>Kali Linux 1.0安装NVIDIA显卡驱动</p>

<p><strong>中文化：</strong></p>

<p>Kali Linux的国际化做得真心不错，安装时如果你选择了中文语言，进入系统之后已经发现汉化完成了。如果安装时没有选择中文那么请参考一下的方法吧系统语言设置成中文：</p>

<p>点击右上角root —— System Settings —— Region and Language —— 点击“+”按键 —— Chinese（china） —— Select —— Chinese（simplified），重启电脑即可。</p>

<p>如果还不行也有可能是中文包没有安装，在终端中运行：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">dpkg</span><span class="o">-</span><span class="n">reconfigure</span> <span class="n">locales</span>
</span></code></pre></td></tr></table></div></figure>


<p>汉化浏iceweasel<a target="_blank" href="http://www.2cto.com/os/liulanqi/" class="keylink" style="color:rgb(51, 51, 51); text-decoration:none">浏览器</a>（Firefox）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">iceweasel</span><span class="o">-</span><span class="n">l10n</span><span class="o">-</span><span class="n">zh</span><span class="o">-</span><span class="n">cn</span>
</span></code></pre></td></tr></table></div></figure>


<p>在提示框中往下拉，开头位zh_CN的全部选择，然后确定，r然后在设置本地中文语言环境时选择 zh_CN.GBK 或者 zh_CN.UTF-8 确定，如果提示已经安装请，按照第一步的办法进入System Settings设置为中文。</p>

<p><strong>输入法安装：</strong></p>

<p>ibus:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">ibus</span> <span class="n">ibus</span><span class="o">-</span><span class="n">pinyin</span>
</span></code></pre></td></tr></table></div></figure>


<p>或者</p>

<p>fcitx</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">fcitx</span> <span class="n">fcitx</span><span class="o">-</span><span class="n">pinyin</span> <span class="n">fcitx</span><span class="o">-</span><span class="n">module</span><span class="o">-</span><span class="n">cloudpinyin</span> <span class="n">fcitx</span><span class="o">-</span><span class="n">googlepinyin</span>
</span></code></pre></td></tr></table></div></figure>


<p>安装完成之后，打开终端输入：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">im</span><span class="o">-</span><span class="n">config</span>
</span></code></pre></td></tr></table></div></figure>


<p>确认手工配置，选择你喜欢的输入法，如图：</p>

<p><img class="center" src="http://www.2cto.com/uploadfile/2013/0405/20130405053039870.png" width="440" height="610">
然后重启系统~</p>

<p>如果你使用的是ibus：</p>

<p>右键点击右上角的输入法图标 —— 首选项 —— 输入法+中文 —— 高级——勾上所有程序共享使用同一个输入法</p>

<p>如果你使用的是fcitx（小企鹅）：</p>

<p>小企鹅无需做过多配置，重启过后即可用。当然你也可以点击小企鹅输入法的托盘图标，做一些输入法的配置，比如字体、皮肤和云输入提示等</p>

<p>我个人比较喜欢fcitx，因为带云输入，感觉也比ibus流畅。</p>

<p><strong>建立普通用户<span style="color:rgb(255, 0, 0)">（非必要）：</span></strong></p>

<p>Kali Linux 与 Backtrack Linux一样，默认直接使用root用户，如果你想和其他Linux发行版一样使用普通用户请按照下面的步骤操作：</p>

<p><strong>1、建立一个普通用户：</strong></p>

<p>打开终端：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">adduser</span> <span class="err">用户名</span>
</span></code></pre></td></tr></table></div></figure>


<p>如图所示：</p>

<p><img class="center" src="http://www.2cto.com/uploadfile/2013/0405/20130405053040253.png" width="415" height="745"></p>

<p>在终端下输入：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">visudo</span>
</span></code></pre></td></tr></table></div></figure>


<p>按i之后进入编辑模式（插入），然后在文件的 root ALL=(ALL:ALL) ALL 的下方添加一个新的sudo用户例如XXX用户：XXX&nbsp;&nbsp; ALL=(ALL:ALL)</p>

<p>（ALL在文件visudo中被定义授予用户所有的命令权限）</p>

<p>如图所示：</p>

<p><img class="center" src="http://www.2cto.com/uploadfile/2013/0405/20130405053041263.png" width="514" height="659"></p>

<p>完成后按Esc键进入命令行模式，键入:w来保存</p>

<p>保存之后新建立就可以使用sudo命令了，重启或者注销来切换成新建立的用户即可。</p>

<p>（注意：使用普通用户时，默认的权限是比较低的，以至于一些程序无法正常运行，这是需要使用sudo命令来执行，比如sudo apt-get update，或者使用su命令在终端中切换至root用户之后执行）</p>

<p>然后把原有/root/目录下的配置文件复制到新建立的用户目录下（/home/新建立的用户名），并修改所有者为新建立的用户</p>

<p>终端中输入（root权限）：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">cp</span> <span class="o">-</span><span class="n">rf</span> <span class="o">/</span><span class="n">root</span><span class="o">/</span><span class="p">.</span> <span class="o">/</span><span class="n">home</span><span class="o">/</span><span class="err">新用户名</span>
</span><span class='line'>
</span><span class='line'><span class="n">chown</span> <span class="o">-</span><span class="n">R</span> <span class="err">新用户名</span><span class="o">:</span><span class="err">新用户名</span> <span class="o">/</span><span class="n">home</span><span class="o">/</span><span class="err">新用户名</span>
</span></code></pre></td></tr></table></div></figure>


<p>这样普通用户的配置就完成了。</p>

<p>开启Gnome 3的标准模式：</p>

<p>Kali Linux的桌面环境已经升级为Gnome 3，但默认运行在fallback模式。想<strong>临时</strong>切换成gnome3的标准模式请在终端输入：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">gnome</span><span class="o">-</span><span class="n">shell</span> <span class="err">–</span><span class="n">replace</span>
</span></code></pre></td></tr></table></div></figure>


<p>gnome 3的标准模式支持一些桌面特效开启还有很多gnome-shell插件，如果您觉得比较好用请输入下面的命令使系统在启动时，自动进入gnome-shell的标准模式。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">gsettings</span> <span class="n">set</span> <span class="n">org</span><span class="p">.</span><span class="n">gnome</span><span class="p">.</span><span class="n">desktop</span><span class="p">.</span><span class="n">session</span> <span class="n">session</span><span class="o">-</span><span class="n">name</span> <span class="n">gnome</span>
</span></code></pre></td></tr></table></div></figure>


<p>若想还原默认的桌面请输入：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">gsettings</span> <span class="n">set</span> <span class="n">org</span><span class="p">.</span><span class="n">gnome</span><span class="p">.</span><span class="n">desktop</span><span class="p">.</span><span class="n">session</span> <span class="n">session</span><span class="o">-</span><span class="n">name</span> <span class="n">gnome</span><span class="o">-</span><span class="n">fallback</span>
</span></code></pre></td></tr></table></div></figure>


<p>注销或者重启之后进入桌面即可直接进入您要切换的模式。</p>

<p>关于如何定制gnome，请参考：</p>

<p><a href="https://wiki.archlinux.org/index.php/GNOME_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29">archlinux wiki</a></p>

<p>另外，如果您实在不喜欢gnome-shell桌面环境，可以参考这里或者自行上网搜索</p>

<p><a href="http://cn.docs.kali.org/live-build-cn/%E5%AE%9A%E5%88%B6kali%E7%9A%84%E6%A1%8C%E9%9D%A2%E7%B3%BB%E7%BB%9F">kali linux doc</a></p>

<p><strong>一些常用软件：</strong></p>

<p>1.官方源中的软件（可以通过apt-get install直接安装）：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">gnome</span><span class="o">-</span><span class="n">tweak</span><span class="o">-</span><span class="n">tool</span>
</span><span class='line'>
</span><span class='line'><span class="err">（</span><span class="n">gnome</span><span class="o">-</span><span class="n">shell</span><span class="err">管理软件可以修改字体、管理插件、管理桌面主题。必备！）</span>
</span><span class='line'>
</span><span class='line'><span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">gdebi</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="err">有了这个安装软件就不用在终端中</span><span class="n">dpkg</span> <span class="o">-</span><span class="n">i</span> <span class="err">安装了，提供图形化软件安装方式</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">nautilus</span><span class="o">-</span><span class="n">open</span><span class="o">-</span><span class="n">terminal</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="err">鼠标右键在当前目录打开终端</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">flashplugin</span><span class="o">-</span><span class="n">nonfree</span>
</span><span class='line'>
</span><span class='line'><span class="err">（浏览器</span><span class="n">flash</span><span class="err">插件）</span>
</span><span class='line'>
</span><span class='line'><span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">synaptic</span>
</span><span class='line'>
</span><span class='line'><span class="err">（新立得软件包管理器）</span>
</span><span class='line'>
</span><span class='line'><span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">file</span><span class="o">-</span><span class="n">roller</span>
</span><span class='line'>
</span><span class='line'><span class="err">（压缩文件管理工具）</span>
</span><span class='line'>
</span><span class='line'><span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">amule</span>
</span><span class='line'>
</span><span class='line'><span class="err">（电骡）</span>
</span><span class='line'>
</span><span class='line'><span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">remmina</span><span class="o">*</span>
</span><span class='line'>
</span><span class='line'><span class="err">（远程桌面</span><span class="o">+</span><span class="err">扩展）</span>
</span><span class='line'>
</span><span class='line'><span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">geany</span>
</span><span class='line'>
</span><span class='line'><span class="err">（一个轻巧的</span><span class="n">IDE</span><span class="err">，如果您喜欢折腾</span><span class="n">emacs</span><span class="err">或者</span><span class="n">VIM</span><span class="err">就不用安装这个了）</span>
</span><span class='line'>
</span><span class='line'><span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">bluefish</span>
</span><span class='line'>
</span><span class='line'><span class="err">（一个强大的</span><span class="n">Web</span><span class="err">编辑器）</span>
</span><span class='line'>
</span><span class='line'><span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span><span class="o">&amp;</span><span class="n">nbsp</span><span class="p">;</span> <span class="n">meld</span>
</span><span class='line'>
</span><span class='line'><span class="err">（一款可视化的文件及目录对比、合并工具）</span>
</span><span class='line'>
</span><span class='line'><span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">audacious</span><span class="o">&lt;</span><span class="n">br</span><span class="o">&gt;</span>
</span><span class='line'><span class="err">（一个轻量级音乐播放器）</span>
</span></code></pre></td></tr></table></div></figure>


<p>3.安装QQ2012：</p>

<p>Kali Linux 1.0 （64位）安装 QQ2012</p>

<p>4.安装WPS office for Linux：</p>

<p>Kali Linux 1.0 （64位）安装WPS office for Linux</p>

<p>5.Virtualbox<a target="_blank" href="http://www.2cto.com/os/xuniji/" class="keylink" style="color:rgb(51, 51, 51); text-decoration:none">虚拟机</a>：</p>

<p>使用前要先</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">libqt4</span><span class="o">-</span><span class="n">opengl</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://www.virtualbox.org/wiki/Linux_Downloads">https://www.virtualbox.org/wiki/Linux_Downloads</a></p>

<p>Gnome3有扩展系统，可以在线安装扩展，</p>

<p>Gnome Extensions网站</p>

<p><strong>一些美化工作：</strong></p>

<p>进入标准模式之后，鼠标往屏幕左上角一戳即可打开程序窗口，点击全部程序会看到很多满屏幕的黑龙图标，感觉略丑</p>

<p>如图：</p>

<p><img class="center" src="http://www.2cto.com/uploadfile/2013/0405/20130405053042483.png" width="440" height="614"></p>

<p>如果想隐藏图标，可以打开系统工具——主菜单 来选择隐藏，如果您再使用这个工具时没有看见Kali Linux菜单, 请下载我修改好的文件放入 /home/你的用户名/.config/menus 文件夹，然后使用组合键alt+F2输入r ——回车，既可重启gome-shell</p>

<p>然后在重新打开系统工具——主菜单即可，去掉构√即可隐藏图标：</p>

<p>下载地址：<a href="http://dl.vmall.com/c09noj4d81">http://dl.vmall.com/c09noj4d81</a></p>

<p>（注意：“.”开头的目录或文件是隐藏的，按ctrl+H才可查看，或者在终端中输入 ls -a）</p>

<p><img class="center" src="http://www.2cto.com/uploadfile/2013/0405/20130405053044953.png" width="364" height="446"></p>

<h2>安装Faenza图标：</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">wget</span> <span class="nl">http</span><span class="p">:</span><span class="c1">//faenza-icon-theme.googlecode.com/files/faenza-icon-theme_1.3.zip</span>
</span><span class='line'>
</span><span class='line'><span class="n">unzip</span> <span class="n">faenza</span><span class="o">-</span><span class="n">icon</span><span class="o">-</span><span class="n">theme_1</span><span class="mf">.3</span><span class="p">.</span><span class="n">zip</span>
</span><span class='line'>
</span><span class='line'><span class="n">chmod</span> <span class="n">u</span><span class="o">+</span><span class="n">x</span> <span class="n">INSTALL</span>
</span><span class='line'>
</span><span class='line'><span class="p">.</span><span class="o">/</span><span class="n">INSTALL</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后根据提示安装即可，安装完成之后使用gnome-tweak-tool工具更换图标：</p>

<p><img class="center" src="http://www.2cto.com/uploadfile/2013/0405/20130405053045872.png" width="499" height="643"></p>

<p><strong>优化字体显示：</strong></p>

<p>Kali Linux的默认中文字体显示已经比较不错了，但我个人还是喜欢文泉驿的字体。</p>

<p><code>apt-get install ttf-wqy-microhei ttf-wqy-zenhei xfonts-wqy</code></p>

<p>安装完成之后打开这个网页</p>

<p><a href="">http://wenq.org/cloud/fcdesigner.html</a></p>

<p>把你喜欢的字体优先级调到最高，然后点击”生成“保存成.fonts.conf文件放入home/你的用户名目录下，最好root目录下也拷贝一份，因为有些程序是以root账户来运行的。</p>

<p>最后在gnome-tweak-tool工具中更改字体</p>

<p>关于Deiban字体显示优化，可以看看 <a href="http://edyfox.codecarver.org/html/debian_testing_chinese.html">这里</a></p>

<p>如果通过以上设置的字体显示效果还无法满足你的需求，你可以折腾Debian的字体渲染Infinality补丁（在Fedora下很出名的字体渲染补丁，渲染效果极好）</p>

<p>使用这个补丁之前，请先apt-get install devscripts 安装包构建脚本 ，然后根据dpkg-checkbuilddeps中显示缺少什么依赖就用apt-get 安装什么，步骤比较简单本文就不做详细描述了</p>

<p><a href="http://forums.debian.net/viewtopic.php?f=16&amp;t=88545">debian forums</a></p>

<p>渲染之后的显示效果截图：</p>

<p><img class="center" src="http://www.2cto.com/uploadfile/2013/0405/20130405053046521.png"" width="544" height="587"></p>

<p><strong>修改启动分辨率：</strong></p>

<p>感觉启动引导菜单和tty的分辨率比较蛋疼？按照如下方法修改即可：</p>

<p>（root权限运行）</p>

<p>1.使用编辑器编辑/etc/default/grub 这个文件</p>

<p>比如我使用vim</p>

<p><code>vim /etc/default/grub</code></p>

<p>找到 #GRUB_GFXMODE=640×480&nbsp; 取消这一行前面的注释符“#”并将后面的数字修改为一个合适的值，不需要太高，比如1024×768。这个值同时会影响grub启动菜单和控制台里文字的分辨率。</p>

<p>2.修改 /etc/grub.d/00_header 这个文件</p>

<p><code>vim /etc/grub.d/00_header</code>
查找关键字<code>set gfxmode=${GRUB_GFXMODE}</code>，然后在这行下面添加新行， 内容是：<code>set gfxpayload=keep</code></p>

<p>3.更新Grub配置</p>

<p><code>update-grub</code></p>

<p><strong>总结：</strong></p>

<p>如果使用Kali&nbsp;<a target="_blank" href="http://www.2cto.com/os/linux/" class="keylink" style="color:rgb(51, 51, 51); text-decoration:none">Linux</a>用与日常使用统，按照以上的配置也差不多了，以后我会继续补充。</p>

<p>到此为止，Kali Linux的桌面环境基本折腾完成，上图：</p>

<p><img class="center" src="http://www.2cto.com/uploadfile/2013/0405/20130405053047828.png" width="345" height="614"></p>

<p><img class="center" src="http://www.2cto.com/uploadfile/2013/0405/20130405053049272.png" width="345" height="614"></p>
]]></content>
  </entry>
  
</feed>
